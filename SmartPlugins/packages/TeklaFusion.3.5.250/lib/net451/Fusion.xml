<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusion</name>
    </assembly>
    <members>
        <member name="T:Fusion.App">
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
            <summary>
            An abstract base class for applications.
            </summary>
        </member>
        <member name="F:Fusion.App.diagnosticWindow">
            <summary>
            The diagnostic window.
            </summary>
        </member>
        <member name="M:Fusion.App.ShowMessageDialog(Fusion.App.Feature,System.String,System.String,System.String,System.String[],System.String,System.String)">
            <summary>
            Shows a message dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <param name="icon">The icon geometry resource key, or null for no icon.</param>
            <param name="buttons">The texts or resource keys for the buttons.</param>
            <param name="defaultButton">The text or resource key for the default button.</param>
            <param name="cancelButton">The text or resource key for the cancel button.</param>
            <returns>The selected button or null if the dialog was closed with other means.</returns>
        </member>
        <member name="M:Fusion.App.ShowProgressDialog(Fusion.App.Feature,System.Action{Fusion.Progress})">
            <summary>
            Shows a modal progress dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="backgroundOperation">The action to invoke in a background thread.</param>
            <returns>True if the operation was completed successfully, false if the operation was canceled.</returns>
        </member>
        <member name="M:Fusion.App.ShowDiagnosticWindow(Fusion.App.Feature)">
            <summary>
            Shows the diagnostic window.
            </summary>
            <param name="feature">The source feature.</param>
        </member>
        <member name="T:Fusion.App.Feature">
            <summary>
            An abstract base class for application features. Feature is an autonomous module in an application.
            </summary>
            <summary>
            An abstract base class for application features. Feature is an autonomous module in an application.
            </summary>
            <summary>
            An abstract base class for application features. Feature is an autonomous module in an application.
            </summary>
            <summary>
            An abstract base class for application features. Feature is an autonomous module in an application.
            </summary>
            <summary>
            An abstract base class for application features. Feature is an autonomous module in an application.
            </summary>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowMessageDialog(System.String,System.String,System.String,System.String[],System.String,System.String)">
            <summary>
            Shows a message dialog.
            </summary>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <param name="icon">The icon geometry resource key, or null for no icon.</param>
            <param name="buttons">The texts or resource keys for the buttons.</param>
            <param name="defaultButton">The default button.</param>
            <param name="cancelButton">The cancel button.</param>
            <returns>The selected button or null if the dialog was closed with other means.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowProgressDialog(System.Action{Fusion.Progress})">
            <summary>
            Shows a modal progress dialog.
            </summary>
            <param name="backgroundOperation">The action to invoke in a background thread.</param>
            <returns>True if the operation was completed successfully, false if the operation was canceled.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowDiagnosticWindow">
            <summary>
            Shows the diagnostic window.
            </summary>
        </member>
        <member name="M:Fusion.App.Feature.Initialize">
            <summary>
            Initializes the feature.
            </summary>
        </member>
        <member name="M:Fusion.App.Feature.InitializeDomainLogic">
            <summary>
            Initializes the feature domain logic.
            </summary>
        </member>
        <member name="M:Fusion.App.Feature.Starting(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the application is starting.
            </summary>
            <param name="starting">The cancelable event.</param>
        </member>
        <member name="M:Fusion.App.Feature.Running(System.String[])">
            <summary>
            Called when the application is running.
            </summary>
            <param name="arguments">The command line arguments.</param>
        </member>
        <member name="M:Fusion.App.Feature.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Fusion.App.Feature.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is released.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Fusion.App.Feature.Stopping(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the application is stopping.
            </summary>
            <param name="stopping">The cancelable event.</param>
        </member>
        <member name="M:Fusion.App.Feature.Dispose">
            <summary>
            Terminates the feature.
            </summary>
        </member>
        <member name="F:Fusion.App.Feature.host">
            <summary>
            The host override.
            </summary>
        </member>
        <member name="P:Fusion.App.Feature.Host">
            <summary>
            Gets or sets the host services.
            </summary>
            <value>The host services.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#UI">
            <summary>
            Gets the host UI.
            </summary>
            <value>The host UI.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#Diagnostics">
            <summary>
            Gets the host diagnostics.
            </summary>
            <value>The host diagnostics.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#User">
            <summary>
            Gets the host user information.
            </summary>
            <value>The host user information.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#Settings">
            <summary>
            Gets the host settings.
            </summary>
            <value>The host settings.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#Recovery">
            <summary>
            Gets the host recovery information.
            </summary>
            <value>The host recovery information.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#Session">
            <summary>
            Gets the host session information.
            </summary>
            <value>The host session information.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#DataFolder">
            <summary>
            Gets the path to the host data folder.
            </summary>
            <value>The path to the host data folder.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHost#TempFolder">
            <summary>
            Gets the path to the host temp folder.
            </summary>
            <value>The path to the host temp folder.</value>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#InvokeDomainLogic(System.Action)">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#InvokeDomainLogic``1(System.Func{``0})">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#Invoke``1(System.Action{``0})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#Invoke``1(System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#Invoke``2(System.Func{``0,``1})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#Invoke``2(System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#StartExternalService(Fusion.RemoteObject)">
            <summary>
            Starts an external service.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#StartExternalProgram(System.String,System.String[])">
            <summary>
            Starts an external program. The connection name is passed as the first command line argument.
            </summary>
            <param name="path">The path to the external program. If the path is relative, the root is the application folder.</param>
            <param name="extraCommandLineArguments">The extra command line arguments.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#Shutdown">
            <summary>
            Requests the host to shut down.
            </summary>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHost#Restart">
            <summary>
            Requests the host to shut down and restart.
            </summary>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostDiagnostics#Error(System.String,System.Object[])">
            <summary>
            Writes an error message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostDiagnostics#Warning(System.String,System.Object[])">
            <summary>
            Writes a warning message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostDiagnostics#Information(System.String,System.Object[])">
            <summary>
            Writes an information message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostDiagnostics#MeasurePerformance(System.String,System.Object[])">
            <summary>
            Measures the performance of an operation and writes the result to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
            <returns>The disposable token that ends the measurement.</returns>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHostUI#Help">
            <summary>
            Gets or sets the help provider.
            </summary>
            <value>The help provider.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHostUI#Resources">
            <summary>
            Gets the host UI resources.
            </summary>
            <value>The host UI resources.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHostUI#PublishedViews">
            <summary>
            Gets the published views.
            </summary>
            <value>The published views.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHostUI#FullScreenMode">
            <summary>
            Gets or sets a value indicating whether the full screen mode is enabled.
            </summary>
            <value>True if the full screen mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.Feature.Fusion#IHostUI#TabletMode">
            <summary>
            Gets or sets a value indicating whether the tablet mode is enabled.
            </summary>
            <value>True if the tablet mode is enabled, otherwise false.</value>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#RegisterKeyboardShortcut(System.String,System.Action)">
            <summary>
            Registers a keyboard shortcut.
            </summary>
            <param name="gesture">The gesture. May include modifiers such as "Control+Shift+A".</param>
            <param name="action">The action to perform when the keyboard shortcut is pressed.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowWindow(System.String,System.Object)">
            <summary>
            Shows a child window.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The window controller.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowDialog(System.String,System.Object)">
            <summary>
            Shows a modal dialog.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The dialog result or null if the dialog did not provide any result.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowOpenFilePickerDialog(System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowOpenFilePickerDialog(System.String,System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowSaveFilePickerDialog(System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowSaveFilePickerDialog(System.String,System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowFolderPickerDialog(System.String,System.String)">
            <summary>
            Shows a modal folder picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <returns>The selected folder path or null if no folder was selected.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#ShowCredentialDialog(System.String,System.String)">
            <summary>
            Shows a modal credential dialog.
            </summary>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <returns>The session credential or null if the credential was not supplied.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#RegisterCommandObserver(Fusion.ICommandObserver)">
            <summary>
            Registers a command observer.
            </summary>
            <param name="commandObserver">The command observer.</param>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#GetResource(System.Object)">
            <summary>
            Gets the resource.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The resource or null if the resource was not found.</returns>
        </member>
        <member name="M:Fusion.App.Feature.Fusion#IHostUI#GetLocalizedText(System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The localized text or the default fall back value if the localized text was not found.</returns>
        </member>
        <member name="M:Fusion.App.BlockingOperation">
            <summary>
            Prepares for a long blocking operation in the UI thread.
            </summary>
            <returns>Disposable token that marks the end of the blocking operation.</returns>
        </member>
        <member name="T:Fusion.App.DefaultWindow">
            <summary>
            The default window that is never shown. This is used only as a placeholder to indicate that the application has no main window.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultWindow.Instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultWindow.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Fusion.App.DefaultWindow"/> class from being created.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultWindow.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.App.KeyValueStore">
            <summary>
            An abstract base class for key-value stores.
            </summary>
        </member>
        <member name="F:Fusion.App.KeyValueStore.defaults">
            <summary>
            The default values.
            </summary>
        </member>
        <member name="F:Fusion.App.KeyValueStore.overrides">
            <summary>
            The override values.
            </summary>
        </member>
        <member name="M:Fusion.App.KeyValueStore.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.RegistryKeyValueStore" /> class.
            </summary>
            <param name="defaults">The default values.</param>
        </member>
        <member name="P:Fusion.App.KeyValueStore.Count">
            <summary>
            Gets the number of entries in the store.
            </summary>
            <value>The number of entries in the store.</value>
        </member>
        <member name="P:Fusion.App.KeyValueStore.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Fusion.App.KeyValueStore.Item(System.String)">
            <summary>
            Gets or sets the value for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value or null if the value is not available.</returns>
        </member>
        <member name="M:Fusion.App.KeyValueStore.Override(System.String,System.String)">
            <summary>
            Overrides the specified key and value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Fusion.App.KeyValueStore.GetKeys">
            <summary>
            Gets the keys.
            </summary>
            <returns>The keys.</returns>
        </member>
        <member name="M:Fusion.App.KeyValueStore.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns>The value or null if the value is not available.</returns>
        </member>
        <member name="M:Fusion.App.KeyValueStore.SetValue(System.String,System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Fusion.App.KeyValueStore.RemoveValue(System.String)">
            <summary>
            Removes the value.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="F:Fusion.App.BusyCursors">
            <summary>
            The busy cursors.
            </summary>
        </member>
        <member name="F:Fusion.App.nextBusyCursor">
            <summary>
            The next busy cursor number.
            </summary>
        </member>
        <member name="F:Fusion.App.notBusyCount">
            <summary>
            The not busy count.
            </summary>
        </member>
        <member name="M:Fusion.App.Busy(System.Windows.Input.Cursor)">
            <summary>
            Indicates that the application is busy.
            </summary>
            <param name="busyCursor">The busy cursor. The default value is null.</param>
            <returns>The disposable token that restored the previous cursor.</returns>
        </member>
        <member name="M:Fusion.App.NotBusy">
            <summary>
            Indicates that the application is not busy.
            </summary>
            <returns>The disposable token that restored the previous cursor.</returns>
        </member>
        <member name="M:Fusion.App.UpdateOverrideCursor">
            <summary>
            Updates the mouse override cursor.
            </summary>
        </member>
        <member name="T:Fusion.App.DefaultHelpProvider">
            <summary>
            The default help provider.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultHelpProvider.Instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHelpProvider.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Fusion.App.DefaultHelpProvider"/> class from being created.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHelpProvider.RequestHelp(System.String)">
            <summary>
            Requests help for the specified topic.
            </summary>
            <param name="topic">The help topic.</param>
        </member>
        <member name="T:Fusion.App.DefaultHostUser">
            <summary>
            Default host user information provider.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultHostUser.Instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Fusion.App.DefaultHostUser"/> class from being created.
            </summary>
        </member>
        <member name="P:Fusion.App.DefaultHostUser.Authentication">
            <summary>
            Gets the user authentication provider.
            </summary>
            <value>The user authentication provider.</value>
        </member>
        <member name="P:Fusion.App.DefaultHostUser.Authorization">
            <summary>
            Gets the user authorization provider.
            </summary>
            <value>The user authorization provider.</value>
        </member>
        <member name="P:Fusion.App.DefaultHostUser.Cookies">
            <summary>
            Gets the session cookies.
            </summary>
            <value>The session cookies.</value>
        </member>
        <member name="P:Fusion.App.DefaultHostUser.Credentials">
            <summary>
            Gets the user credential provider.
            </summary>
            <value>The user credential provider.</value>
        </member>
        <member name="P:Fusion.App.DefaultHostUser.Profile">
            <summary>
            Gets the user profile provider.
            </summary>
            <value>The user profile provider.</value>
        </member>
        <member name="T:Fusion.App.DefaultHostUser.DefaultAuthenticationToken">
            <summary>
            Default authentication token.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultHostUser.DefaultAuthenticationToken.tokenString">
            <summary>
            The token string.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthenticationToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.DefaultHostUser.DefaultAuthenticationToken"/> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthenticationToken.Dispose">
            <summary>
            Invalidates the token to prevent further use.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthenticationToken.IsValidFor(System.TimeSpan)">
            <summary>
            Determines whether the token is valid for the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns>True if the token is valid for the duration, otherwise false.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthenticationToken.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.App.DefaultHostUser.DefaultAuthorizationToken">
            <summary>
            Default authorization token.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultHostUser.DefaultAuthorizationToken.tokenString">
            <summary>
            The token string.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthorizationToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.DefaultHostUser.DefaultAuthorizationToken"/> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthorizationToken.Dispose">
            <summary>
            Invalidates the token to prevent further use.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthorizationToken.IsValidFor(System.TimeSpan)">
            <summary>
            Determines whether the token is valid for the specified action and duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns>True if the token is valid for the duration, otherwise false.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultAuthorizationToken.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.App.DefaultHostUser.DefaultUserAuthentication">
            <summary>
            Default user authentication provider.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultHostUser.DefaultUserAuthentication.currentToken">
            <summary>
            The current authentication token.
            </summary>
        </member>
        <member name="E:Fusion.App.DefaultHostUser.DefaultUserAuthentication.TokenChanged">
            <summary>
            Occurs when the authentication token is changed.
            </summary>
        </member>
        <member name="P:Fusion.App.DefaultHostUser.DefaultUserAuthentication.Token">
            <summary>
            Gets or sets the authentication token for the current user.
            </summary>
            <value>The authentication token or null if the current user is not authenticated.</value>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthentication.RequestToken(System.Net.ICredentials)">
            <summary>
            Requests a new authentication token.
            </summary>
            <param name="credentials">The user credentials, if available.</param>
            <returns>The authentication response with the new token.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthentication.RequestRenew(Fusion.AuthenticationToken,System.Net.ICredentials)">
            <summary>
            Requests a renew for the specified authentication token.
            </summary>
            <param name="authenticationToken">The authentication token to renew.</param>
            <param name="credentials">The user credentials, if available.</param>
            <returns>The authentication response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthentication.GetRedirectLink(Fusion.AuthenticationToken,System.String)">
            <summary>
            Gets a pre-authenticated redirect link to the target URL.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="targetUrl">The target URL.</param>
            <returns>The pre-authenticated redirect link.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthentication.PrepareWebRequest(System.Net.HttpWebRequest,Fusion.AuthenticationToken,System.String)">
            <summary>
            Allows the user to inject additional information into a web token e.g. JSON web token string.
            </summary>
            <param name="webRequest">The web request being prepared.</param>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
        </member>
        <member name="T:Fusion.App.DefaultHostUser.DefaultUserAuthorization">
            <summary>
            Default user authorization provider.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthorization.RequestToken(Fusion.AuthenticationToken,System.TimeSpan,System.String)">
            <summary>
            Requests a new authorization token.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="duration">The requested token duration.</param>
            <param name="action">The action to authorize.</param>
            <returns>The authorization response with the new token.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthorization.RequestTokens(Fusion.AuthenticationToken,System.TimeSpan,System.String[])">
            <summary>
            Requests new authorization tokens.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="duration">The requested token duration.</param>
            <param name="actions">The actions to authorize.</param>
            <returns>The authorization responses with the new tokens.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthorization.RequestRenew(Fusion.AuthorizationToken,System.TimeSpan,Fusion.AuthenticationToken)">
            <summary>
            Requests a renew for the specified authorization token.
            </summary>
            <param name="authorizationToken">The authorization token to renew.</param>
            <param name="duration">The requested token duration.</param>
            <param name="authenticationToken">The authentication token.</param>
            <returns>The authorization response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthorization.RequestRenewTokens(System.Collections.Generic.IReadOnlyList{Fusion.AuthorizationToken},System.TimeSpan,Fusion.AuthenticationToken)">
            <summary>
            Requests a renew for the specified authorization tokens.
            </summary>
            <param name="authorizationTokens">The authorization tokens to renew.</param>
            <param name="duration">The requested token duration.</param>
            <param name="authenticationToken">The authentication token.</param>
            <returns>The authorization response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultUserAuthorization.IsAuthorizationAvailable(Fusion.AuthenticationToken,System.String[])">
            <summary>
            Determines whether it's possible to request authorization for the actions.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="actions">The actions to authorize.</param>
            <returns>The collection of the actions and whether it's possible to request authorization for them.</returns>
        </member>
        <member name="T:Fusion.App.DefaultHostUser.DefaultCredentials">
            <summary>
            Default user credential provider.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultCredentials.GetCredential(System.Uri,System.String)">
            <summary>
            Returns a <see cref="T:System.Net.NetworkCredential" /> object that is associated with the specified URI, and authentication type.
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> that the client is providing authentication for.</param>
            <param name="authType">The type of authentication, as defined in the <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> property.</param>
            <returns>The <see cref="T:System.Net.NetworkCredential" /> that is associated with the specified URI and authentication type, or, if no credentials are available, null.</returns>
        </member>
        <member name="T:Fusion.App.DefaultHostUser.DefaultProfile">
            <summary>
            Default user profile provider.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultProfile.GetProfile(Fusion.AuthenticationToken,System.String,System.String[])">
            <summary>
            Gets the profile for the specified principal.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
            <param name="properties">The list of properties to retrieve. If empty, retrieves all properties.</param>
            <returns>The dictionary of profile property names and values.</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultProfile.GetProfiles(Fusion.AuthenticationToken,System.String[])">
            <summary>
            Gets the profiles of all available principals.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="properties">The list of properties to retrieve. If empty, retrieves all properties.</param>
            <returns>The dictionary of principal identifiers and profiles (as a dictionary of profile property names and values).</returns>
        </member>
        <member name="M:Fusion.App.DefaultHostUser.DefaultProfile.GetProfileLink(Fusion.AuthenticationToken,System.String)">
            <summary>
            Gets the link to the profile for the specified principal.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
            <returns>The link to the profile.</returns>
        </member>
        <member name="T:Fusion.App.DefaultSettingAttribute">
            <summary>
            Declares the default value for an application setting.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultSettingAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.DefaultSettingAttribute"/> class.
            </summary>
            <param name="key">The setting key.</param>
            <param name="value">The default setting value.</param>
        </member>
        <member name="P:Fusion.App.DefaultSettingAttribute.Key">
            <summary>
            Gets the setting key.
            </summary>
            <value>The setting key.</value>
        </member>
        <member name="P:Fusion.App.DefaultSettingAttribute.Value">
            <summary>
            Gets the default setting value.
            </summary>
            <value>The default setting value.</value>
        </member>
        <member name="M:Fusion.App.InvokeDomainLogic(System.Action)">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.App.InvokeDomainLogic``1(System.Func{``0})">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="T:Fusion.App.DomainLogicThread">
            <summary>
            Domain logic processing thread.
            </summary>
        </member>
        <member name="F:Fusion.App.DomainLogicThread.Actions">
            <summary>
            The actions queue.
            </summary>
        </member>
        <member name="F:Fusion.App.DomainLogicThread.ActionsPending">
            <summary>
            Indicates whether the actions queue has pending actions.
            </summary>
        </member>
        <member name="F:Fusion.App.DomainLogicThread.thread">
            <summary>
            The processing thread.
            </summary>
        </member>
        <member name="F:Fusion.App.DomainLogicThread.running">
            <summary>
            Indicates whether the processing thread is running.
            </summary>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.DomainLogicThread" /> class.
            </summary>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Post(System.Action)">
            <summary>
            Posts an action to the domain logic processing thread.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.PostAsync(System.Action)">
            <summary>
            Posts an action to the domain logic processing thread.
            </summary>
            <param name="action">The action.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.PostAsync``1(System.Func{``0})">
            <summary>
            Posts an action to the domain logic processing thread.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="action">The action.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Send(System.Action)">
            <summary>
            Sends an action to the domain logic processing thread and waits until the processing is complete.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Send``1(System.Func{``0})">
            <summary>
            Sends an action to the domain logic processing thread and waits until the processing is complete.
            </summary>
            <param name="action">The action.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Dispose">
            <summary>
            Terminates the domain logic processing thread.
            </summary>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Post(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            When overridden in a derived class, dispatches an asynchronous message to a synchronization context.
            </summary>
            <param name="d">The <see cref="T:System.Threading.SendOrPostCallback"/> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Send(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            When overridden in a derived class, dispatches a synchronous message to a synchronization context.
            </summary>
            <param name="d">The <see cref="T:System.Threading.SendOrPostCallback"/> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Process(System.Action)">
            <summary>
            Processes the domain logic action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Fusion.App.DomainLogicThread.Process">
            <summary>
            Processes the domain logic actions.
            </summary>
        </member>
        <member name="F:Fusion.App.ResourceReferencePattern">
            <summary>
            The resource reference pattern. Allows a-z, A-Z, 0-9, dot, underscore, plus, minus.
            </summary>
        </member>
        <member name="F:Fusion.App.features">
            <summary>
            The application features.
            </summary>
        </member>
        <member name="F:Fusion.App.originalResources">
            <summary>
            The original resources.
            </summary>
        </member>
        <member name="M:Fusion.App.#ctor(Fusion.App.Feature[])">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App"/> class.
            </summary>
            <param name="features">The application features.</param>
        </member>
        <member name="P:Fusion.App.Features">
            <summary>
            Gets the application features.
            </summary>
            <value>The application features.</value>
        </member>
        <member name="M:Fusion.App.Initialize">
            <summary>
            Initializes the application.
            </summary>
        </member>
        <member name="M:Fusion.App.InitializeDomainLogic">
            <summary>
            Initializes the application domain logic.
            </summary>
        </member>
        <member name="M:Fusion.App.Starting(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the application is starting.
            </summary>
            <param name="starting">The cancelable event.</param>
        </member>
        <member name="M:Fusion.App.Running(System.String[])">
            <summary>
            Called when the application is running.
            </summary>
            <param name="arguments">The command line arguments.</param>
        </member>
        <member name="M:Fusion.App.Stopping(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the application is stopping.
            </summary>
            <param name="stopping">The cancelable event.</param>
        </member>
        <member name="M:Fusion.App.Dispose">
            <summary>
            Terminates the application.
            </summary>
        </member>
        <member name="M:Fusion.App.ResolveDependencies(System.Object)">
            <summary>
            Resolves the dependencies of the target object.
            </summary>
            <param name="target">The target object.</param>
        </member>
        <member name="M:Fusion.App.LoadFeatures">
            <summary>
            Loads the application features.
            </summary>
            <returns>The loaded application features.</returns>
        </member>
        <member name="M:Fusion.App.LoadResources">
            <summary>
            Loads the application resources.
            </summary>
        </member>
        <member name="M:Fusion.App.LoadResources(System.String,System.String)">
            <summary>
            Loads the application resources.
            </summary>
            <param name="culture">The culture. If null or empty, uses the current culture.</param>
            <param name="theme">The theme. If null or empty, uses the current theme.</param>
        </member>
        <member name="M:Fusion.App.LoadSharedResources(System.String,System.String)">
            <summary>
            Loads the shared application resources.
            </summary>
            <param name="culture">The culture.</param>
            <param name="theme">The theme.</param>
            <returns>The loaded resource dictionaries.</returns>
        </member>
        <member name="M:Fusion.App.LoadLocalizedResources(System.String,System.String)">
            <summary>
            Loads the localized application resources.
            </summary>
            <param name="culture">The culture.</param>
            <param name="theme">The theme.</param>
            <returns>The loaded resource dictionaries.</returns>
        </member>
        <member name="M:Fusion.App.LoadThemeResources(System.String,System.String)">
            <summary>
            Loads the theme specific application resources.
            </summary>
            <param name="culture">The culture.</param>
            <param name="theme">The theme.</param>
            <returns>The loaded resource dictionaries.</returns>
        </member>
        <member name="M:Fusion.App.LoadFormattedResources(System.String,System.String)">
            <summary>
            Loads the formatted application resources.
            </summary>
            <returns>The loaded resource dictionaries.</returns>
        </member>
        <member name="M:Fusion.App.FormatResourceString(System.String)">
            <summary>
            Formats the resource string.
            </summary>
            <param name="text">The resource string.</param>
            <returns>The formatted resource string.</returns>
        </member>
        <member name="M:Fusion.App.TransformResources(Fusion.LocalizationMode)">
            <summary>
            Applies a transformation to string resources.
            </summary>
            <param name="transform">The resource transform.</param>
        </member>
        <member name="M:Fusion.App.LoadResources(System.Object,Fusion.ResourcesAttribute)">
            <summary>
            Loads the resources for the specified object.
            </summary>
            <param name="instance">The object instance.</param>
            <param name="attribute">The resources attribute.</param>
            <returns>The loaded resource dictionary.</returns>
        </member>
        <member name="M:Fusion.App.LoadResources``1(System.Object,System.String,System.String)">
            <summary>
            Loads the declared resources for the specified object.
            </summary>
            <typeparam name="TResourcesAttribute">The resource attribute type.</typeparam>
            <param name="instance">The object instance.</param>
            <param name="culture">The culture.</param>
            <param name="theme">The theme.</param>
            <returns>The loaded resource dictionaries.</returns>
        </member>
        <member name="M:Fusion.App.MergeResources(System.Collections.Generic.IEnumerable{System.Windows.ResourceDictionary},System.Boolean,System.Boolean)">
            <summary>
            Merges the resource dictionaries into the application resources.
            </summary>
            <param name="resourceDictionaries">The resource dictionaries.</param>
            <param name="localizedStrings">Indicates whether the resources have any localized strings.</param>
            <param name="formattedStrings">Indicates whether the resources have any formatted strings.</param>
        </member>
        <member name="M:Fusion.App.MergeResources(System.Windows.ResourceDictionary,System.Boolean,System.Boolean)">
            <summary>
            Merges the resource dictionary into the application resources.
            </summary>
            <param name="resourceDictionary">The resource dictionary.</param>
            <param name="localizedStrings">Indicates whether the resources have any localized strings.</param>
            <param name="formattedStrings">Indicates whether the resources have any formatted strings.</param>
        </member>
        <member name="M:Fusion.App.WriteResources(System.Windows.ResourceDictionary,System.Boolean,System.Boolean)">
            <summary>
            Writes the resource dictionary to application resources.
            </summary>
            <param name="resourceDictionary">The resource dictionary.</param>
            <param name="localizedStrings">Indicates whether the resources have any localized strings.</param>
            <param name="formattedStrings">Indicates whether the resources have any formatted strings.</param>
        </member>
        <member name="M:Fusion.App.TransformResourceString(Fusion.LocalizationMode,System.Object,System.String)">
            <summary>
            Transforms a resource string.
            </summary>
            <param name="localizationMode">The localization mode.</param>
            <param name="key">The resource string key.</param>
            <param name="value">The resource string value.</param>
            <returns>The transformed resource string.</returns>
        </member>
        <member name="M:Fusion.App.ForEachFeature(System.Action{Fusion.App.Feature},System.String)">
            <summary>
            Invokes an action for each application feature.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="operation">The operation to measure.</param>
        </member>
        <member name="P:Fusion.App.Host">
            <summary>
            Gets the host services.
            </summary>
            <value>The host services.</value>
        </member>
        <member name="P:Fusion.App.User">
            <summary>
            Gets or sets the user information provider.
            </summary>
            <value>The user information provider.</value>
        </member>
        <member name="M:Fusion.App.GetUser(Fusion.App.Feature)">
            <summary>
            Gets the host user information.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host user information.</returns>
        </member>
        <member name="M:Fusion.App.GetSettings(Fusion.App.Feature)">
            <summary>
            Gets the host settings.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host settings.</returns>
        </member>
        <member name="M:Fusion.App.GetRecovery(Fusion.App.Feature)">
            <summary>
            Gets the host recovery information.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host recovery information.</returns>
        </member>
        <member name="M:Fusion.App.GetSession(Fusion.App.Feature)">
            <summary>
            Gets the host session information.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host session information.</returns>
        </member>
        <member name="M:Fusion.App.GetDataFolder(Fusion.App.Feature)">
            <summary>
            Gets the path to the host data folder.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host data folder.</returns>
        </member>
        <member name="M:Fusion.App.GetTempFolder(Fusion.App.Feature)">
            <summary>
            Gets the path to the host temp folder.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host temp folder.</returns>
        </member>
        <member name="M:Fusion.App.InvokeDomainLogic(Fusion.App.Feature,System.Action)">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.App.InvokeDomainLogic``1(Fusion.App.Feature,System.Func{``0})">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="feature">The source feature.</param>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.App.Invoke``1(Fusion.App.Feature,System.Action{``0})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="feature">The source feature.</param>
            <param name="invokeMethod">The callback that invokes the method delegate.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Invoke``1(Fusion.App.Feature,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="feature">The source feature.</param>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Invoke``2(Fusion.App.Feature,System.Func{``0,``1})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="feature">The source feature.</param>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Invoke``2(Fusion.App.Feature,System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="feature">The source feature.</param>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.StartExternalService(Fusion.App.Feature,Fusion.RemoteObject)">
            <summary>
            Starts an external service.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="service">The service.</param>
        </member>
        <member name="M:Fusion.App.StartExternalProgram(Fusion.App.Feature,System.String,System.String[])">
            <summary>
            Starts an external program. The connection name is passed as the first command line argument.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="path">The path to the external program. If the path is relative, the root is the application folder.</param>
            <param name="extraCommandLineArguments">The extra command line arguments.</param>
        </member>
        <member name="M:Fusion.App.Shutdown(Fusion.App.Feature)">
            <summary>
            Requests the host to shut down.
            </summary>
            <param name="feature">The source feature.</param>
        </member>
        <member name="M:Fusion.App.Restart(Fusion.App.Feature)">
            <summary>
            Requests the host to shut down and restart.
            </summary>
            <param name="feature">The source feature.</param>
        </member>
        <member name="M:Fusion.App.TrackHostUsage(Fusion.App.Feature,System.String,Fusion.InvokeIn)">
            <summary>
            Tracks the host usage.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="entryPoint">The host entry point.</param>
            <param name="allowedContext">The allowed calling context.</param>
        </member>
        <member name="T:Fusion.App.DefaultHost">
            <summary>
            The default host for the application.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultHost.Instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHost.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Fusion.App.DefaultHost"/> class from being created.
            </summary>
        </member>
        <member name="M:Fusion.App.DefaultHost.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.App.Error(Fusion.App.Feature,System.String,System.Object[])">
            <summary>
            Writes an error message to the host diagnostics log.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.App.Warning(Fusion.App.Feature,System.String,System.Object[])">
            <summary>
            Writes a warning message to the host diagnostics log.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.App.Information(Fusion.App.Feature,System.String,System.Object[])">
            <summary>
            Writes an information message to the host diagnostics log.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.App.MeasurePerformance(Fusion.App.Feature,System.String,System.Object[])">
            <summary>
            Measures the performance of an operation and writes the result to the host diagnostics log.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
            <returns>The disposable token that ends the measurement.</returns>
        </member>
        <member name="F:Fusion.App.NamedKeys">
            <summary>
            The mapping between the key names and values.
            </summary>
        </member>
        <member name="F:Fusion.App.fullScreenMode">
            <summary>
            Indicates whether the full screen mode is enabled.
            </summary>
        </member>
        <member name="F:Fusion.App.tabletMode">
            <summary>
            Indicates whether the tablet mode is enabled.
            </summary>
        </member>
        <member name="P:Fusion.App.FullScreenMode">
            <summary>
            Gets or sets a value indicating whether the full screen mode is enabled.
            </summary>
            <value>True if the full screen mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.TabletMode">
            <summary>
            Gets or sets a value indicating whether the tablet mode is enabled.
            </summary>
            <value>True if the tablet mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.DialogOwner">
            <summary>
            Gets the owner for new dialogs.
            </summary>
            <value>The dialog owner.</value>
        </member>
        <member name="P:Fusion.App.WindowOwner">
            <summary>
            Gets the owner for new windows.
            </summary>
            <value>The window owner.</value>
        </member>
        <member name="P:Fusion.App.Help">
            <summary>
            Gets or sets the help provider.
            </summary>
            <value>The help provider.</value>
        </member>
        <member name="M:Fusion.App.GetPublishedViews(Fusion.App.Feature)">
            <summary>
            Gets the published views.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The published views.</returns>
        </member>
        <member name="M:Fusion.App.GetFullScreenMode(Fusion.App.Feature)">
            <summary>
            Gets a value indicating whether the full screen mode is enabled.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>True if the full screen mode is enabled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.App.SetFullScreenMode(Fusion.App.Feature,System.Boolean)">
            <summary>
            Sets a value indicating whether the full screen mode is enabled.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="fullScreenMode">Indicates whether the full screen mode is enabled.</param>
        </member>
        <member name="M:Fusion.App.GetTabletMode(Fusion.App.Feature)">
            <summary>
            Gets a value indicating whether the tablet mode is enabled.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>True if the tablet mode is enabled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.App.SetTabletMode(Fusion.App.Feature,System.Boolean)">
            <summary>
            Sets a value indicating whether the tablet mode is enabled.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="tabletMode">Indicates whether the tablet mode is enabled.</param>
        </member>
        <member name="M:Fusion.App.RegisterKeyboardShortcut(Fusion.App.Feature,System.String,System.Action)">
            <summary>
            Registers a keyboard shortcut.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="gesture">The gesture. May include modifiers such as "Control+Shift+A".</param>
            <param name="action">The action to perform when the keyboard shortcut is pressed.</param>
        </member>
        <member name="M:Fusion.App.ShowWindow(Fusion.App.Feature,System.String,System.Object)">
            <summary>
            Shows a child window.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The window controller.</returns>
        </member>
        <member name="M:Fusion.App.ShowDialog(Fusion.App.Feature,System.String,System.Object)">
            <summary>
            Shows a modal dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The dialog result or null if the dialog did not provide any result.</returns>
        </member>
        <member name="M:Fusion.App.ShowOpenFilePickerDialog(Fusion.App.Feature,System.String,System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.App.ShowSaveFilePickerDialog(Fusion.App.Feature,System.String,System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.App.ShowFolderPickerDialog(Fusion.App.Feature,System.String,System.String)">
            <summary>
            Shows a modal folder picker dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <returns>The selected folder path or null if no folder was selected.</returns>
        </member>
        <member name="M:Fusion.App.ShowCredentialDialog(Fusion.App.Feature,System.String,System.String)">
            <summary>
            Shows a modal credential dialog.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <returns>The session credential or null if the credential was not supplied.</returns>
        </member>
        <member name="M:Fusion.App.GetHelp(Fusion.App.Feature)">
            <summary>
            Gets the help provider.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The help provider.</returns>
        </member>
        <member name="M:Fusion.App.SetHelp(Fusion.App.Feature,Fusion.IHelpProvider)">
            <summary>
            Sets the help provider.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="helpProvider">The help provider.</param>
        </member>
        <member name="M:Fusion.App.RegisterCommandObserver(Fusion.App.Feature,Fusion.ICommandObserver)">
            <summary>
            Registers a command observer.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="commandObserver">The command observer.</param>
        </member>
        <member name="M:Fusion.App.GetResources(Fusion.App.Feature)">
            <summary>
            Gets the host UI resources.
            </summary>
            <param name="feature">The source feature.</param>
            <returns>The host UI resources.</returns>
        </member>
        <member name="M:Fusion.App.GetResource(Fusion.App.Feature,System.Object)">
            <summary>
            Gets the resource.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="resourceKey">The resource key.</param>
            <returns>The resource or null if the resource was not found.</returns>
        </member>
        <member name="M:Fusion.App.GetLocalizedText(Fusion.App.Feature,System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="feature">The source feature.</param>
            <param name="resourceKey">The resource key.</param>
            <returns>The localized text or the default fall back value if the localized text was not found.</returns>
        </member>
        <member name="M:Fusion.App.ShowDialog(System.Windows.Window)">
            <summary>
            Shows a modal dialog.
            </summary>
            <param name="dialog">The modal dialog.</param>
        </member>
        <member name="M:Fusion.App.ShowWindow(System.Windows.Window)">
            <summary>
            Shows a child window.
            </summary>
            <param name="window">The child window.</param>
        </member>
        <member name="M:Fusion.App.LoadFeatures(System.String,System.String,System.Boolean)">
            <summary>
            Loads the features from the feature folder.
            </summary>
            <param name="path">The folder path.</param>
            <param name="searchPattern">The file search pattern.</param>
            <param name="recursive">Indicates whether to use recursive search.</param>
            <returns>The loaded features.</returns>
        </member>
        <member name="M:Fusion.App.GetFiles(System.String,System.String,System.Boolean)">
            <summary>
            Gets the files.
            </summary>
            <param name="folderPath">The folder path.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="recursive">Indicates whether to use recursive search.</param>
            <returns>The assembly files in the folder.</returns>
        </member>
        <member name="M:Fusion.App.GetAssembly(System.String)">
            <summary>
            Gets the assembly.
            </summary>
            <param name="path">The file path.</param>
            <returns>The loaded assembly or null if the assembly could not be loaded.</returns>
        </member>
        <member name="M:Fusion.App.GetExportedTypes(System.Reflection.Assembly)">
            <summary>
            Gets the exported types.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns>The exported types.</returns>
        </member>
        <member name="M:Fusion.App.GetInstance(System.Type)">
            <summary>
            Gets an instance of the specified type.
            </summary>
            <param name="type">The object type.</param>
            <returns>The object instance or null if the instance could not be created.</returns>
        </member>
        <member name="M:Fusion.App.Idle">
            <summary>
            Awaits until the application has processed all pending messages.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Fusion.App.PopupController">
            <summary>
            Popup controller.
            </summary>
        </member>
        <member name="F:Fusion.App.PopupController.popup">
            <summary>
            The popup.
            </summary>
        </member>
        <member name="M:Fusion.App.PopupController.#ctor(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.PopupController"/> class.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:Fusion.App.PopupController.Close">
            <summary>
            Closes the popup.
            </summary>
        </member>
        <member name="F:Fusion.App.publishedMethodLog">
            <summary>
            The published method log.
            </summary>
        </member>
        <member name="P:Fusion.App.PublishedMethods">
            <summary>
            Gets the published methods (target, method, context, documentation).
            </summary>
            <value>The published methods.</value>
        </member>
        <member name="P:Fusion.App.PublishedMethodLog">
            <summary>
            Gets the published method log (timestamp, source, target, method, context).
            </summary>
            <value>The published method log.</value>
        </member>
        <member name="M:Fusion.App.Invoke(System.String,System.Object[])">
            <summary>
            Invokes a published method.
            </summary>
            <param name="publishedMethodSignature">The published method signature.</param>
            <param name="arguments">The method arguments.</param>
            <returns>The task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.Invoke``1(System.String,System.Object[])">
            <summary>
            Invokes a published method.
            </summary>
            <typeparam name="T">The return type.</typeparam>
            <param name="publishedMethodSignature">The published method signature.</param>
            <param name="arguments">The method arguments.</param>
            <returns>The task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.App.GetPublishedMethodTargets">
            <summary>
            Gets the published method targets.
            </summary>
            <returns>The published method targets.</returns>
        </member>
        <member name="M:Fusion.App.WritePublishedMethod(System.String,System.String,System.String,System.String)">
            <summary>
            Writes the published method in the log.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="method">The method signature.</param>
            <param name="context">The invocation context.</param>
        </member>
        <member name="M:Fusion.App.InvokePublishedMethod(System.Object,System.String,System.Object[])">
            <summary>
            Invokes the published method.
            </summary>
            <param name="source">The source object.</param>
            <param name="signature">The published method signature.</param>
            <param name="arguments">The method arguments.</param>
            <returns>An enumerable collection of tasks representing the asynchronous operations.</returns>
        </member>
        <member name="M:Fusion.App.InvokePublishedMethod``1(System.Object,System.Action{``0})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The published method delegate type.</typeparam>
            <param name="source">The source object.</param>
            <param name="invokeMethod">The callback that invokes the published method.</param>
            <returns>An enumerable collection of tasks representing the asynchronous operations.</returns>
        </member>
        <member name="M:Fusion.App.InvokePublishedMethod``1(System.Object,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The published method delegate type.</typeparam>
            <param name="source">The source object.</param>
            <param name="invokeMethod">The callback that invokes the published method.</param>
            <returns>An enumerable collection of tasks representing the asynchronous operations.</returns>
        </member>
        <member name="M:Fusion.App.InvokePublishedMethod``2(System.Object,System.Func{``0,``1})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The published method delegate type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source object.</param>
            <param name="invokeMethod">The callback that invokes the published method.</param>
            <returns>An enumerable collection of tasks representing the asynchronous operations.</returns>
        </member>
        <member name="M:Fusion.App.InvokePublishedMethod``2(System.Object,System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The published method delegate type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source object.</param>
            <param name="invokeMethod">The callback that invokes the published method.</param>
            <returns>An enumerable collection of tasks representing the asynchronous operations.</returns>
        </member>
        <member name="T:Fusion.App.PublishedMethod">
            <summary>
            Published method.
            </summary>
        </member>
        <member name="F:Fusion.App.PublishedMethod.PublishedMethods">
            <summary>
            The published methods.
            </summary>
        </member>
        <member name="M:Fusion.App.PublishedMethod.#ctor(System.Reflection.MethodInfo,Fusion.InvokeIn,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.PublishedMethod"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="invokeIn">The method invocation context.</param>
            <param name="documentation">The method documentation.</param>
        </member>
        <member name="P:Fusion.App.PublishedMethod.Method">
            <summary>
            Gets the method information.
            </summary>
            <value>The method information.</value>
        </member>
        <member name="P:Fusion.App.PublishedMethod.InvokeIn">
            <summary>
            Gets the method invocation context.
            </summary>
            <value>The method invocation context.</value>
        </member>
        <member name="P:Fusion.App.PublishedMethod.Documentation">
            <summary>
            Gets the method documentation.
            </summary>
            <value>The method documentation.</value>
        </member>
        <member name="M:Fusion.App.PublishedMethod.For(System.Object)">
            <summary>
            Gets the published methods for the target object.
            </summary>
            <param name="target">The target object.</param>
            <returns>The published methods.</returns>
        </member>
        <member name="M:Fusion.App.PublishedMethod.For(System.String,System.Object)">
            <summary>
            Gets the published method for the target object.
            </summary>
            <param name="publishedMethodSignature">The published method signature.</param>
            <param name="target">The target object.</param>
            <returns>The published method or null if the published method was not found.</returns>
        </member>
        <member name="M:Fusion.App.PublishedMethod.AsDelegate(System.Type,System.Object)">
            <summary>
            Converts the method into a delegate bound to the target object.
            </summary>
            <param name="delegateType">The delegate type.</param>
            <param name="target">The target object.</param>
            <returns>The delegate or null if the method could not be converted.</returns>
        </member>
        <member name="M:Fusion.App.PublishedMethod.Load(System.Type)">
            <summary>
            Loads the published methods for the specified type.
            </summary>
            <param name="type">The target type.</param>
            <returns>The published methods.</returns>
        </member>
        <member name="F:Fusion.App.commandObservers">
            <summary>
            The registered command observers.
            </summary>
        </member>
        <member name="F:Fusion.App.publishedViews">
            <summary>
            The published views.
            </summary>
        </member>
        <member name="F:Fusion.App.viewModels">
            <summary>
            The view models.
            </summary>
        </member>
        <member name="E:Fusion.App.KeyDown">
            <summary>
            Occurs when a key is pressed in a window.
            </summary>
        </member>
        <member name="E:Fusion.App.KeyUp">
            <summary>
            Occurs when a key is released in a window.
            </summary>
        </member>
        <member name="P:Fusion.App.PublishedViews">
            <summary>
            Gets the published views.
            </summary>
            <value>The published views.</value>
        </member>
        <member name="M:Fusion.App.CreateView(System.String,System.Object)">
            <summary>
            Creates a view.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The view or null if the view could not be created.</returns>
        </member>
        <member name="M:Fusion.App.CreateViewInPopup(System.String,System.Object)">
            <summary>
            Creates a view in a popup.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The popup or null if the view could not be created.</returns>
        </member>
        <member name="M:Fusion.App.CreateViewInWindow(System.String,System.Object)">
            <summary>
            Creates a view in a window.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The window or null if the view could not be created.</returns>
        </member>
        <member name="M:Fusion.App.GetViewInfo(System.String)">
            <summary>
            Gets the view information.
            </summary>
            <param name="viewName">The view name.</param>
            <returns>The view information or null if the view was not found.</returns>
        </member>
        <member name="M:Fusion.App.CreatePopup(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Creates a popup for a view.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
            <returns>The popup with the view.</returns>
        </member>
        <member name="M:Fusion.App.CreateWindow(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Creates a window for a view.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
            <returns>The window with the view.</returns>
        </member>
        <member name="M:Fusion.App.ConfigureView(System.Object,System.String,System.Windows.Controls.Primitives.Popup,Fusion.ViewModel)">
            <summary>
            Configures the view when the view type is <see cref="T:System.Windows.Controls.Primitives.Popup" />.
            </summary>
            <param name="source">The source object.</param>
            <param name="viewName">The view name.</param>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Fusion.App.ConfigureView(System.Object,System.String,System.Windows.Window,Fusion.ViewModel)">
            <summary>
            Configures the view when the view type is <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="source">The source object.</param>
            <param name="viewName">The view name.</param>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Fusion.App.ConfigureView(System.Object,System.String,System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Configures the view.
            </summary>
            <param name="source">The source object.</param>
            <param name="viewName">The view name.</param>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Fusion.App.ConfigureRootView(System.Windows.FrameworkElement)">
            <summary>
            Configures the root level view.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Fusion.App.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.App.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyUp" /> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.App.OnCommandHandlerMissing(Fusion.ViewModel,System.String)">
            <summary>
            Called when a missing command handler is detected.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
        </member>
        <member name="M:Fusion.App.OnCommandExecuting(Fusion.ViewModel,System.String,System.Object)">
            <summary>
            Called when a command is executing.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.App.OnCommandExecuted(Fusion.ViewModel,System.String,System.Object)">
            <summary>
            Called when a command has been executed.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.App.OnCommandUnhandledException(Fusion.ViewModel,System.String,System.Object,System.Exception)">
            <summary>
            Called when a command caused an unhandled exception.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
            <param name="exception">The unhandled exception.</param>
        </member>
        <member name="M:Fusion.App.SetMainView">
            <summary>
            Sets the application main view.
            </summary>
        </member>
        <member name="M:Fusion.App.LoadPublishedViews">
            <summary>
            Loads the published views.
            </summary>
            <returns>The published views.</returns>
        </member>
        <member name="M:Fusion.App.LoadPublishedViews(System.Object)">
            <summary>
            Loads the published views for the specified object.
            </summary>
            <param name="instance">The object instance.</param>
            <returns>The published views.</returns>
        </member>
        <member name="M:Fusion.App.GetViewModels">
            <summary>
            Gets the view models.
            </summary>
            <returns>The view models.</returns>
        </member>
        <member name="T:Fusion.App.BoundCommandHandler">
            <summary>
            Command handler that is bound to a source object.
            </summary>
        </member>
        <member name="M:Fusion.App.BoundCommandHandler.#ctor(System.Object,Fusion.ViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.BoundCommandHandler" /> class.
            </summary>
            <param name="source">The source object.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="P:Fusion.App.BoundCommandHandler.Source">
            <summary>
            Gets the source object.
            </summary>
            <value>The source object.</value>
        </member>
        <member name="M:Fusion.App.BoundCommandHandler.OnHandlerMissing(System.String)">
            <summary>
            Called when a missing handler is detected.
            </summary>
            <param name="commandName">The command name.</param>
        </member>
        <member name="M:Fusion.App.BoundCommandHandler.OnExecute(System.String,System.Object,System.Action{System.Object},Fusion.CommandHandlerAttribute)">
            <summary>
            Called when a command is executed.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
            <param name="handlerMethod">The command handler method.</param>
            <param name="attribute">The command handler metadata attribute.</param>
        </member>
        <member name="M:Fusion.App.BoundCommandHandler.OnExecuting(System.String,System.Object)">
            <summary>
            Called when a command is executing.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.App.BoundCommandHandler.OnExecuted(System.String,System.Object)">
            <summary>
            Called when a command has been executed.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.App.BoundCommandHandler.OnException(System.String,System.Object,System.Exception)">
            <summary>
            Called when a command caused an unhandled exception.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
            <param name="exception">The unhandled exception.</param>
            <returns>True if the exception was handled, otherwise false.</returns>
        </member>
        <member name="T:Fusion.App.BoundPublishedView">
            <summary>
            Published view that is bound to a source object.
            </summary>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.#ctor(System.Object,System.Func{System.Object,Fusion.ViewModel},Fusion.PublishedViewAttribute,Fusion.PublishedViewMetadataAttribute[])">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.BoundPublishedView"/> class.
            </summary>
            <param name="source">The feature.</param>
            <param name="factoryMethod">The view model factory method.</param>
            <param name="attribute">The published view attribute.</param>
            <param name="metadataAttributes">The published view metadata attributes.</param>
        </member>
        <member name="P:Fusion.App.BoundPublishedView.Source">
            <summary>
            Gets the source object.
            </summary>
            <value>The source object.</value>
        </member>
        <member name="P:Fusion.App.BoundPublishedView.SourceName">
            <summary>
            Gets the source object name.
            </summary>
            <value>The source object name.</value>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.CreatePopup(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Creates a popup for a view.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
            <returns>The popup with the view.</returns>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.CreateWindow(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Creates a window for a view.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
            <returns>The window with the view.</returns>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.OnCreated(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Called when the view and the view model have been created.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.OnViewTypeMissing(System.Object)">
            <summary>
            Called when a missing view type is detected.
            </summary>
            <param name="parameter">The view parameter.</param>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.OnInvalidViewType(System.Object,System.Type)">
            <summary>
            Called when an invalid view type is detected.
            </summary>
            <param name="parameter">The view parameter.</param>
            <param name="viewType">The view type.</param>
        </member>
        <member name="M:Fusion.App.BoundPublishedView.OnException(System.Object,System.Exception)">
            <summary>
            Called when the view construction caused an unhandled exception.
            </summary>
            <param name="parameter">The view parameter.</param>
            <param name="exception">The unhandled exception.</param>
            <returns>True if the exception was handled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.App.Crashed">
            <summary>
            Called when the application has crashed. You have up to 60 seconds to save any recovery data before the application is terminated.
            </summary>
        </member>
        <member name="T:Fusion.App.RecoveryAndRestart">
            <summary>
            Application Recovery and Restart (ARR) service integration.
            </summary>
        </member>
        <member name="F:Fusion.App.RecoveryAndRestart.StaticApplicationRecoveryCallback">
            <summary>
            The application recovery callback. This is kept as a static field to prevent garbage collection.
            </summary>
        </member>
        <member name="F:Fusion.App.RecoveryAndRestart.registeredRecoveryCallback">
            <summary>
            The registered recovery callback.
            </summary>
        </member>
        <member name="M:Fusion.App.RecoveryAndRestart.#ctor(System.Action,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.RecoveryAndRestart" /> class.
            </summary>
            <param name="recoveryCallback">The recovery callback.</param>
            <param name="restartArgument">The restart argument.</param>
            <param name="recoveryTime">The maximum recovery time.</param>
        </member>
        <member name="M:Fusion.App.RecoveryAndRestart.Dispose">
            <summary>
            Terminates the Application Recovery and Restart service integration.
            </summary>
        </member>
        <member name="T:Fusion.App.RecoveryAndRestart.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.App.RecoveryStore">
            <summary>
            Application recovery information store.
            </summary>
        </member>
        <member name="M:Fusion.App.RecoveryStore.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.RecoveryStore" /> class.
            </summary>
            <param name="path">The registry path.</param>
            <param name="recover">Indicates whether the application should attempt to recover from a restart.</param>
        </member>
        <member name="P:Fusion.App.RecoveryStore.Recover">
            <summary>
            Gets a value indicating whether the application should attempt to recover from a restart.
            </summary>
            <value>True if the application should attempt to recover from a restart, otherwise false.</value>
        </member>
        <member name="T:Fusion.App.RegistryKeyValueStore">
            <summary>
            Key-value store using the system registry as the storage.
            </summary>
        </member>
        <member name="F:Fusion.App.RegistryKeyValueStore.path">
            <summary>
            The registry path.
            </summary>
        </member>
        <member name="F:Fusion.App.RegistryKeyValueStore.registry">
            <summary>
            The registry key.
            </summary>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.RegistryKeyValueStore" /> class.
            </summary>
            <param name="path">The registry path.</param>
            <param name="defaults">The default values.</param>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.Dispose">
            <summary>
            Releases the registry key.
            </summary>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.GetKeys">
            <summary>
            Gets the keys.
            </summary>
            <returns>The keys.</returns>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.SetValue(System.String,System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.RemoveValue(System.String)">
            <summary>
            Removes the value.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Fusion.App.RegistryKeyValueStore.EnsureCreated">
            <summary>
            Ensures that the registry key has been created.
            </summary>
        </member>
        <member name="T:Fusion.App.SessionStore">
            <summary>
            Session information store.
            </summary>
        </member>
        <member name="M:Fusion.App.SessionStore.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.SessionStore" /> class.
            </summary>
            <param name="path">The registry path.</param>
        </member>
        <member name="T:Fusion.App.SettingsAttribute">
            <summary>
            Declares the default values for the built-in application settings.
            </summary>
        </member>
        <member name="M:Fusion.App.SettingsAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.SettingsAttribute" /> class.
            </summary>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.EnableExceptionHandling">
            <summary>
            Gets or sets a value indicating whether the application level exception handling is enabled. The default value is False.
            </summary>
            <value>True if the application level exception handling is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.LocalizationMode">
            <summary>
            Gets or sets the application localization mode. The default value is <see cref="F:Fusion.LocalizationMode.Normal"/>.
            </summary>
            <value>The application localization mode.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.Culture">
            <summary>
            Gets or sets the application culture. The default value is "en-US".
            </summary>
            <value>The application culture.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.Theme">
            <summary>
            Gets or sets the application theme. The default value is "Generic".
            </summary>
            <value>The application theme.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.EnableMessageLogging">
            <summary>
            Gets or sets a value indicating whether the message logging is enabled. The default value is True.
            </summary>
            <value>True if the message logging is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.EnableRecoveryAndRestart">
            <summary>
            Gets or sets a value indicating whether the application recovery and restart is enabled. The default value is True.
            </summary>
            <value>True if the application recovery and restart is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.EnableSingleInstanceMode">
            <summary>
            Gets or sets a value indicating whether the single instance mode is enabled. The default value is False.
            </summary>
            <value>True if the single instance mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.EnableWindowGhosting">
            <summary>
            Gets or sets a value indicating whether the window ghosting is enabled. The default value is True.
            </summary>
            <value>True if the window ghosting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.EnableFeatureLoadingFromSubfolders">
            <summary>
            Gets or sets a value indicating whether the features are loaded from subfolders in the feature folder. The default value is False.
            </summary>
            <value>True if the features are loaded from subfolders in the feature folder, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.DataFolder">
            <summary>
            Gets or sets the application data folder.
            </summary>
            <value>The application data folder.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.InitialFolder">
            <summary>
            Gets or sets the initial application working folder.
            </summary>
            <value>The initial application working folder.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.FeatureFolder">
            <summary>
            Gets or sets the application feature folder. Multiple folders can be specified, separated with a semicolon (;) character. The default value is "Features".
            </summary>
            <value>The application feature folder.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.RegistryPath">
            <summary>
            Gets the path to the root key in the registry.
            </summary>
            <value>The path to the root key in the registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.SettingsPath">
            <summary>
            Gets or sets the path to the application settings in registry.
            </summary>
            <value>The path to the application settings in registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.RecoveryPath">
            <summary>
            Gets or sets the path to the application recovery information in registry.
            </summary>
            <value>The path to the application recovery information in registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.SessionPath">
            <summary>
            Gets or sets the path to the application session information in registry.
            </summary>
            <value>The path to the application session information in registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsAttribute.WebBrowserFeatureLevel">
            <summary>
            Gets or sets the web browser feature level. The default value is 11000 (IE11 standard mode). The possible values are documented here: https://msdn.microsoft.com/library/ee330730(v=vs.85).aspx
            </summary>
            <value>The web browser feature level.</value>
        </member>
        <member name="F:Fusion.App.RuntimeSettings">
            <summary>
            The application runtime settings.
            </summary>
        </member>
        <member name="F:Fusion.App.DefaultSettings">
            <summary>
            The default settings.
            </summary>
        </member>
        <member name="M:Fusion.App.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App" /> class.
            </summary>
        </member>
        <member name="P:Fusion.App.Current">
            <summary>
            Gets the current application instance.
            </summary>
            <value>The current application instance.</value>
        </member>
        <member name="P:Fusion.App.Settings">
            <summary>
            Gets the application settings.
            </summary>
            <value>The application settings.</value>
            <remarks>This property can change during the application startup.</remarks>
        </member>
        <member name="P:Fusion.App.DataFolder">
            <summary>
            Gets the path to the application data folder.
            </summary>
            <value>The path to the application data folder.</value>
        </member>
        <member name="P:Fusion.App.TempFolder">
            <summary>
            Gets the path to the application temp folder.
            </summary>
            <value>The path to the application temp folder.</value>
        </member>
        <member name="M:Fusion.App.RaisePropertyChanged(System.String,System.String,System.String[])">
            <summary>
            Raises the <see cref="E:Fusion.App.PropertyChanged"/> event.
            </summary>
            <param name="propertyName1">The first property name.</param>
            <param name="propertyName2">The second property name.</param>
            <param name="propertyNames">The other property names.</param>
        </member>
        <member name="M:Fusion.App.SetValue``1(``0@,``0,System.String)">
            <summary>
            Sets the property value. Raises the <see cref="E:Fusion.App.PropertyChanged" /> event, if needed.
            </summary>
            <typeparam name="T">The type of the property value.</typeparam>
            <param name="field">The property backing field.</param>
            <param name="value">The new property value.</param>
            <param name="propertyName">The property name. If not specified, defaults to the caller member name.</param>
            <returns>True if the property value was modified, otherwise false.</returns>
        </member>
        <member name="M:Fusion.App.LoadRuntimeSettings">
            <summary>
            Loads the runtime settings.
            </summary>
            <returns>The runtime settings.</returns>
        </member>
        <member name="M:Fusion.App.LoadDefaultSettings">
            <summary>
            Loads the default settings.
            </summary>
            <returns>The default settings.</returns>
        </member>
        <member name="M:Fusion.App.OnStartup">
            <summary>
            Called when the application is starting up.
            </summary>
        </member>
        <member name="M:Fusion.App.OnShutdown">
            <summary>
            Called when the application is shutting down.
            </summary>
        </member>
        <member name="M:Fusion.App.LoadDefaultFeatures">
            <summary>
            Loads the default application features.
            </summary>
        </member>
        <member name="M:Fusion.App.InitResources(System.String)">
            <summary>
            Initializes the application resource dictionary.
            </summary>
            <param name="theme">The theme.</param>
        </member>
        <member name="M:Fusion.App.LoadDefaultResources">
            <summary>
            Loads the default application resources.
            </summary>
        </member>
        <member name="F:Fusion.App.performanceMetrics">
            <summary>
            The performance metrics.
            </summary>
        </member>
        <member name="M:Fusion.App.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.App" /> class.
            </summary>
        </member>
        <member name="P:Fusion.App.Name">
            <summary>
            Gets the application name. This information is taken from the <see cref="T:System.Reflection.AssemblyProductAttribute" /> in the entry assembly.
            </summary>
            <value>The application name.</value>
        </member>
        <member name="P:Fusion.App.Company">
            <summary>
            Gets the company name. This information is taken from the <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> in the entry assembly.
            </summary>
            <value>The company name.</value>
        </member>
        <member name="P:Fusion.App.Version">
            <summary>
            Gets the application version. This information is taken from the <see cref="T:System.Reflection.AssemblyFileVersionAttribute" /> or <see cref="T:System.Reflection.AssemblyVersionAttribute" /> in the entry assembly.
            </summary>
            <value>The application version.</value>
        </member>
        <member name="P:Fusion.App.Identifier">
            <summary>
            Gets the application identifier. This information is calculated from the <see cref="P:Fusion.App.Name"/>, <see cref="P:Fusion.App.Company"/> and <see cref="P:Fusion.App.Version"/> properties.
            </summary>
            <value>The application identifier.</value>
        </member>
        <member name="P:Fusion.App.InstanceIdentifier">
            <summary>
            Gets the application instance identifier. This information is calculated from the <see cref="P:Fusion.App.Name"/>, <see cref="P:Fusion.App.Company"/> and <see cref="P:Fusion.App.Version"/> properties, the user name and (optionally) the process identifier.
            </summary>
            <value>The application instance identifier.</value>
            <remarks>This property can change during the application startup.</remarks>
        </member>
        <member name="P:Fusion.App.Folder">
            <summary>
            Gets the path to the application folder.
            </summary>
            <value>The path to the application folder.</value>
        </member>
        <member name="P:Fusion.App.FeatureFolder">
            <summary>
            Gets the path to the application feature folder. Multiple folders can be specified, separated with a semicolon (;) character.
            </summary>
            <value>The path to the application feature folder.</value>
        </member>
        <member name="P:Fusion.App.Executable">
            <summary>
            Gets the path to the application executable file.
            </summary>
            <value>The path to the application executable file.</value>
        </member>
        <member name="P:Fusion.App.RegistryPath">
            <summary>
            Gets the path to the root key in the registry.
            </summary>
            <value>The path to the root key in the registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsPath">
            <summary>
            Gets the path to the application settings in registry.
            </summary>
            <value>The path to the application settings in registry.</value>
        </member>
        <member name="P:Fusion.App.RecoveryPath">
            <summary>
            Gets the path to the application recovery information in registry.
            </summary>
            <value>The path to the application recovery information in registry.</value>
        </member>
        <member name="P:Fusion.App.SessionPath">
            <summary>
            Gets the path to the application session information in registry.
            </summary>
            <value>The path to the application session information in registry.</value>
        </member>
        <member name="P:Fusion.App.Recovery">
            <summary>
            Gets the application recovery information.
            </summary>
            <value>The application recovery information.</value>
            <remarks>This property can change during the application startup.</remarks>
        </member>
        <member name="P:Fusion.App.Session">
            <summary>
            Gets the session information.
            </summary>
            <value>The session information.</value>
            <remarks>This property can change during the application startup.</remarks>
        </member>
        <member name="E:Fusion.App.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Fusion.App.InvokeAsync(System.Action)">
            <summary>
            Invokes an action in the UI thread asynchronously.
            </summary>
            <param name="action">The action to invoke.</param>
        </member>
        <member name="M:Fusion.App.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Fusion.App.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property name. If not specified, defaults to the caller member name.</param>
        </member>
        <member name="M:Fusion.App.OpenFile(System.String)">
            <summary>
            Opens a file for reading from the application resources.
            </summary>
            <param name="path">The path inside the application resources.</param>
            <returns>The file stream.</returns>
        </member>
        <member name="M:Fusion.App.OnStartup(System.Windows.StartupEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Application.Startup" /> event.
            </summary>
            <param name="startup">The <see cref="T:System.Windows.StartupEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.App.OnExit(System.Windows.ExitEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Application.Exit" /> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.ExitEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Fusion.App.GetPerformanceMetrics">
            <summary>
            Gets the performance metrics.
            </summary>
            <returns>A dictionary containing the operations and the performance metrics.</returns>
        </member>
        <member name="M:Fusion.App.ApplyOverridableSettings(Fusion.App.SettingsOverrides)">
            <summary>
            Applies the externally visible overridable settings.
            </summary>
            <param name="settingsOverrides">The settings overrides.</param>
        </member>
        <member name="M:Fusion.App.ExpandSymbols(System.String)">
            <summary>
            Expands the symbols in the text.
            </summary>
            <param name="text">The text.</param>
            <returns>The expanded text.</returns>
        </member>
        <member name="M:Fusion.App.ExpandPaths">
            <summary>
            Expands all paths that may contain symbols.
            </summary>
        </member>
        <member name="M:Fusion.App.SetDataFolder(System.String)">
            <summary>
            Sets the application data folder path.
            </summary>
            <param name="path">The data folder path.</param>
        </member>
        <member name="M:Fusion.App.SetFeatureFolder(System.String)">
            <summary>
            Sets the application feature folder path.
            </summary>
            <param name="path">The feature folder path.</param>
        </member>
        <member name="M:Fusion.App.SetRegistryPath(System.String)">
            <summary>
            Sets the root registry path.
            </summary>
            <param name="path">The registry path.</param>
        </member>
        <member name="M:Fusion.App.SetSettingsPath(System.String)">
            <summary>
            Sets the settings registry path.
            </summary>
            <param name="path">The registry path.</param>
        </member>
        <member name="M:Fusion.App.SetRecoveryPath(System.String)">
            <summary>
            Sets the recovery information registry path.
            </summary>
            <param name="path">The registry path.</param>
        </member>
        <member name="M:Fusion.App.SetSessionPath(System.String)">
            <summary>
            Sets the session registry path.
            </summary>
            <param name="path">The registry path.</param>
        </member>
        <member name="M:Fusion.App.OverrideRuntimeSettings(Fusion.App.SettingsOverrides)">
            <summary>
            Overrides the application runtime settings.
            </summary>
            <param name="settingsOverrides">The settings overrides.</param>
        </member>
        <member name="M:Fusion.App.OverrideRuntimeSettings(System.String,System.String)">
            <summary>
            Overrides the application runtime settings.
            </summary>
            <param name="key">The key to override.</param>
            <param name="value">The override value.</param>
        </member>
        <member name="M:Fusion.App.OverrideRuntimeSettingsFromCommandLine">
            <summary>
            Overrides the application runtime settings from the command line.
            </summary>
        </member>
        <member name="M:Fusion.App.Measure(System.String,System.Object,System.Boolean)">
            <summary>
            Measures the specified operation.
            </summary>
            <param name="operation">The operation to measure.</param>
            <param name="target">The target of the operation.</param>
            <param name="disablePerformanceWarning">Indicates whether to disable the performance warning.</param>
            <returns>The measurement session token.</returns>
        </member>
        <member name="T:Fusion.App.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.App.SettingsOverrides">
            <summary>
            Application settings overrides.
            </summary>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.EnableExceptionHandling">
            <summary>
            Gets or sets the override for whether the application level exception handling is enabled.
            </summary>
            <value>True if the application level exception handling is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.EnableMessageLogging">
            <summary>
            Gets or sets the override for whether the message logging is enabled.
            </summary>
            <value>True if the message logging is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.EnableRecoveryAndRestart">
            <summary>
            Gets or sets the override for whether the application recovery and restart is enabled.
            </summary>
            <value>True if the application recovery and restart is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.EnableSingleInstanceMode">
            <summary>
            Gets or sets the override for whether the single instance mode is enabled.
            </summary>
            <value>True if the single instance mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.EnableWindowGhosting">
            <summary>
            Gets or sets a value indicating whether the window ghosting is enabled.
            </summary>
            <value>True if the window ghosting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.EnableFeatureLoadingFromSubfolders">
            <summary>
            Gets or sets a value indicating whether the features are loaded from subfolders in the feature folder.
            </summary>
            <value>True if the features are loaded from subfolders in the feature folder, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.Culture">
            <summary>
            Gets or sets the override for the application culture.
            </summary>
            <value>The application culture.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.DataFolder">
            <summary>
            Gets or sets the override for the application data folder.
            </summary>
            <value>The application data folder.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.InitialFolder">
            <summary>
            Gets or sets the override for the initial application working folder.
            </summary>
            <value>The initial application working folder.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.FeatureFolder">
            <summary>
            Gets or sets the override for the application feature folder.
            </summary>
            <value>The application feature folder.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.LocalizationMode">
            <summary>
            Gets or sets the override for the application localization mode.
            </summary>
            <value>The application localization mode.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.Theme">
            <summary>
            Gets or sets the override for the application theme.
            </summary>
            <value>The application theme.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.RegistryPath">
            <summary>
            Gets the override for the path to the root key in the registry.
            </summary>
            <value>The path to the root key in the registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.SettingsPath">
            <summary>
            Gets or sets the override for the path to the application settings in registry.
            </summary>
            <value>The path to the application settings in registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.RecoveryPath">
            <summary>
            Gets or sets the override for the path to the application recovery information in registry.
            </summary>
            <value>The path to the application recovery information in registry.</value>
        </member>
        <member name="P:Fusion.App.SettingsOverrides.SessionPath">
            <summary>
            Gets or sets the override for the path to the application session information in registry.
            </summary>
            <value>The path to the application session information in registry.</value>
        </member>
        <member name="T:Fusion.App.SettingsStore">
            <summary>
            Application settings store.
            </summary>
            <summary>
            Application settings store.
            </summary>
        </member>
        <member name="P:Fusion.App.SettingsStore.EnableExceptionHandling">
            <summary>
            Gets or sets a value indicating whether the application level exception handling is enabled. The default value is False.
            </summary>
            <value>True if the application level exception handling is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.LocalizationMode">
            <summary>
            Gets or sets the application localization mode. The default value is <see cref="F:Fusion.LocalizationMode.Normal"/>.
            </summary>
            <value>The application localization mode.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.Culture">
            <summary>
            Gets or sets the application culture. The default value is "en-US".
            </summary>
            <value>The application culture.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.Theme">
            <summary>
            Gets or sets the application theme. The default value is "Generic".
            </summary>
            <value>The application theme.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.EnableMessageLogging">
            <summary>
            Gets or sets a value indicating whether the message logging is enabled. The default value is True.
            </summary>
            <value>True if the message logging is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.EnableRecoveryAndRestart">
            <summary>
            Gets or sets a value indicating whether the application recovery and restart is enabled. The default value is True.
            </summary>
            <value>True if the application recovery and restart is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.EnableSingleInstanceMode">
            <summary>
            Gets or sets a value indicating whether the single instance mode is enabled. The default value is False.
            </summary>
            <value>True if the single instance mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.EnableWindowGhosting">
            <summary>
            Gets or sets a value indicating whether the window ghosting is enabled. The default value is True.
            </summary>
            <value>True if the window ghosting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.EnableFeatureLoadingFromSubfolders">
            <summary>
            Gets or sets a value indicating whether the features are loaded from subfolders in the feature folder. The default value is False.
            </summary>
            <value>True if the features are loaded from subfolders in the feature folder, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.SettingsStore.FeatureFolder">
            <summary>
            Gets or sets the application feature folder. Multiple folders can be specified, separated with a semicolon (;) character. The default value is "Features".
            </summary>
            <value>The application feature folder.</value>
        </member>
        <member name="M:Fusion.App.SettingsStore.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.SettingsStore" /> class.
            </summary>
            <param name="path">The registry path.</param>
            <param name="defaults">The default values.</param>
        </member>
        <member name="F:Fusion.App.RestartArgument">
            <summary>
            The application restart command line argument.
            </summary>
        </member>
        <member name="F:Fusion.App.restartRequested">
            <summary>
            Indicates whether a restart has been requested.
            </summary>
        </member>
        <member name="F:Fusion.App.server">
            <summary>
            The remote object server.
            </summary>
        </member>
        <member name="M:Fusion.App.Start(Fusion.App)">
            <summary>
            Starts the application.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="M:Fusion.App.Start(Fusion.App,Fusion.App.SettingsOverrides)">
            <summary>
            Starts the application.
            </summary>
            <param name="application">The application.</param>
            <param name="settingsOverrides">The application settings overrides.</param>
        </member>
        <member name="M:Fusion.App.Restart">
            <summary>
            Shuts down and restarts the application.
            </summary>
        </member>
        <member name="M:Fusion.App.Run">
            <summary>
            Do not call this method. Use <c>App.Start(new YourApplication())</c> instead.
            </summary>
            <returns>The application exit code.</returns>
        </member>
        <member name="M:Fusion.App.Start1(Fusion.App)">
            <summary>
            Starts the application, step 1.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="M:Fusion.App.Start2(Fusion.App)">
            <summary>
            Starts the application, step 2.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="M:Fusion.App.Start3(Fusion.App)">
            <summary>
            Starts the application, step 3.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="T:Fusion.App.SingleInstanceActivator">
            <summary>
            The single instance activator.
            </summary>
        </member>
        <member name="M:Fusion.App.SingleInstanceActivator.Activate(System.String[])">
            <summary>
            Activates the application instance.
            </summary>
            <param name="commandLineArguments">The command line arguments.</param>
        </member>
        <member name="T:Fusion.App.WindowController">
            <summary>
            Window controller.
            </summary>
        </member>
        <member name="F:Fusion.App.WindowController.window">
            <summary>
            The window.
            </summary>
        </member>
        <member name="M:Fusion.App.WindowController.#ctor(System.Windows.Window)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.App.WindowController"/> class.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="P:Fusion.App.WindowController.IsOpen">
            <summary>
            Gets a value indicating whether the window is open.
            </summary>
            <value>True if the window is open, otherwise false.</value>
        </member>
        <member name="P:Fusion.App.WindowController.Left">
            <summary>
            Gets or sets the window left edge coordinate.
            </summary>
            <value>The window left edge coordinate.</value>
        </member>
        <member name="P:Fusion.App.WindowController.Top">
            <summary>
            Gets or sets the window top edge coordinate.
            </summary>
            <value>The window top edge coordinate.</value>
        </member>
        <member name="P:Fusion.App.WindowController.Width">
            <summary>
            Gets or sets the window width.
            </summary>
            <value>The window width.</value>
        </member>
        <member name="P:Fusion.App.WindowController.Height">
            <summary>
            Gets or sets the window height.
            </summary>
            <value>The window height.</value>
        </member>
        <member name="M:Fusion.App.WindowController.Activate">
            <summary>
            Activates the window.
            </summary>
        </member>
        <member name="M:Fusion.App.WindowController.BringToTop">
            <summary>
            Brings the window to top.
            </summary>
        </member>
        <member name="M:Fusion.App.WindowController.Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:Fusion.App.WindowController.Close(System.Object)">
            <summary>
            Closes the window.
            </summary>
            <param name="dialogResult">The dialog result.</param>
        </member>
        <member name="M:Fusion.App.WindowController.UpdateLayout">
            <summary>
            Updates the layout.
            </summary>
        </member>
        <member name="M:Fusion.App.WindowController.OnWindowClosed(System.Object,System.EventArgs)">
            <summary>
            Called when window is closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Fusion.Features.Panels.IContentPanel">
            <summary>
            The <see cref="T:Fusion.Features.Panels.IContentPanel"/> interfaces the content panel.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.IContentPanel.ViewName">
            <summary>
            Gets the view name.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.IContentPanel.HeaderTextKey">
            <summary>
            Gets the header text key.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.IContentPanel.HeaderGeometryKey">
            <summary>
            Gets the header geometry key.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.IContentPanel.Availability">
            <summary>
            Gets the availability of the panel.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.LayoutPanelVisibilityToggleMode">
            <summary>
            Layout panel visibility toggle mode.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelVisibilityToggleMode.Disabled">
            <summary>
            Toggle button is disabled.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelVisibilityToggleMode.SelectedOnly">
            <summary>
            Toggle the visibility of the selected layout panel only.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelVisibilityToggleMode.AllLayoutPanels">
            <summary>
            Toggle the visibility of all layout panels.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.PanelCloseAction">
            <summary>
            Panel close action.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelCloseAction.Close">
            <summary>
            Close panel.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelCloseAction.CloseAndDock">
            <summary>
            Close and dock panel back to default layout panel.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.PanelSelectorNavigationAction">
            <summary>
            Panel selector navigation action.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelSelectorNavigationAction.Replace">
            <summary>
            Replaces the other visible content panels in the layout panel.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelSelectorNavigationAction.ToggleVisibility">
            <summary>
            Toggles the content panel visibility.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.ToolTipConverter">
            <summary>
            Converts a tooltip ID to actual visual.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ToolTipConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value by using an instance of a tooltip converter created from a type. 
            </summary>
            <param name="value">The view model which contains both the tooltip converter type
            and its parameter produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. Uses the view model's header if a tooltip could not be converted.
            </returns>
        </member>
        <member name="M:Fusion.Features.Panels.ToolTipConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:Fusion.Features.Panels.TopPanelsView">
            <summary>
            TopPanels view.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.TopPanelsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.TopPanelsView"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.TopPanelsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.LeftPanelsView">
            <summary>
            LeftPanels view.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LeftPanelsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.LeftPanelsView"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LeftPanelsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.ContentPanel">
            <summary>
            Content panel that is placed inside a <see cref="T:Fusion.Features.Panels.LayoutPanel"/> or a <see cref="T:Fusion.Features.Panels.FloatingWindow"/>.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.LayoutPanelProperty">
            <summary>
            The LayoutPanel property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.FloatingWindowProperty">
            <summary>
            The FloatingWindow property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.HoveringOverProperty">
            <summary>
            The HoveringOver property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.IsLastPanelProperty">
            <summary>
            The IsLastPanel property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.IsContentEnabledProperty">
            <summary>
            The IsContentEnabled property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.IsTabVisibleProperty">
            <summary>
            The IsTabVisible property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.settings">
            <summary>
            The feature settings.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.host">
            <summary>
            The host settings.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.publishedView">
            <summary>
            The published view.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.ContentPanel.lastLayoutPanel">
            <summary>
            The last layout panel where the panel was docked.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.Features.Panels.ContentPanel"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.#ctor(Fusion.IHost,Fusion.PublishedViewInfo,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.ContentPanel" /> class.
            </summary>
            <param name="host">The feature host.</param>
            <param name="publishedView">The published view.</param>
            <param name="content">The panel content.</param>
        </member>
        <member name="T:Fusion.Features.Panels.ContentPanel.Panels_VisibilityChanged">
            <summary>
            Occurs when the visibility of a panel is changed.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="isVisible">True if the view is visible, otherwise false.</param>
        </member>
        <member name="T:Fusion.Features.Panels.ContentPanel.Panels_TabVisibilityChanged">
            <summary>
            Occurs when the visibility of a tab is changed.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="isTabVisible">True if the view is visible, otherwise false.</param>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.HoveringOver">
            <summary>
            Gets or sets the hovering over side.
            </summary>
            <value>
            The hovering over side.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsLastPanel">
            <summary>
            Gets or sets a value indicating whether this is the last panel.
            </summary>
            <value>
            True if this is the last panel, otherwise false.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsContentEnabled">
            <summary>
            Gets or sets a value indicating whether the panel content is enabled.
            </summary>
            <value>True if the panel content is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsTabVisible">
            <summary>
            Gets or sets a value indicating whether the tab is visible.
            </summary>
            <value>True if the tab content is visible, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsFloating">
            <summary>
            Gets or sets a value indicating whether the content panel is floating.
            </summary>
            <value>True if the content panel is floating, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.WindowBounds">
            <summary>
            Gets or sets window bounds.
            </summary>
            <value>Window bounds.</value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsWindowBoundsValid">
            <summary>
            Gets a value indicating whether this instance is window bounds valid.
            </summary>
            <value><c>true</c> if this instance is window bounds valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.Availability">
            <inheritdoc />
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.ViewName">
            <inheritdoc />
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.Location">
            <summary>
            Gets the panel location.
            </summary>
            <value>
            The panel location.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.HeaderTextKey">
            <inheritdoc />
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.ToolTipConverterType">
            <summary>
            Gets the tooltip converter type.
            </summary>
            <value>
            The tooltip converter type.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.ToolTipConverterParameter">
            <summary>
            Gets the tooltip converter parameter.
            </summary>
            <value>
            The tooltip converter parameter.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.HeaderGeometryKey">
            <inheritdoc />
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.Group">
            <summary>
            Gets the group key.
            </summary>
            <value>
            The group key.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.Order">
            <summary>
            Gets the order key.
            </summary>
            <value>
            The order key.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.HasNativeContent">
            <summary>
            Gets a value indicating whether the panel has native content.
            </summary>
            <value>
            True if the panel has native content, otherwise false.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsInitiallyVisible">
            <summary>
            Gets a value indicating whether the panel is initially visible.
            </summary>
            <value>Null if the metadata is not specified, true if the panel is initially visible, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.ContentPanel.IsTabInitiallyVisible">
            <summary>
            Gets a value indicating whether the tab is initially visible.
            </summary>
            <value>Null if the metadata is not specified, true if the tab is initially visible, otherwise false.</value>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.GetLayoutPanel(System.Windows.DependencyObject)">
            <summary>
            Gets the layout panel.
            </summary>
            <param name="element">The element.</param>
            <returns>The layout panel.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.SetLayoutPanel(System.Windows.DependencyObject,Fusion.Features.Panels.LayoutPanel)">
            <summary>
            Sets the layout panel.
            </summary>
            <param name="element">The element.</param>
            <param name="layoutPanel">The layout panel.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.GetFloatingWindow(System.Windows.DependencyObject)">
            <summary>
            Gets the floating window.
            </summary>
            <param name="element">The element.</param>
            <returns>The floating window.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.SetFloatingWindow(System.Windows.DependencyObject,Fusion.Features.Panels.FloatingWindow)">
            <summary>
            Sets the floating window.
            </summary>
            <param name="element">The element.</param>
            <param name="floatingWindow">The floating window.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.Reset">
            <summary>
            Resets the content panel.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.Show(Fusion.Features.Panels.LayoutPanelViewModel,System.Boolean)">
            <summary>
            Shows the content panel.
            </summary>
            <param name="defaultLayoutPanel">The default layout panel.</param>
            <param name="showWithOthers">Indicates whether the panel should be shown with the existing panels rather than replacing them.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.ShowInLayoutPanel(Fusion.Features.Panels.LayoutPanelViewModel,System.Boolean)">
            <summary>
            Shows the content panel in the specified layout panel.
            </summary>
            <param name="layoutPanel">The layout panel.</param>
            <param name="showWithOthers">Indicates whether the panel should be shown with the existing panels rather than replacing them.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.Hide">
            <summary>
            Hides the panel.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.HideAttached">
            <summary>
            Hides the panel only if it is attached.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.HideDetached">
            <summary>
            Hides the panel only if it is detached.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.Float(System.Boolean)">
            <summary>
            Converts the content into a floating window.
            </summary>
            <param name="dragging">Indicates whether the panel is being dragged.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.ResetSize">
            <summary>
            Resets the panel size.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.RequestHelp">
            <summary>
            Requests help.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.OnIsTabVisibleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Action to take when the IsTabVisibleProperty is changed.
            </summary>
            <param name="sender">The dependency object.</param>
            <param name="e">The dependency property changed events args.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.OnIsTabVisiblePropertyChangedCallBack(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Callback from dependency property when the IsTabVisibleProperty is changed.
            </summary>
            <param name="sender">The dependency object.</param>
            <param name="e">The dependency property changed events args.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.OnLayoutPanelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the layout panel is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.ContentPanel.BindProperty(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.DependencyProperty)">
            <summary>
            Binds the specified property between the source and target elements.
            </summary>
            <param name="source">The source element.</param>
            <param name="target">The target element.</param>
            <param name="property">The property.</param>
        </member>
        <member name="T:Fusion.Features.Panels.ContentPanel.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.FloatingWindow">
            <summary>
            Floating window.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.IsDraggingProperty">
            <summary>
            The IsDragging property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.SettingsPrefix">
            <summary>
            The settings prefix.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.FloatingWindows">
            <summary>
            The floating windows.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.targetLayoutPanel">
            <summary>
            The target layout panel.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.before">
            <summary>
            The content panel before the insertion point.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.after">
            <summary>
            The content panel after the insertion point.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.insertionIndex">
            <summary>
            The insertion index.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.Features.Panels.FloatingWindow"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.FloatingWindow"/> class.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.FloatingWindow.IsDragging">
            <summary>
            Gets or sets a value indicating whether the window is being dragged.
            </summary>
            <value>
            True if the window is being dragged, otherwise false.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.FloatingWindow.TargetLayoutPanel">
            <summary>
            Gets or sets the target layout panel.
            </summary>
            <value>
            The target layout panel.
            </value>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.ShowAll">
            <summary>
            Shows all floating windows.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.HideAll">
            <summary>
            Hides all floating windows.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.CloseAll">
            <summary>
            Close all floating windows.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.LoadSizeAndLocation(Fusion.ISettings,System.String)">
            <summary>
            Loads the size and location.
            </summary>
            <param name="settings">The settings.</param>
            <param name="viewName">The view name.</param>
            <returns>True if the size and location were loaded, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.SaveSizeAndLocation(Fusion.ISettings,System.String)">
            <summary>
            Saves the size and location.
            </summary>
            <param name="settings">The settings.</param>
            <param name="viewName">The view name.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.StartDragging">
            <summary>
            Starts dragging the window.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.Closed" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.OnLocationChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.OnSourceInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.SourceInitialized"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.GetElementUnderMouse``1(System.Collections.Generic.IEnumerable{``0},System.Windows.Point)">
            <summary>
            Gets the element under the mouse.
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <param name="elements">The elements.</param>
            <param name="mouse">The mouse point.</param>
            <returns>
            The element under the mouse.
            </returns>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.GetInsertionPoint(System.Collections.Generic.IReadOnlyList{Fusion.Features.Panels.ContentPanel},System.Windows.Point,System.Windows.Controls.Orientation)">
            <summary>
            Gets the insertion point.
            </summary>
            <param name="contentPanels">The elements.</param>
            <param name="mouse">The mouse point.</param>
            <param name="layoutOrientation">The layout orientation.</param>
            <returns>The insertion point.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.UpdateContentPanel(Fusion.Features.Panels.ContentPanel@,Fusion.Features.Panels.ContentPanel,System.Windows.Controls.Orientation,System.String,System.String)">
            <summary>
            Updates the content panel.
            </summary>
            <param name="current">The current content panel.</param>
            <param name="next">The next content panel.</param>
            <param name="orientation">The layout orientation.</param>
            <param name="horizontal">The horizontal dock position.</param>
            <param name="vertical">The vertical dock position.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.SetInsertionPoint(Fusion.Features.Panels.FloatingWindow.InsertionPoint)">
            <summary>
            Sets the insertion point.
            </summary>
            <param name="insertionPoint">The insertion point.</param>
        </member>
        <member name="M:Fusion.Features.Panels.FloatingWindow.HwndSourceHook(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Window message handler hook.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="msg">The message ID.</param>
            <param name="wParam">The message's wParam value.</param>
            <param name="lParam">The message's lParam value.</param>
            <param name="handled">A value that indicates whether the message was handled. Set the value to true if the message was handled; otherwise, false.</param>
            <returns>
            The appropriate return value depends on the particular message. See the message documentation details for the Win32 message being handled.
            </returns>
        </member>
        <member name="T:Fusion.Features.Panels.FloatingWindow.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.FloatingWindow.Win32.POINT">
            <summary>
            The point structure.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.FloatingWindow.InsertionPoint">
            <summary>
            Insertion point.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.FloatingWindow.InsertionPoint.None">
            <summary>
            The empty insertion point.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.FloatingWindow.InsertionPoint.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.FloatingWindow.InsertionPoint.Before">
            <summary>
            Gets or sets the content panel before the insertion point.
            </summary>
            <value>
            The content panel before the insertion point.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.FloatingWindow.InsertionPoint.After">
            <summary>
            Gets or sets the content panel after the insertion point.
            </summary>
            <value>
            The content panel after the insertion point.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.FloatingWindow.InsertionPoint.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="T:Fusion.Features.Panels.BottomPanelsView">
            <summary>
            BottomPanels view.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.BottomPanelsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.BottomPanelsView"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.BottomPanelsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.LayoutPanel">
            <summary>
            Layout panel that presents the docked <see cref="T:Fusion.Features.Panels.ContentPanel"/>s.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.IsContentHoveringProperty">
            <summary>
            The IsContentHovering property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.IsContentHoveringOverProperty">
            <summary>
            The IsContentHoveringOver property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.IsContentHoveringOverReplaceProperty">
            <summary>
            The IsContentHoveringOverReplace property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.OrientationProperty">
            <summary>
            The Orientation property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.ResizeEdgeProperty">
            <summary>
            The ResizeEdge property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.FixedSizeProperty">
            <summary>
            The FixedSize property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.CreatedLayoutPanels">
            <summary>
            The layout panels.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanel.containerPanel">
            <summary>
            The container panel.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.Features.Panels.LayoutPanel"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.LayoutPanel"/> class.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.LayoutPanels">
            <summary>
            Gets the layout panels.
            </summary>
            <value>The layout panels.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.ViewModel">
            <summary>
            Gets the view model.
            </summary>
            <value>The view model.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.IsContentHovering">
            <summary>
            Gets or sets a value indicating whether a floating content is hovering.
            </summary>
            <value>True if a floating content is hovering, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.IsContentHoveringOver">
            <summary>
            Gets or sets a value indicating whether a floating content is hovering over the layout panel.
            </summary>
            <value>True if a floating content is hovering over the layout panel, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.IsContentHoveringOverReplace">
            <summary>
            Gets or sets a value indicating whether a floating content is hovering over the replace area in the layout panel.
            </summary>
            <value>True if a floating content is hovering over the replace area in the layout panel, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.Orientation">
            <summary>
            Gets or sets the layout orientation.
            </summary>
            <value>The layout orientation.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.ResizeEdge">
            <summary>
            Gets or sets the ResizeEdge value.
            </summary>
            <value>The ResizeEdge value.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanel.FixedSize">
            <summary>
            Gets or sets the fixed size.
            </summary>
            <value>The fixed size.</value>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.GetOrientation(System.Windows.DependencyObject)">
            <summary>
            Gets the layout orientation.
            </summary>
            <param name="element">The element.</param>
            <returns>The layout orientation.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.SetOrientation(System.Windows.DependencyObject,System.Windows.Controls.Orientation)">
            <summary>
            Sets the layout orientation.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.OnCreateAutomationPeer">
            <summary>
            Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.
            </summary>
            <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.
            </summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.CalculateSize(System.Boolean)">
            <summary>
            Calculates the size for the panel.
            </summary>
            <param name="itemsModified">Indicates whether the items were modified.</param>
        </member>
        <member name="T:Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer">
            <summary>
            <see cref="T:Fusion.Features.Panels.LayoutPanel"/> automation peer.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer.#ctor(Fusion.Features.Panels.LayoutPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer.CreateItemAutomationPeer(System.Object)">
            <summary>
            When overridden in a derived class, creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection of this <see cref="T:System.Windows.Controls.ItemsControl" />.
            </summary>
            <param name="item">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</param>
            <returns>The new <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> created.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> enumeration value.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>An <see cref="F:System.String.Empty" /> string.</returns>
        </member>
        <member name="T:Fusion.Features.Panels.LayoutPanel.ContentPanelAutomationPeer">
            <summary>
            <see cref="T:Fusion.Features.Panels.ContentPanel"/> automation peer.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.ContentPanelAutomationPeer.#ctor(Fusion.Features.Panels.ContentPanel,Fusion.Features.Panels.LayoutPanel.LayoutPanelAutomationPeer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.LayoutPanel.ContentPanelAutomationPeer"/> class.
            </summary>
            <param name="contentPanel">The content panel.</param>
            <param name="layoutPanelAutomationPeer">The layout panel automation peer.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.ContentPanelAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanel.ContentPanelAutomationPeer.GetClassNameCore">
            <summary>
            When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>The class name.</returns>
        </member>
        <member name="T:Fusion.Features.Panels.LayoutPanelViewModel">
            <summary>
            Layout panel view model.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelViewModel.contentPanels">
            <summary>
            The content panels.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelViewModel.isVisible">
            <summary>
            Indicates whether the layout panel is visible.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelViewModel.hasVisibleItems">
            <summary>
            Indicates whether the layout panel has visible items.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LayoutPanelViewModel.fixedSize">
            <summary>
            The fixed size.
            </summary>
        </member>
        <member name="E:Fusion.Features.Panels.LayoutPanelViewModel.ContentPanelsChanged">
            <summary>
            Occurs when the content panels are changed.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanelViewModel.ContentPanels">
            <summary>
            Gets the content panels.
            </summary>
            <value>The content panels.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanelViewModel.IsVisible">
            <summary>
            Gets or sets a value indicating whether the layout panel is visible.
            </summary>
            <value>True if the layout panel is visible, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanelViewModel.HasVisibleItems">
            <summary>
            Gets a value indicating whether the layout panel has visible items.
            </summary>
            <value>True if the layout panel has visible items, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.LayoutPanelViewModel.FixedSize">
            <summary>
            Gets or sets the fixed size.
            </summary>
            <value>The fixed size.</value>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.Add(Fusion.Features.Panels.ContentPanel)">
            <summary>
            Adds the specified content panel.
            </summary>
            <param name="contentPanel">The content panel.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.Insert(System.Int32,Fusion.Features.Panels.ContentPanel)">
            <summary>
            Inserts the content panel at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="contentPanel">The content panel.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.Remove(Fusion.Features.Panels.ContentPanel)">
            <summary>
            Removes the specified content panel.
            </summary>
            <param name="contentPanel">The content panel.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.RemoveAll">
            <summary>
            Removes all content panels.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.Hide(Fusion.Features.Panels.ContentPanel)">
            <summary>
            Hides the specified content panel.
            </summary>
            <param name="contentPanel">The content panel.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.HideAll">
            <summary>
            Hides all content panels.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.LayoutPanelViewModel.OnContentPanelsChanged">
            <summary>
            Raises the <see cref="E:ContentPanelsChanged"/> event.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.LinearLayoutPanel">
            <summary>
            Linear layout panel.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LinearLayoutPanel.OrientationProperty">
            <summary>
            The Orientation property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LinearLayoutPanel.HasFixedSizeProperty">
            <summary>
            The HasFixedSize property.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LinearLayoutPanel.fixedSize">
            <summary>
            The fixed size.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.LinearLayoutPanel.uniformSizeCount">
            <summary>
            The number of child elements with uniform size.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.LinearLayoutPanel.Orientation">
            <summary>
            Gets or sets the panel orientation.
            </summary>
            <value>
            The panel orientation.
            </value>
        </member>
        <member name="M:Fusion.Features.Panels.LinearLayoutPanel.GetHasFixedSize(System.Windows.DependencyObject)">
            <summary>
            Gets whether the element has a fixed size.
            </summary>
            <param name="element">The element.</param>
            <returns>
            True if the element has a fixed size, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Features.Panels.LinearLayoutPanel.SetHasFixedSize(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets whether the element has a fixed size.
            </summary>
            <param name="element">The element.</param>
            <param name="value">Indicates whether the element has a fixed size.</param>
        </member>
        <member name="M:Fusion.Features.Panels.LinearLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="M:Fusion.Features.Panels.LinearLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="M:Fusion.Features.Panels.LinearLayoutPanel.GetMaximumSize(System.Double,System.Double,System.Boolean)">
            <summary>
            Gets the maximum size for the panels.
            </summary>
            <param name="maximum">The maximum size.</param>
            <param name="desired">The desired size, if any.</param>
            <param name="preferMaximum">Indicates whether to prefer the maximum size over the desired size.</param>
            <returns>The calculated maximum size.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.LinearLayoutPanel.GetPreferredSize(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Selects the preferred size.
            </summary>
            <param name="maximum">The maximum size.</param>
            <param name="natural">The natural size.</param>
            <param name="desired">The desired size, if any.</param>
            <param name="preferMaximum">Indicates whether to prefer the maximum size over the desired size.</param>
            <returns>
            The preferred size.
            </returns>
        </member>
        <member name="T:Fusion.Features.Panels.PanelSelector">
            <summary>
            Panel selector.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelSelector.VisiblePanelSelectors">
            <summary>
            The visible panel selectors.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelSelector.parentWindow">
            <summary>
            The parent window.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelector.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.Features.Panels.PanelSelector"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.PanelSelector"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelector.OnParentWindowStateChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Window.StateChanged" /> event for the parent window.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelector.SetParentWindow(System.Windows.Window)">
            <summary>
            Sets the parent window.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelector.SetVisibility(System.Boolean)">
            <summary>
            Toggles the panel selector visibility.
            </summary>
            <param name="isVisible">Indicates whether the panel selector is visible.</param>
        </member>
        <member name="T:Fusion.Features.Panels.PanelSelectorViewModel">
            <summary>
            Panel selector view model.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelSelectorViewModel.layoutPanels">
            <summary>
            The layout panels.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.#ctor(System.Collections.Generic.Dictionary{System.String,Fusion.Features.Panels.ContentPanel},System.Collections.Generic.Dictionary{System.String,Fusion.Features.Panels.LayoutPanelViewModel},System.String,Fusion.Features.Panels.LayoutPanelVisibilityToggleMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.PanelSelectorViewModel" /> class.
            </summary>
            <param name="contentPanels">The content panels.</param>
            <param name="layoutPanels">The layout panels.</param>
            <param name="location">The location.</param>
            <param name="layoutPanelVisibilityToggleMode">The layout panel visibility toggle mode.</param>
        </member>
        <member name="E:Fusion.Features.Panels.PanelSelectorViewModel.PanelSelectorNavigationActionChanged">
            <summary>
            Occurs when the panel selector navigation action changed.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.PanelSelectorViewModel.PanelSelectorNavigationAction">
            <summary>
            Gets or sets the panel selector navigation action.
            </summary>
        </member>
        <member name="P:Fusion.Features.Panels.PanelSelectorViewModel.LayoutPanel">
            <summary>
            Gets the controlled layout panel.
            </summary>
            <value>
            The controlled layout panel.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.PanelSelectorViewModel.ContentPanels">
            <summary>
            Gets the grouped and sorted content panels.
            </summary>
            <value>
            The grouped and sorted content panels.
            </value>
        </member>
        <member name="P:Fusion.Features.Panels.PanelSelectorViewModel.LayoutPanelVisibilityToggleMode">
            <summary>
            Gets the layout panel visibility toggle mode.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.ToggleLayoutPanels(System.Object)">
            <summary>
            Toggles the layout panel visibility.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.NavigateToPanel(System.Object)">
            <summary>
            Navigates to the panel.
            </summary>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.Show(System.Object)">
            <summary>
            Shows the content panel.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.ShowOrActivate(System.Object)">
            <summary>
            Shows or activates the content panel.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.ShowWithOthers(System.Object)">
            <summary>
            Shows the content panel with others.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.Toggle(System.Object)">
            <summary>
            Toggles the content panel visibility.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.ChangeNavigationAction(System.Object)">
            <summary>
            Changes navigation action.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.Float(System.Object)">
            <summary>
            Floats the content panel.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.Dock(System.Object)">
            <summary>
            Docks the content panel.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelSelectorViewModel.GetLayoutPanel(System.String)">
            <summary>
            Gets the layout panel.
            </summary>
            <param name="location">The location.</param>
            <returns>
            The layout panel view model.
            </returns>
        </member>
        <member name="T:Fusion.Features.Panels.PanelsFeature">
            <summary>
            Panels feature.
            </summary>
            <summary>
            Panels feature.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_GetVisible">
            <summary>
            Gets the names of the visible panels.
            </summary>
            <returns>The names of the visible panels.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_ResetLayout">
            <summary>
            Resets the panel layout to the startup configuration.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_ResetLayout(System.Boolean)">
            <summary>
            Resets the panel layout to the startup configuration.
            </summary>
            <param name="ignorePersistentState">Indicates whether to ignore the persisted state.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_Show(System.String,System.String)">
            <summary>
            Shows a panel.
            </summary>
            <param name="viewName">The panel view name.</param>
            <param name="location">The panel location. Null shows the panel at the current or default location.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_Show(System.String,System.String,System.Boolean)">
            <summary>
            Shows a panel.
            </summary>
            <param name="viewName">The panel view name.</param>
            <param name="location">The panel location. Null shows the panel at the current or default location.</param>
            <param name="showWithOthers">Indicates whether the panel should be shown with the existing panels rather than replacing them.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_Hide(System.String)">
            <summary>
            Hides a panel.
            </summary>
            <param name="viewName">The panel view name.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_HideAll">
            <summary>
            Hides all panels.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_HideAttached">
            <summary>
            Hides all the attached panels.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_HideDetached">
            <summary>
            Hides all the detached panels.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_HideLocation(System.String)">
            <summary>
            Hides all the panels from the given location.
            </summary>
            <param name="location">The panel location.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_ShowLocation(System.String)">
            <summary>
            Shows all the panels from the given location.
            </summary>
            <param name="location">The panel location.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_HideAllLocations">
            <summary>
            Hides all the panels from all locations.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_ShowAllLocations">
            <summary>
            Shows all the panels from all locations.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_GetIsEnabled(System.String)">
            <summary>
            Gets a value indicating whether a panel is enabled.
            </summary>
            <param name="viewName">The panel view name.</param>
            <returns>True if the panel is enabled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_SetIsEnabled(System.String,System.Boolean)">
            <summary>
            Sets a value indicating whether a panel is enabled.
            </summary>
            <param name="viewName">The panel view name.</param>
            <param name="enabled">True if the panel is enabled, otherwise false.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_GetIsTabVisible(System.String)">
            <summary>
            Gets a value indicating whether a tab is visible.
            </summary>
            <param name="viewName">The panel view name.</param>
            <returns>True if the tab is visible, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Panels_SetIsTabVisible(System.String,System.Boolean)">
            <summary>
            Sets a value indicating whether a tab is visible.
            </summary>
            <param name="viewName">The panel view name.</param>
            <param name="tabVisible">True if the tab is visible, otherwise false.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.ShowPanel(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Shows a panel.
            </summary>
            <param name="viewName">The panel view name.</param>
            <param name="location">The panel location. Null shows the panel at the current or default location.</param>
            <param name="showWithOthers">Indicates whether the panel should be shown with the existing panels rather than replacing them.</param>
        </member>
        <member name="F:Fusion.Features.Panels.PanelsFeature.LayoutSettingsPrefix">
            <summary>
            The layout settings prefix.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelsFeature.VisibilitySettingsPrefix">
            <summary>
            The visibility settings prefix.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelsFeature.LayoutSizeSettingsPrefix">
            <summary>
            The layout size settings prefix.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelsFeature.contentPanels">
            <summary>
            The content panels.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelsFeature.layoutPanels">
            <summary>
            The layout panels.
            </summary>
        </member>
        <member name="F:Fusion.Features.Panels.PanelsFeature.initialized">
            <summary>
            Indicates whether the feature has been initialized.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.PanelsFeature.Panels_Loaded">
            <summary>
            Occurs when a panels are loaded.
            </summary>
            <param name="panels">The panels.</param>
        </member>
        <member name="P:Fusion.Features.Panels.PanelsFeature.PersistPanelLayout">
            <summary>
            Gets whether the panel layout is persistent.
            </summary>
            <value>True if the panel layout is persistent, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.PanelsFeature.HidePanelsOnStartUp">
            <summary>
            Gets whether the panels are initially hidden.
            </summary>
            <value>True if the panels are initially hidden, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.PanelsFeature.FloatPanelsOnStartUp">
            <summary>
            Gets whether the panels are restored to floated state.
            </summary>
            <value>True if the panels should be restored to floating postion, otherwise false.</value>
        </member>
        <member name="P:Fusion.Features.Panels.PanelsFeature.PanelSelectorNavigationAction">
            <summary>
            Gets the panel selector navigation action.
            </summary>
            <value>The panel selector navigation action.</value>
        </member>
        <member name="P:Fusion.Features.Panels.PanelsFeature.PanelCloseAction">
            <summary>
            Gets the panel close action.
            </summary>
            <value>The panel close action.</value>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.Stopping(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the application is stopping.
            </summary>
            <param name="stopping">The cancelable event.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.CreatePanels(System.Object)">
            <summary>
            Creates the panels.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>The view model.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.CreatePanelSelector(System.Object)">
            <summary>
            Creates the panel selector.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>The view model.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.EnsureInitialized">
            <summary>
            Ensures that the feature is initialized.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.GetLayoutPanel(System.String)">
            <summary>
            Gets the layout panel view model for the specified location.
            </summary>
            <param name="location">The location.</param>
            <returns>The view model.</returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.SetLayoutPanelVisibility(System.String,System.Boolean)">
            <summary>
            Sets the layout panel visibility.
            </summary>
            <param name="location">The location. If null, the applies the value to all layout panels.</param>
            <param name="isVisible">Controls whether the layout panel is visible.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.LoadPanelLayout(System.Boolean)">
            <summary>
            Loads the panel layout.
            </summary>
            <param name="ignorePersistentState">Indicates whether to ignore the persistent state.</param>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.IsViewDocked(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.String)">
            <summary>
            Determines whether content panel is directly docked to any dock areas.
            </summary>
            <param name="layout">The dock panels location\panel names.</param>
            <param name="name">The name of panel view.</param>
            <returns>
              <c>true</c> if view is found docked layout saved in registry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Features.Panels.PanelsFeature.SavePanelLayout">
            <summary>
            Saves the panel layout.
            </summary>
        </member>
        <member name="T:Fusion.Features.Panels.RightPanelsView">
            <summary>
            RightPanels view.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.RightPanelsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Panels.RightPanelsView"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Panels.RightPanelsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Fusion.Features.Testing.CoordinatorView">
            <summary>
            Coordinator view.
            </summary>
            <summary>
            CoordinatorView
            </summary>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Testing.CoordinatorView"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Fusion.Features.Testing.CoordinatorViewModel">
            <summary>
            Coordinator view model.
            </summary>
        </member>
        <member name="T:Fusion.Features.Testing.CoordinatorViewModel.Testing_RunTests">
            <summary>
            Runs the tests.
            </summary>
            <param name="paths">The test assembly paths.</param>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Features.Testing.CoordinatorViewModel"/> class.
            </summary>
        </member>
        <member name="P:Fusion.Features.Testing.CoordinatorViewModel.Results">
            <summary>
            Gets the results.
            </summary>
            <value>The results.</value>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorViewModel.Clear">
            <summary>
            Clears the results.
            </summary>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorViewModel.RunTests">
            <summary>
            Runs the tests.
            </summary>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorViewModel.Testing_Passed(System.String,System.String,System.TimeSpan)">
            <summary>
            Occurs when a test method passes.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
            <param name="duration">The test duration.</param>
        </member>
        <member name="M:Fusion.Features.Testing.CoordinatorViewModel.Testing_Failed(System.String,System.String,System.TimeSpan,System.Exception)">
            <summary>
            Occurs when a test method fails.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
            <param name="duration">The test duration.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Fusion.Features.Testing.CoordinatorViewModel.TestResult">
            <summary>
            Test result.
            </summary>
        </member>
        <member name="P:Fusion.Features.Testing.CoordinatorViewModel.TestResult.TypeName">
            <summary>
            Gets or sets the type name.
            </summary>
            <value>The type name.</value>
        </member>
        <member name="P:Fusion.Features.Testing.CoordinatorViewModel.TestResult.MethodName">
            <summary>
            Gets or sets the method name.
            </summary>
            <value>The method name.</value>
        </member>
        <member name="P:Fusion.Features.Testing.CoordinatorViewModel.TestResult.Duration">
            <summary>
            Gets or sets the test duration.
            </summary>
            <value>The test duration.</value>
        </member>
        <member name="P:Fusion.Features.Testing.CoordinatorViewModel.TestResult.Result">
            <summary>
            Gets or sets the test result.
            </summary>
            <value>The test result.</value>
        </member>
        <member name="T:Fusion.Features.Testing.TestingFeature">
            <summary>
            Testing feature.
            </summary>
        </member>
        <member name="T:Fusion.Features.Testing.TestingFeature.Testing_Start">
            <summary>
            Occurs when a test method is started.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
        </member>
        <member name="T:Fusion.Features.Testing.TestingFeature.Testing_Passed">
            <summary>
            Occurs when a test method passes.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
            <param name="duration">The test duration.</param>
        </member>
        <member name="T:Fusion.Features.Testing.TestingFeature.Testing_Failed">
            <summary>
            Occurs when a test method fails.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
            <param name="duration">The test duration.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Fusion.Features.Testing.TestingFeature.Testing_RunTests(System.String[])">
            <summary>
            Runs the tests.
            </summary>
            <param name="paths">The test assembly paths.</param>
        </member>
        <member name="M:Fusion.Features.Testing.TestingFeature.CreateCoordinator(System.Object)">
            <summary>
            Creates the Coordinator view model.
            </summary>
            <param name="parameter">The view parameter.</param>
            <returns>The Coordinator view model.</returns>
        </member>
        <member name="T:Fusion.Testing.Host">
            <summary>
            <see cref="T:Fusion.IHost"/> implementation for testing purposes.
            </summary>
            <example>
            <code><![CDATA[
            [Test]
            public void ExampleTest()
            {
                var restartCalled = 0;
            
                var viewModel = new ExampleViewModel()
                {
                    Host = new Host
                    {
                        UI = new HostUI
                        {
                            GetLocalizedText = resourceKey =>
                            {
                                Assert.AreEqual("ExampleKey", resourceKey);
                                return resourceKey;
                            },
                        },
            
                        Restart = delegate
                        {
                            restartCalled++;
                        },
                    },
                };
            
                // will call Host.UI.GetLocalizedText() and then Host.Restart()
                viewModel.SomeMethod();
                
                Assert.AreEqual(1, restartCalled);
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Fusion.Testing.Host.Invoke">
            <summary>
            Host.Invoke implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.InvokeWithResult">
            <summary>
            Host.Invoke (with a return value) implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.InvokeDomainLogic">
            <summary>
            <see cref="M:Fusion.IHost.InvokeDomainLogic(System.Action)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.InvokeDomainLogicWithResult">
            <summary>
            <see cref="M:Fusion.IHost.InvokeDomainLogic``1(System.Func{``0})"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.StartExternalService">
            <summary>
            <see cref="M:Fusion.IHost.StartExternalService(Fusion.RemoteObject)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.StartExternalProgram">
            <summary>
            <see cref="M:Fusion.IHost.StartExternalProgram(System.String,System.String[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.Shutdown">
            <summary>
            <see cref="M:Fusion.IHost.Shutdown"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.Restart">
            <summary>
            <see cref="M:Fusion.IHost.Restart"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.Host"/> class.
            </summary>
        </member>
        <member name="P:Fusion.Testing.Host.Diagnostics">
            <summary>
            Gets or sets the host diagnostics.
            </summary>
            <value>The host diagnostics.</value>
        </member>
        <member name="P:Fusion.Testing.Host.UI">
            <summary>
            Gets or sets the host UI.
            </summary>
            <value>The host UI.</value>
        </member>
        <member name="P:Fusion.Testing.Host.User">
            <summary>
            Gets or sets the host user information.
            </summary>
            <value>The host user information.</value>
        </member>
        <member name="P:Fusion.Testing.Host.Fusion#IHost#Diagnostics">
            <summary>
            Gets the host diagnostics.
            </summary>
            <value>The host diagnostics.</value>
        </member>
        <member name="P:Fusion.Testing.Host.Fusion#IHost#UI">
            <summary>
            Gets the host UI.
            </summary>
            <value>The host UI.</value>
        </member>
        <member name="P:Fusion.Testing.Host.Fusion#IHost#User">
            <summary>
            Gets the host user information.
            </summary>
            <value>The host user information.</value>
        </member>
        <member name="P:Fusion.Testing.Host.Settings">
            <summary>
            Gets the host settings.
            </summary>
            <value>The host settings.</value>
        </member>
        <member name="P:Fusion.Testing.Host.Recovery">
            <summary>
            Gets the host recovery information.
            </summary>
            <value>The host recovery information.</value>
        </member>
        <member name="P:Fusion.Testing.Host.Session">
            <summary>
            Gets the host session information.
            </summary>
            <value>The host session information.</value>
        </member>
        <member name="P:Fusion.Testing.Host.DataFolder">
            <summary>
            Gets or sets the path to the host data folder.
            </summary>
            <value>The path to the host data folder.</value>
        </member>
        <member name="P:Fusion.Testing.Host.TempFolder">
            <summary>
            Gets or sets  the path to the host temp folder.
            </summary>
            <value>The path to the host temp folder.</value>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#Invoke``1(System.Action{``0})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#Invoke``1(System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#Invoke``2(System.Func{``0,``1})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#Invoke``2(System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#InvokeDomainLogic(System.Action)">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#InvokeDomainLogic``1(System.Func{``0})">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#StartExternalService(Fusion.RemoteObject)">
            <summary>
            Starts an external service.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#StartExternalProgram(System.String,System.String[])">
            <summary>
            Starts an external program. The connection name is passed as the first command line argument.
            </summary>
            <param name="path">The path to the external program. If the path is relative, the root is the application folder.</param>
            <param name="extraCommandLineArguments">The extra command line arguments.</param>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#Shutdown">
            <summary>
            Requests the host to shut down.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.Fusion#IHost#Restart">
            <summary>
            Requests the host to shut down and restart.
            </summary>
        </member>
        <member name="T:Fusion.Testing.Host.InvokeWrapper`1">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.InvokeWrapper`1.host">
            <summary>
            The testing host.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.#ctor(Fusion.Testing.Host)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.Host.InvokeWrapper`1"/> class.
            </summary>
            <param name="host">The testing host.</param>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.CreateDelegate">
            <summary>
            Creates wrapper the delegate.
            </summary>
            <returns>The wrapper delegate.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke0">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke1``1(``0)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke2``2(``0,``1)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke3``3(``0,``1,``2)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke4``4(``0,``1,``2,``3)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke5``5(``0,``1,``2,``3,``4)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke6``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke7``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke8``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvoke9``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult0``1">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult1``2(``1)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult2``3(``1,``2)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult3``4(``1,``2,``3)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult4``5(``1,``2,``3,``4)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult5``6(``1,``2,``3,``4,``5)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult6``7(``1,``2,``3,``4,``5,``6)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult7``8(``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult8``9(``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.InvokeWrapper`1.OnInvokeWithResult9``10(``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="T:Fusion.Testing.Host.AsyncInvokeWrapper`1">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Host.AsyncInvokeWrapper`1.host">
            <summary>
            The testing host.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.#ctor(Fusion.Testing.Host)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.Host.AsyncInvokeWrapper`1"/> class.
            </summary>
            <param name="host">The testing host.</param>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.CreateDelegate">
            <summary>
            Creates wrapper the delegate.
            </summary>
            <returns>The wrapper delegate.</returns>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke0">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke1``1(``0)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke2``2(``0,``1)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke3``3(``0,``1,``2)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke4``4(``0,``1,``2,``3)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke5``5(``0,``1,``2,``3,``4)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke6``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke7``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke8``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvoke9``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult0``1">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult1``2(``1)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult2``3(``1,``2)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult3``4(``1,``2,``3)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult4``5(``1,``2,``3,``4)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult5``6(``1,``2,``3,``4,``5)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult6``7(``1,``2,``3,``4,``5,``6)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult7``8(``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult8``9(``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Host.AsyncInvokeWrapper`1.OnInvokeWithResult9``10(``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Invoke wrapper.
            </summary>
        </member>
        <member name="T:Fusion.Testing.HostDiagnostics">
            <summary>
            <see cref="T:Fusion.IHostDiagnostics"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostDiagnostics.Error">
            <summary>
            <see cref="M:Fusion.IHostDiagnostics.Error(System.String,System.Object[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostDiagnostics.Warning">
            <summary>
            <see cref="M:Fusion.IHostDiagnostics.Warning(System.String,System.Object[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostDiagnostics.Information">
            <summary>
            <see cref="M:Fusion.IHostDiagnostics.Information(System.String,System.Object[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostDiagnostics.MeasurePerformance">
            <summary>
            <see cref="M:Fusion.IHostDiagnostics.MeasurePerformance(System.String,System.Object[])"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostDiagnostics.Fusion#IHostDiagnostics#Error(System.String,System.Object[])">
            <summary>
            Writes an error message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.Testing.HostDiagnostics.Fusion#IHostDiagnostics#Warning(System.String,System.Object[])">
            <summary>
            Writes a warning message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.Testing.HostDiagnostics.Fusion#IHostDiagnostics#Information(System.String,System.Object[])">
            <summary>
            Writes an information message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.Testing.HostDiagnostics.Fusion#IHostDiagnostics#MeasurePerformance(System.String,System.Object[])">
            <summary>
            Measures the performance of an operation and writes the result to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
            <returns>The disposable token that ends the measurement.</returns>
        </member>
        <member name="T:Fusion.Testing.HostUI">
            <summary>
            <see cref="T:Fusion.IHostUI"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.GetResource">
            <summary>
            <see cref="M:Fusion.IHostUI.GetResource(System.Object)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.GetLocalizedText">
            <summary>
            <see cref="M:Fusion.IHostUI.GetLocalizedText(System.String)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.RegisterCommandObserver">
            <summary>
            <see cref="M:Fusion.IHostUI.RegisterCommandObserver(Fusion.ICommandObserver)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.RegisterKeyboardShortcut">
            <summary>
            <see cref="M:Fusion.IHostUI.RegisterKeyboardShortcut(System.String,System.Action)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowWindow">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowWindow(System.String,System.Object)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowDialog(System.String,System.Object)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowMessageDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowMessageDialog(System.String,System.String,System.String,System.String[],System.String,System.String)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowProgressDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowProgressDialog(System.Action{Fusion.Progress})"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowOpenFilePickerDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowOpenFilePickerDialog(System.String,System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowSaveFilePickerDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowSaveFilePickerDialog(System.String,System.String,System.String,System.String[],Fusion.FileType[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowFolderPickerDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowFolderPickerDialog(System.String,System.String)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowCredentialDialog">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowCredentialDialog(System.String,System.String)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUI.ShowDiagnosticWindow">
            <summary>
            <see cref="M:Fusion.IHostUI.ShowDiagnosticWindow"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUI.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.HostUI"/> class.
            </summary>
        </member>
        <member name="P:Fusion.Testing.HostUI.Help">
            <summary>
            Gets or sets the help provider.
            </summary>
            <value>The help provider.</value>
        </member>
        <member name="P:Fusion.Testing.HostUI.PublishedViews">
            <summary>
            Gets or sets the published views.
            </summary>
            <value>The published views.</value>
        </member>
        <member name="P:Fusion.Testing.HostUI.Resources">
            <summary>
            Gets the host UI resources.
            </summary>
            <value>The host UI resources.</value>
        </member>
        <member name="P:Fusion.Testing.HostUI.FullScreenMode">
            <summary>
            Gets or sets a value indicating whether the full screen mode is enabled.
            </summary>
            <value>True if the full screen mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.HostUI.TabletMode">
            <summary>
            Gets or sets a value indicating whether the tablet mode is enabled.
            </summary>
            <value>True if the tablet mode is enabled, otherwise false.</value>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#GetResource(System.Object)">
            <summary>
            Gets the resource.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The resource or null if the resource was not found.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#GetLocalizedText(System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The localized text or the default fall back value if the localized text was not found.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#RegisterCommandObserver(Fusion.ICommandObserver)">
            <summary>
            Registers a command observer.
            </summary>
            <param name="commandObserver">The command observer.</param>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#RegisterKeyboardShortcut(System.String,System.Action)">
            <summary>
            Registers a keyboard shortcut.
            </summary>
            <param name="gesture">The gesture. May include modifiers such as "Control+Shift+A".</param>
            <param name="action">The action to perform when the keyboard shortcut is pressed.</param>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowWindow(System.String,System.Object)">
            <summary>
            Shows a child window.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The window controller.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowDialog(System.String,System.Object)">
            <summary>
            Shows a modal dialog.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The dialog result or null if the dialog did not provide any result.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowMessageDialog(System.String,System.String,System.String,System.String[],System.String,System.String)">
            <summary>
            Shows a message dialog.
            </summary>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <param name="icon">The icon geometry resource key, or null for no icon.</param>
            <param name="buttons">The texts or resource keys for the buttons.</param>
            <param name="defaultButton">The text or resource key for the default button.</param>
            <param name="cancelButton">The text or resource key for the cancel button.</param>
            <returns>The selected button or null if the dialog was closed with other means.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowProgressDialog(System.Action{Fusion.Progress})">
            <summary>
            Shows a modal progress dialog.
            </summary>
            <param name="backgroundOperation">The action to invoke in a background thread.</param>
            <returns>True if the operation was completed successfully, false if the operation was canceled.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowOpenFilePickerDialog(System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowOpenFilePickerDialog(System.String,System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowSaveFilePickerDialog(System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowSaveFilePickerDialog(System.String,System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowFolderPickerDialog(System.String,System.String)">
            <summary>
            Shows a modal folder picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <returns>The selected folder path or null if no folder was selected.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowCredentialDialog(System.String,System.String)">
            <summary>
            Shows a modal credential dialog.
            </summary>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <returns>The session credential or null if the credential was not supplied.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUI.Fusion#IHostUI#ShowDiagnosticWindow">
            <summary>
            Shows the diagnostic window.
            </summary>
        </member>
        <member name="T:Fusion.Testing.HostUIHelpProvider">
            <summary>
            <see cref="T:Fusion.IHelpProvider"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUIHelpProvider.RequestHelp">
            <summary>
            <see cref="M:Fusion.IHelpProvider.RequestHelp(System.String)"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUIHelpProvider.Fusion#IHelpProvider#RequestHelp(System.String)">
            <summary>
            Requests help for the specified topic.
            </summary>
            <param name="topic">The help topic.</param>
        </member>
        <member name="T:Fusion.Testing.HostUser">
            <summary>
            <see cref="T:Fusion.IHostUser"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.HostUser"/> class.
            </summary>
        </member>
        <member name="P:Fusion.Testing.HostUser.Authentication">
            <summary>
            Gets or sets the user authentication provider.
            </summary>
            <value>The user authentication provider.</value>
        </member>
        <member name="P:Fusion.Testing.HostUser.Authorization">
            <summary>
            Gets or sets the user authorization provider.
            </summary>
            <value>The user authorization provider.</value>
        </member>
        <member name="P:Fusion.Testing.HostUser.Cookies">
            <summary>
            Gets or sets the session cookies.
            </summary>
            <value>The session cookies.</value>
        </member>
        <member name="P:Fusion.Testing.HostUser.Credentials">
            <summary>
            Gets or sets the user credential provider.
            </summary>
            <value>The user credential provider.</value>
        </member>
        <member name="P:Fusion.Testing.HostUser.Profile">
            <summary>
            Gets or sets the user profile provider.
            </summary>
            <value>The user profile provider.</value>
        </member>
        <member name="T:Fusion.Testing.HostUserAuthentication">
            <summary>
            <see cref="T:Fusion.IUserAuthentication"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthentication.RequestToken">
            <summary>
            <see cref="M:Fusion.IUserAuthentication.RequestToken(System.Net.ICredentials)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthentication.RequestRenew">
            <summary>
            <see cref="M:Fusion.IUserAuthentication.RequestRenew(Fusion.AuthenticationToken,System.Net.ICredentials)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthentication.GetRedirectLink">
            <summary>
            <see cref="M:Fusion.IUserAuthentication.GetRedirectLink(Fusion.AuthenticationToken,System.String)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthentication.currentToken">
            <summary>
            The current authentication token.
            </summary>
        </member>
        <member name="E:Fusion.Testing.HostUserAuthentication.TokenChanged">
            <summary>
            Occurs when the authentication token is changed.
            </summary>
        </member>
        <member name="P:Fusion.Testing.HostUserAuthentication.Token">
            <summary>
            Gets or sets the authentication token for the current user.
            </summary>
            <value>The authentication token or null if the current user is not authenticated.</value>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthentication.Fusion#IUserAuthentication#RequestToken(System.Net.ICredentials)">
            <summary>
            Requests a new authentication token.
            </summary>
            <param name="credentials">The user credentials, if available.</param>
            <returns>The authentication response with the new token.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthentication.Fusion#IUserAuthentication#RequestRenew(Fusion.AuthenticationToken,System.Net.ICredentials)">
            <summary>
            Requests a renew for the specified authentication token.
            </summary>
            <param name="authenticationToken">The authentication token to renew.</param>
            <param name="credentials">The user credentials, if available.</param>
            <returns>The authentication response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthentication.Fusion#IUserAuthentication#GetRedirectLink(Fusion.AuthenticationToken,System.String)">
            <summary>
            Gets a pre-authenticated redirect link to the target URL.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="targetUrl">The target URL.</param>
            <returns>The pre-authenticated redirect link.</returns>
        </member>
        <member name="T:Fusion.Testing.HostUserAuthenticationToken">
            <summary>
            <see cref="T:Fusion.AuthenticationToken"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthenticationToken.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.HostUserAuthenticationToken" /> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
            <param name="expires">The expiry timestamp in UTC or null if the token does not expire.</param>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthenticationToken.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Testing.HostUserAuthorization">
            <summary>
            <see cref="T:Fusion.IUserAuthorization"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthorization.RequestToken">
            <summary>
            <see cref="M:Fusion.IUserAuthorization.RequestToken(Fusion.AuthenticationToken,System.TimeSpan,System.String)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthorization.RequestTokens">
            <summary>
            <see cref="M:Fusion.IUserAuthorization.RequestTokens(Fusion.AuthenticationToken,System.TimeSpan,System.String[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthorization.RequestRenew">
            <summary>
            <see cref="M:Fusion.IUserAuthorization.RequestRenew(Fusion.AuthorizationToken,System.TimeSpan,Fusion.AuthenticationToken)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthorization.RequestRenewTokens">
            <summary>
            <see cref="M:Fusion.IUserAuthorization.RequestRenewTokens(System.Collections.Generic.IReadOnlyList{Fusion.AuthorizationToken},System.TimeSpan,Fusion.AuthenticationToken)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserAuthorization.IsAuthorizationAvailable">
            <summary>
            <see cref="M:Fusion.IUserAuthorization.IsAuthorizationAvailable(Fusion.AuthenticationToken,System.String[])"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorization.Fusion#IUserAuthorization#RequestToken(Fusion.AuthenticationToken,System.TimeSpan,System.String)">
            <summary>
            Requests a new authorization token.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="duration">The requested token duration.</param>
            <param name="action">The action to authorize.</param>
            <returns>The authorization response with the new token.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorization.Fusion#IUserAuthorization#RequestTokens(Fusion.AuthenticationToken,System.TimeSpan,System.String[])">
            <summary>
            Requests a new authorization tokens.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="duration">The requested token duration.</param>
            <param name="actions">The actions to authorize.</param>
            <returns>The authorization response with the new token.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorization.Fusion#IUserAuthorization#RequestRenew(Fusion.AuthorizationToken,System.TimeSpan,Fusion.AuthenticationToken)">
            <summary>
            Requests a renew for the specified authorization token.
            </summary>
            <param name="authorizationToken">The authorization token to renew.</param>
            <param name="duration">The requested token duration.</param>
            <param name="authenticationToken">The authentication token.</param>
            <returns>The authorization response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorization.Fusion#IUserAuthorization#RequestRenewTokens(System.Collections.Generic.IReadOnlyList{Fusion.AuthorizationToken},System.TimeSpan,Fusion.AuthenticationToken)">
            <summary>
            Requests a renew for the specified authorization tokens.
            </summary>
            <param name="authorizationTokens">The authorization tokens to renew.</param>
            <param name="duration">The requested token duration.</param>
            <param name="authenticationToken">The authentication token.</param>
            <returns>The authorization response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorization.Fusion#IUserAuthorization#IsAuthorizationAvailable(Fusion.AuthenticationToken,System.String[])">
            <summary>
            Determines whether it's possible to request authorization for the actions.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="actions">The actions to authorize.</param>
            <returns>The collection of the actions and whether it's possible to request authorization for them.</returns>
        </member>
        <member name="T:Fusion.Testing.HostUserAuthorizationToken">
            <summary>
            <see cref="T:Fusion.AuthorizationToken"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorizationToken.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.HostUserAuthorizationToken" /> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
            <param name="expires">The expiry timestamp in UTC or null if the token does not expire.</param>
            <param name="renewableUntil">The last allowed token renewal timestamp or null if the token can be renewed forever.</param>
            <param name="action">The authorized action.</param>
        </member>
        <member name="M:Fusion.Testing.HostUserAuthorizationToken.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Testing.HostUserCredentials">
            <summary>
            <see cref="T:System.Net.ICredentials"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserCredentials.GetCredential">
            <summary>
            <see cref="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUserCredentials.System#Net#ICredentials#GetCredential(System.Uri,System.String)">
            <summary>
            Returns a <see cref="T:System.Net.NetworkCredential" /> object that is associated with the specified URI, and authentication type.
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> that the client is providing authentication for.</param>
            <param name="authType">The type of authentication, as defined in the <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> property.</param>
            <returns>The <see cref="T:System.Net.NetworkCredential" /> that is associated with the specified URI and authentication type, or, if no credentials are available, null.</returns>
        </member>
        <member name="T:Fusion.Testing.HostUserProfile">
            <summary>
            <see cref="T:Fusion.IUserProfile"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserProfile.GetProfile">
            <summary>
            <see cref="M:Fusion.IUserProfile.GetProfile(Fusion.AuthenticationToken,System.String,System.String[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserProfile.GetProfiles">
            <summary>
            <see cref="M:Fusion.IUserProfile.GetProfiles(Fusion.AuthenticationToken,System.String[])"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.HostUserProfile.GetProfileLink">
            <summary>
            <see cref="M:Fusion.IUserProfile.GetProfileLink(Fusion.AuthenticationToken,System.String)"/> implementation.
            </summary>
        </member>
        <member name="M:Fusion.Testing.HostUserProfile.Fusion#IUserProfile#GetProfile(Fusion.AuthenticationToken,System.String,System.String[])">
            <summary>
            Gets the profile for the specified principal.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
            <param name="properties">The list of properties to retrieve. If empty, retrieves all properties.</param>
            <returns>The dictionary of profile property names and values.</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserProfile.Fusion#IUserProfile#GetProfiles(Fusion.AuthenticationToken,System.String[])">
            <summary>
            Gets the profiles of all available principals.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="properties">The list of properties to retrieve. If empty, retrieves all properties.</param>
            <returns>The dictionary of principal identifiers and profiles (as a dictionary of profile property names and values).</returns>
        </member>
        <member name="M:Fusion.Testing.HostUserProfile.Fusion#IUserProfile#GetProfileLink(Fusion.AuthenticationToken,System.String)">
            <summary>
            Gets the link to the profile for the specified principal.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
            <returns>The link to the profile.</returns>
        </member>
        <member name="T:Fusion.Testing.Session">
            <summary>
            <see cref="T:Fusion.ISession"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Session.session">
            <summary>
            The settings.
            </summary>
        </member>
        <member name="P:Fusion.Testing.Session.Count">
            <summary>
            Gets the number of entries in the store.
            </summary>
            <value>The number of entries in the store.</value>
        </member>
        <member name="P:Fusion.Testing.Session.Keys">
            <summary>
            Gets the keys in the store.
            </summary>
            <value>The keys in the store.</value>
        </member>
        <member name="P:Fusion.Testing.Session.Item(System.String)">
            <summary>
            Gets or sets the stored value for the specified key. Setting the value to null removes the entry.
            </summary>
            <param name="key">The key.</param>
            <returns>The stored value or null if the value is not available.</returns>
        </member>
        <member name="T:Fusion.Testing.Recovery">
            <summary>
            <see cref="T:Fusion.IRecovery"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Recovery.recovery">
            <summary>
            The settings.
            </summary>
        </member>
        <member name="P:Fusion.Testing.Recovery.Recover">
            <summary>
            Gets or sets a value indicating whether the application should attempt to recover from a restart.
            </summary>
            <value>True if the application should attempt to recover from a restart, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.Recovery.Count">
            <summary>
            Gets the number of entries in the store.
            </summary>
            <value>The number of entries in the store.</value>
        </member>
        <member name="P:Fusion.Testing.Recovery.Keys">
            <summary>
            Gets the keys in the store.
            </summary>
            <value>The keys in the store.</value>
        </member>
        <member name="P:Fusion.Testing.Recovery.Item(System.String)">
            <summary>
            Gets or sets the stored value for the specified key. Setting the value to null removes the entry.
            </summary>
            <param name="key">The key.</param>
            <returns>The stored value or null if the value is not available.</returns>
        </member>
        <member name="T:Fusion.Testing.Settings">
            <summary>
            <see cref="T:Fusion.ISettings"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.Settings.settings">
            <summary>
            The settings.
            </summary>
        </member>
        <member name="P:Fusion.Testing.Settings.Culture">
            <summary>
            Gets or sets the application culture. The default value is "en-US".
            </summary>
            <value>The application culture.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.EnableExceptionHandling">
            <summary>
            Gets or sets a value indicating whether the application level exception handling is enabled. The default value is False.
            </summary>
            <value>True if the application level exception handling is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.EnableMessageLogging">
            <summary>
            Gets or sets a value indicating whether the message logging is enabled. The default value is True.
            </summary>
            <value>True if the message logging is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.EnableRecoveryAndRestart">
            <summary>
            Gets or sets a value indicating whether the application recovery and restart is enabled. The default value is True.
            </summary>
            <value>True if the application recovery and restart is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.EnableSingleInstanceMode">
            <summary>
            Gets or sets a value indicating whether the single instance mode is enabled. The default value is False.
            </summary>
            <value>True if the single instance mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.EnableWindowGhosting">
            <summary>
            Gets or sets a value indicating whether the window ghosting is enabled. The default value is True.
            </summary>
            <value>True if the window ghosting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.FeatureFolder">
            <summary>
            Gets or sets the application feature folder. Multiple folders can be specified, separated with a semicolon (;) character. The default value is "Features".
            </summary>
            <value>The application feature folder.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.LocalizationMode">
            <summary>
            Gets or sets the application localization mode. The default value is <see cref="F:Fusion.LocalizationMode.Normal"/>.
            </summary>
            <value>The application localization mode.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.Theme">
            <summary>
            Gets or sets the application theme. The default value is "Generic".
            </summary>
            <value>The application theme.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.Count">
            <summary>
            Gets the number of entries in the store.
            </summary>
            <value>The number of entries in the store.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.Keys">
            <summary>
            Gets the keys in the store.
            </summary>
            <value>The keys in the store.</value>
        </member>
        <member name="P:Fusion.Testing.Settings.Item(System.String)">
            <summary>
            Gets or sets the stored value for the specified key. Setting the value to null removes the entry.
            </summary>
            <param name="key">The key.</param>
            <returns>The stored value or null if the value is not available.</returns>
        </member>
        <member name="T:Fusion.Testing.TestCase">
            <summary>
            UI test case helper.
            </summary>
        </member>
        <member name="M:Fusion.Testing.TestCase.Begin``1(System.String,System.Object)">
            <summary>
            Begins a new test case.
            </summary>
            <typeparam name="TViewModel">The view model type.</typeparam>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Fusion.Testing.TestCase`1">
            <summary>
            UI test case helper.
            </summary>
            <typeparam name="TViewModel">The view model type.</typeparam>
        </member>
        <member name="F:Fusion.Testing.TestCase`1.window">
            <summary>
            The test case window.
            </summary>
        </member>
        <member name="M:Fusion.Testing.TestCase`1.#ctor(System.Windows.FrameworkElement,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.TestCase`1" /> class.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="P:Fusion.Testing.TestCase`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Fusion.Testing.TestCase`1.ViewModel">
            <summary>
            Gets the view model.
            </summary>
            <value>The view model.</value>
        </member>
        <member name="M:Fusion.Testing.TestCase`1.Dispose">
            <summary>
            Ends the test case.
            </summary>
        </member>
        <member name="T:Fusion.Testing.TestRunner">
            <summary>
            Test runner.
            </summary>
        </member>
        <member name="F:Fusion.Testing.TestRunner.DoNotRun">
            <summary>
            The do-not-run list.
            </summary>
        </member>
        <member name="F:Fusion.Testing.TestRunner.tests">
            <summary>
            The test methods.
            </summary>
        </member>
        <member name="M:Fusion.Testing.TestRunner.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.TestRunner" /> class.
            </summary>
            <param name="paths">The test assembly paths.</param>
        </member>
        <member name="M:Fusion.Testing.TestRunner.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.TestRunner" /> class.
            </summary>
            <param name="prefix">The command line argument prefix.</param>
            <param name="arguments">The command line arguments.</param>
        </member>
        <member name="T:Fusion.Testing.TestRunner.StartEventHandler">
            <summary>
            Start event handler.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
        </member>
        <member name="T:Fusion.Testing.TestRunner.SuccessEventHandler">
            <summary>
            Success event handler.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
            <param name="duration">The test duration.</param>
        </member>
        <member name="T:Fusion.Testing.TestRunner.FailureEventHandler">
            <summary>
            Failure event handler.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="methodName">The method name.</param>
            <param name="duration">The test duration.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="E:Fusion.Testing.TestRunner.Start">
            <summary>
            Occurs when a test run starts.
            </summary>
        </member>
        <member name="E:Fusion.Testing.TestRunner.Success">
            <summary>
            Occurs when a test run completes with success.
            </summary>
        </member>
        <member name="E:Fusion.Testing.TestRunner.Failure">
            <summary>
            Occurs when a test run completes with failure.
            </summary>
        </member>
        <member name="P:Fusion.Testing.TestRunner.Tests">
            <summary>
            Gets the tests to support UI for showing the list of test cases.
            </summary>
        </member>
        <member name="M:Fusion.Testing.TestRunner.HasTests(System.Func{System.Reflection.MethodInfo,System.Boolean})">
            <summary>
            Determines whether the test runner has any tests.
            </summary>
            <param name="filter">The test method filter.</param>
            <returns>True if the test runner has any tests, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.HasTests``1(System.Func{System.Reflection.MethodInfo,System.Boolean})">
            <summary>
            Determines whether the test runner has any tests that are annotated with the specified attribute.
            </summary>
            <typeparam name="TAttribute">The attribute type.</typeparam>
            <param name="filter">The test method filter.</param>
            <returns>True if the test runner has any tests that are annotated with the specified attribute, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.RunTests(System.Func{System.Reflection.MethodInfo,System.Boolean})">
            <summary>
            Runs the tests. The test methods must be public.
            </summary>
            <param name="filter">The test method filter.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.RunTests(System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo})">
            <summary>
            Runs the tests selected in the test runner window. 
            </summary>
            <param name="selectedTests">The selected tests.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.RunTests``1(System.Func{System.Reflection.MethodInfo,System.Boolean})">
            <summary>
            Runs the tests. The test methods must be public and annotated with the specified attribute.
            </summary>
            <typeparam name="TAttribute">The attribute type.</typeparam>
            <param name="filter">The test method filter.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.HasPrefix(System.String,System.String)">
            <summary>
            Determines whether the specified command line argument has the specified prefix.
            </summary>
            <param name="argument">The command line argument.</param>
            <param name="prefix">The prefix.</param>
            <returns>True if the command line argument has the specified prefix, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.GetPath(System.String,System.String)">
            <summary>
            Gets the file path from the command line argument.
            </summary>
            <param name="argument">The command line argument.</param>
            <param name="prefix">The prefix.</param>
            <returns>The file path.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.GetTests(System.String)">
            <summary>
            Gets the test methods from an assembly.
            </summary>
            <param name="path">The assembly file path.</param>
            <returns>The test methods.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.GetAssembly(System.String)">
            <summary>
            Gets the assembly.
            </summary>
            <param name="path">The file path.</param>
            <returns>The loaded assembly or null if the assembly could not be loaded.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.GetExportedTypes(System.Reflection.Assembly)">
            <summary>
            Gets the exported types.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns>The exported types.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.GetMethods(System.Type)">
            <summary>
            Gets the test methods in the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The test methods.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.IsTest(System.Reflection.MethodInfo)">
            <summary>
            Determines whether a method is a test method.
            </summary>
            <param name="method">The method.</param>
            <returns>True if the method is a test method, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.GetInstance(System.Type)">
            <summary>
            Gets an instance of the specified type.
            </summary>
            <param name="type">The object type.</param>
            <returns>The object instance or null if the instance could not be created.</returns>
        </member>
        <member name="M:Fusion.Testing.TestRunner.RunTest(System.Reflection.MethodInfo)">
            <summary>
            Runs the test method.
            </summary>
            <param name="method">The test method.</param>
            <returns>Task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Fusion.Testing.Verify">
            <summary>
            Provides methods for verifying conditions.
            </summary>
        </member>
        <member name="M:Fusion.Testing.Verify.Equals(System.Object,System.Object)">
            <summary>
            Verifies that the specified object instances are considered equal.
            </summary>
            <param name="objA">The first object to compare.</param>
            <param name="objB">The second object to compare.</param>
        </member>
        <member name="M:Fusion.Testing.Verify.ReferenceEquals(System.Object,System.Object)">
            <summary>
            Verifies that the specified object instances are the same instance.
            </summary>
            <param name="objA">The first object to compare.</param>
            <param name="objB">The second object to compare.</param>
        </member>
        <member name="M:Fusion.Testing.Verify.That(System.Boolean,System.String)">
            <summary>
            Verifies that a condition is true.
            </summary>
            <param name="condition">The condition to verify.</param>
            <param name="message">The message in case the verification fails.</param>
        </member>
        <member name="T:Fusion.Testing.VerifyFailedException">
            <summary>
            Verify failed exception.
            </summary>
        </member>
        <member name="M:Fusion.Testing.VerifyFailedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.VerifyFailedException"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Testing.VerifyFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.VerifyFailedException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Fusion.Testing.VerifyFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.VerifyFailedException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Fusion.Testing.VerifyFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Testing.VerifyFailedException" /> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Fusion.Testing.WindowController">
            <summary>
            <see cref="T:Fusion.IWindowController"/> implementation for testing purposes.
            </summary>
        </member>
        <member name="F:Fusion.Testing.WindowController.Activate">
            <summary>
            <see cref="M:Fusion.IWindowController.Activate"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.WindowController.BringToTop">
            <summary>
            <see cref="M:Fusion.IWindowController.BringToTop"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.WindowController.Close">
            <summary>
            <see cref="M:Fusion.IWindowController.Close"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.WindowController.CloseWithResult">
            <summary>
            <see cref="M:Fusion.IWindowController.Close(System.Object)"/> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Testing.WindowController.UpdateLayout">
            <summary>
            <see cref="M:Fusion.IWindowController.UpdateLayout"/> implementation.
            </summary>
        </member>
        <member name="P:Fusion.Testing.WindowController.IsOpen">
            <summary>
            Gets or sets a value indicating whether the window is open.
            </summary>
            <value>True if the window is open, otherwise false.</value>
        </member>
        <member name="P:Fusion.Testing.WindowController.Left">
            <summary>
            Gets or sets the window left edge coordinate.
            </summary>
            <value>The window left edge coordinate.</value>
        </member>
        <member name="P:Fusion.Testing.WindowController.Top">
            <summary>
            Gets or sets the window top edge coordinate.
            </summary>
            <value>The window top edge coordinate.</value>
        </member>
        <member name="P:Fusion.Testing.WindowController.Width">
            <summary>
            Gets or sets the window width.
            </summary>
            <value>The window width.</value>
        </member>
        <member name="P:Fusion.Testing.WindowController.Height">
            <summary>
            Gets or sets the window height.
            </summary>
            <value>The window height.</value>
        </member>
        <member name="M:Fusion.Testing.WindowController.Fusion#IWindowController#Activate">
            <summary>
            Activates the window.
            </summary>
        </member>
        <member name="M:Fusion.Testing.WindowController.Fusion#IWindowController#BringToTop">
            <summary>
            Brings the window to top.
            </summary>
        </member>
        <member name="M:Fusion.Testing.WindowController.Fusion#IWindowController#Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:Fusion.Testing.WindowController.Fusion#IWindowController#Close(System.Object)">
            <summary>
            Closes the window.
            </summary>
            <param name="dialogResult">The dialog result.</param>
        </member>
        <member name="M:Fusion.Testing.WindowController.Fusion#IWindowController#UpdateLayout">
            <summary>
            Updates the layout.
            </summary>
        </member>
        <member name="T:Fusion.Testing.SqliteTestBase">
            <summary>
            Base class for unit test fixtures that use Sqlite databases.
            </summary>
            <remarks>
            This class loads the appropriate version of sqlite3 in memory during the static initialization. Use the InMemoryDatabase as the database path to perform all tests in memory.
            </remarks>
        </member>
        <member name="F:Fusion.Testing.SqliteTestBase.InMemoryDatabase">
            <summary>
            The path for in-memory database.
            </summary>
        </member>
        <member name="M:Fusion.Testing.SqliteTestBase.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.Testing.SqliteTestBase"/> class.
            </summary>
        </member>
        <member name="T:Fusion.Testing.SqliteTestBase.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.UI.ConvertColorToRGBString">
            <summary>
            Converts a string to Color or Color resource using the string as color name or the resource key.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertColorToRGBString.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertBitmapToBitmapSource">
            <summary>
            Converts a bitmap into a bitmap source.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertBitmapToBitmapSource.Convert(System.Drawing.Bitmap,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="parameter">Binding parameter.</param>
            <param name="culture">Culture to use in conversion.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertBitmapToBitmapSource.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.UI.ConvertStringToColor">
            <summary>
            Converts a string to Color or Color resource using the string as color name or the resource key.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringToColor.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin">
            <summary>
            Converts a <see cref="T:System.Windows.Controls.TreeViewItem"/> depth to left margin.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin"/> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin"/> class.
            </summary>
            <param name="indent">The indent length.</param>
        </member>
        <member name="P:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin.Indent">
            <summary>
            Gets or sets the indent length.
            </summary>
            <value>The indent length.</value>
        </member>
        <member name="M:Fusion.UI.ConvertTreeViewItemDepthToLeftMargin.Convert(System.Windows.Controls.TreeViewItem,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectNotEqualsToVisibility">
            <summary>
            Converts an object to visibility indicating whether the object does not equal to the parameter value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectNotEqualsToVisibility.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectNotEqualsToBoolean">
            <summary>
            Converts an object to boolean indicating whether the object does not equal to the parameter value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectNotEqualsToBoolean.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectEqualsToVisibility">
            <summary>
            Converts an object to visibility indicating whether the object equals the parameter value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectEqualsToVisibility.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectEqualsToBoolean">
            <summary>
            Converts an object to boolean indicating whether the object equals the parameter value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectEqualsToBoolean.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringToLower">
            <summary>
            Converts a string to lowercase.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringToLower.Convert(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringToUpper">
            <summary>
            Converts a string to uppercase.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringToUpper.Convert(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringIsNotNullOrEmptyToBoolean">
            <summary>
            Converts a string to boolean indicating whether the string is not null or empty.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringIsNotNullOrEmptyToBoolean.Convert(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringIsNullOrEmptyToBoolean">
            <summary>
            Converts a string to boolean indicating whether the string is null or empty.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringIsNullOrEmptyToBoolean.Convert(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringsNotEqualToBoolean">
            <summary>
            Converts strings to a boolean indicating whether the strings are not equal.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringsNotEqualToBoolean.Convert(System.String[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">Values to convert.</param>
            <param name="parameter">Binding parameter.</param>
            <param name="culture">Culture to use in conversion.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringsEqualToBoolean">
            <summary>
            Converts strings to a boolean indicating whether the strings are equal.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringsEqualToBoolean.Convert(System.String[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ExtendedGrid">
            <summary>
            Extended <see cref="T:System.Windows.Controls.Grid"/>. Does not clip child elements by default.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedGrid.GetLayoutClip(System.Windows.Size)">
            <summary>
            Returns a geometry for a clipping mask. The mask applies if the layout system attempts to arrange an element that is larger than the available display space.
            </summary>
            <param name="layoutSlotSize">The size of the part of the element that does visual presentation.</param>
            <returns>The clipping geometry.</returns>
        </member>
        <member name="T:Fusion.UI.ExtendedSearchBox">
            <summary>
            Extended search box (originally created to support TagsView control in TCD).
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.CommandProperty">
            <summary>
            The Command property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.CommandParameterProperty">
            <summary>
            The CommandParameter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.DelayProperty">
            <summary>
            The Delay property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.IsDropDownOpenProperty">
            <summary>
            The IsDropDownOpen property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.ItemsSourceProperty">
            <summary>
            The ItemsSource property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.DropDownListBox">
            <summary>
            Drop down items name.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.delayTimer">
            <summary>
            The delay timer.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedSearchBox.dropDownListBox">
            <summary>
            The drop down items.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.ExtendedSearchBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ExtendedSearchBox" /> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.Command">
            <summary>
            Gets or sets the search command value.
            </summary>
            <value>The search command value.</value>
            <remarks>
            When user press Enter key in search box or selects item from drop down, the search is executed.
            The command parameter contains unique search result, or null if result set doesn not contain exactly one item.
            </remarks>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.CommandParameter">
            <summary>
            Gets or sets the parameter for search command. The parameter contains unique search result,
            or null if result set contains two or more items.
            </summary>
            <value>The search command parameter value.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.Delay">
            <summary>
            Gets or sets the Delay value.
            </summary>
            <value>The Delay value.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the suggestion drop down is open.
            </summary>
            <value>True if the suggestion drop down is open, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.ItemsSource">
            <summary>
            Gets or sets the ItemsSource value.
            </summary>
            <value>The ItemsSource value.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.SelectedIndex">
            <summary>
            Gets or sets the index of the selected drop down item.
            </summary>
            <value>The index of the selected drop down item.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.SelectedItem">
            <summary>
            Gets the selected item.
            </summary>
        </member>
        <member name="P:Fusion.UI.ExtendedSearchBox.HasItems">
            <summary>
            Gets a value indicating whether the drop down has any items.
            </summary>
            <value>True if the drop down has any items, otherwise false.</value>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OnApplyTemplate">
            <summary>
            Is called when a control template is applied.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Is called when content in this editing control changes.
            </summary>
            <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OnPick(System.Object)">
            <summary>
            Called when a value has been picked from the drop down list.
            </summary>
            <param name="value">The picked value.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.ReportSearchResults">
            <summary>
            Reports the search result.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.OpenDropDown">
            <summary>
            Opens the drop down.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.CloseDropDown">
            <summary>
            Closes the drop down.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.FocusDropDown">
            <summary>
            Focuses the drop down.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedSearchBox.ScrollSelectedItemIntoView">
            <summary>
            Scrolls the selected item into view.
            </summary>
        </member>
        <member name="T:Fusion.UI.Extensions">
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
            <summary>
            Provides the attached properties, behaviors and extensions.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.CharacterCasingProperty">
            <summary>
            The CharacterCasing property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.SetCharacterCasing(System.Windows.DependencyObject,System.Windows.Controls.CharacterCasing)">
            <summary>
            Sets the CharacterCasing value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetCharacterCasing(System.Windows.DependencyObject)">
            <summary>
            Gets the CharacterCasing value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="F:Fusion.UI.Extensions.EnableDropDownDirectionStylingProperty">
            <summary>
            The EnableDropDownDirectionStyling property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetEnableDropDownDirectionStyling(System.Windows.DependencyObject)">
            <summary>
            Gets whether the drop down direction styling is enabled.
            </summary>
            <param name="depObj">The UI element.</param>
            <returns>True if the drop down styling is enabled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetEnableDropDownDirectionStyling(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets whether the drop down direction styling is enabled.
            </summary>
            <param name="depObj">The UI element.</param>
            <param name="value">True if the drop down styling is enabled, otherwise false.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.ShowWindowSizeButtonsProperty">
            <summary>
            The ShowWindowSizeButtons property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.ShowWindowCloseButtonProperty">
            <summary>
            The ShowWindowCloseButton property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetShowWindowSizeButtons(System.Windows.Window)">
            <summary>
            Gets the ShowWindowSizeButtons value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetShowWindowSizeButtons(System.Windows.Window,System.Boolean)">
            <summary>
            Sets the ShowWindowSizeButtons value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetShowWindowCloseButton(System.Windows.Window)">
            <summary>
            Gets the ShowWindowCloseButton value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetShowWindowCloseButton(System.Windows.Window,System.Boolean)">
            <summary>
            Sets the ShowWindowCloseButton value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BadgeContentProperty">
            <summary>
            The BadgeContent property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBadgeContent(System.Windows.DependencyObject)">
            <summary>
            Gets the BadgeContent value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBadgeContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the BadgeContent value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="T:Fusion.UI.Extensions.SizeMode">
            <summary>
            Describes the size modes.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.SizeMode.Small">
            <summary>
            Indicates the small size.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.SizeMode.Medium">
            <summary>
            Indicates the medium size.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.SizeMode.Large">
            <summary>
            Indicates the large size.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.SizeModeProperty">
            <summary>
            The SizeMode property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetSizeMode(System.Windows.DependencyObject)">
            <summary>
            Gets the SizeMode value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetSizeMode(System.Windows.DependencyObject,System.Nullable{Fusion.UI.Extensions.SizeMode})">
            <summary>
            Sets the SizeMode value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.TitleGlyphProperty">
            <summary>
            The Glyph property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetTitleGlyph(System.Windows.Controls.Control)">
            <summary>
            Gets the control Glyph.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetTitleGlyph(System.Windows.Controls.Control,System.Windows.Media.Geometry)">
            <summary>
            Sets the control Glyph.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="T:Fusion.UI.Extensions.VisualModes">
            <summary>
            Describes the size modes.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.VisualModes.Default">
            <summary>
            Indicates the default visual mode.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.VisualModes.Accent">
            <summary>
            Indicates the accent visual mode.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.VisualModeProperty">
            <summary>
            The VisualMode property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.SetVisualMode(System.Windows.DependencyObject,System.Nullable{Fusion.UI.Extensions.VisualModes})">
            <summary>
            Sets the VisualMode value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetVisualMode(System.Windows.DependencyObject)">
            <summary>
            Gets the VisualMode value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="F:Fusion.UI.Extensions.FitDropDownToItemsProperty">
            <summary>
            The FitDropDownToItems property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetFitDropDownToItems(System.Windows.Controls.ComboBox)">
            <summary>
            Gets whether the combo box drop down is fitted to the items.
            </summary>
            <param name="comboBox">The combo box.</param>
            <returns>True if the combo box drop down is fitted to the items, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetFitDropDownToItems(System.Windows.Controls.ComboBox,System.Boolean)">
            <summary>
            Sets whether the combo box drop down is fitted to the items.
            </summary>
            <param name="comboBox">The combo box.</param>
            <param name="fitDropDownToItems">Indicates whether the combo box drop down is fitted to the items.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.TitleContentProperty">
            <summary>
            The TitleContent property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetTitleContent(System.Windows.DependencyObject)">
            <summary>
            Gets the TitleContent value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetTitleContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the TitleContent value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.TopmostPinVisibilityProperty">
            <summary>
            The TopmostPinVisibility property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetTopmostPinVisibility(System.Windows.Window)">
            <summary>
            Gets the window topmost pin visibility.
            </summary>
            <param name="window">The window.</param>
            <returns>The visibility.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetTopmostPinVisibility(System.Windows.Window,System.Windows.Visibility)">
            <summary>
            Sets the window topmost pin visibility.
            </summary>
            <param name="window">The window.</param>
            <param name="visibility">The visibility.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.WatermarkProperty">
            <summary>
            The Watermark property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.KeepWatermarkOnFocusProperty">
            <summary>
            The KeepWatermarkOnFocus property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetWatermark(System.Windows.Controls.Control)">
            <summary>
            Gets the control watermark.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetWatermark(System.Windows.Controls.Control,System.String)">
            <summary>
            Sets the control watermark.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetKeepWatermarkOnFocus(System.Windows.Controls.Control)">
            <summary>
            Gets whether the watermark is kept on focus.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetKeepWatermarkOnFocus(System.Windows.Controls.Control,System.Boolean)">
            <summary>
            Sets whether the watermark is kept on focus.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.TitleTextProperty">
            <summary>
            The TitleText property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetTitleText(System.Windows.Controls.Control)">
            <summary>
            Gets the control TitleText.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetTitleText(System.Windows.Controls.Control,System.String)">
            <summary>
            Sets the control TitleText.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.DropDownPlacementTargetProperty">
            <summary>
            The DropDownPlacementTarget property than can be used to override placement target, e.g. in SplitButton.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDropDownPlacementTarget(System.Windows.UIElement)">
            <summary>
            Gets the DropDownPlacementTarget value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDropDownPlacementTarget(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Sets the DropDownPlacementTarget value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.SuppressErrorsProperty">
            <summary>
            The SuppressErrors property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetSuppressErrors(System.Windows.Controls.WebBrowser)">
            <summary>
            Gets the SuppressErrors value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetSuppressErrors(System.Windows.Controls.WebBrowser,System.Boolean)">
            <summary>
            Sets the SuppressErrors value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.AutoScrollingProperty">
            <summary>
            AutoScrolling dependency property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.AutoScrollingHandlerProperty">
            <summary>
            AutoScrollingHandler dependency property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetAutoScrolling(System.Windows.DependencyObject)">
            <summary>
            Gets the AutoScrolling value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetAutoScrolling(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the AutoScrolling value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetAutoScrollingHandler(System.Windows.DependencyObject)">
            <summary>
            Gets the AutoScrollingHandler value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetAutoScrollingHandler(System.Windows.DependencyObject,Fusion.UI.Extensions.AutoScrollingHandler)">
            <summary>
            Sets the AutoScrollingHandler value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="T:Fusion.UI.Extensions.AutoScrollingHandler">
            <summary>
            The AutoScrollingHandler class is responsible for handling the auto scrolling behavior.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.AutoScrollingHandler.listView">
            <summary>
            The list view.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.AutoScrollingHandler.scrollViewer">
            <summary>
            The scroll viewer.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.AutoScrollingHandler.#ctor(System.Windows.Controls.ListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.Extensions.AutoScrollingHandler"/> class.
            </summary>
            <param name="listView">The list view.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.AutoScrollingHandler.Enable">
            <summary>
            Enables the automatic scrolling behavior.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.AutoScrollingHandler.Disable">
            <summary>
            Disables automatic scrolling behavior.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.AutoScrollingHandler.AutoScrollerCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event to perform the automatic scroll.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsActiveProperty">
            <summary>
            The BindableIsActive property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsActiveEnabledProperty">
            <summary>
            The BindableIsActiveEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsActive(System.Windows.Window)">
            <summary>
            Gets the BindableIsActive value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsActive(System.Windows.Window,System.Boolean)">
            <summary>
            Sets the BindableIsActive value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsActiveEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets the BindableIsActiveEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsActiveEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the BindableIsActiveEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnSourceInitialized(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Window.SourceInitialized" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsCapsLockToggledProperty">
            <summary>
            The BindableIsCapsLockToggled property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsCapsLockToggledEnabledProperty">
            <summary>
            The BindableIsCapsLockToggledEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsCapsLockToggled(System.Windows.UIElement)">
            <summary>
            Gets the BindableIsCapsLockToggled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsCapsLockToggled(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the BindableIsCapsLockToggled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsCapsLockToggledEnabled(System.Windows.UIElement)">
            <summary>
            Gets the BindableIsCapsLockToggledEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsCapsLockToggledEnabled(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the BindableIsCapsLockToggledEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnIsKeyboardFocusWithinChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnPreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when the a key is pressed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsFocusedProperty">
            <summary>
            The BindableIsFocused property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsFocusedEnabledProperty">
            <summary>
            The BindableIsFocusedEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsFocused(System.Windows.UIElement)">
            <summary>
            Gets the BindableIsFocused value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsFocused(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the BindableIsFocused value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsFocusedEnabled(System.Windows.UIElement)">
            <summary>
            Gets the BindableIsFocusedEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsFocusedEnabled(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the BindableIsFocusedEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnIsFocusedChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the <see cref="P:System.Windows.UIElement.IsFocused" /> property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsMouseOverProperty">
            <summary>
            The BindableIsMouseOver property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableIsMouseOverEnabledProperty">
            <summary>
            The BindableIsMouseOverEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsMouseOver(System.Windows.UIElement)">
            <summary>
            Gets the BindableIsMouseOver value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsMouseOver(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the BindableIsMouseOver value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableIsMouseOverEnabled(System.Windows.UIElement)">
            <summary>
            Gets the BindableIsMouseOverEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableIsMouseOverEnabled(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the BindableIsMouseOverEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnIsMouseOverChanged(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the <see cref="P:System.Windows.UIElement.IsMouseOver" /> property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BindablePasswordProperty">
            <summary>
            The BindablePassword property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.BindablePasswordEnabledProperty">
            <summary>
            The BindablePasswordEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindablePasswordEnabled(System.Windows.Controls.PasswordBox)">
            <summary>
            Gets the BindablePasswordEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindablePasswordEnabled(System.Windows.Controls.PasswordBox,System.Boolean)">
            <summary>
            Sets the BindablePasswordEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindablePassword(System.Windows.Controls.PasswordBox)">
            <summary>
            Gets the BindablePassword value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindablePassword(System.Windows.Controls.PasswordBox,System.String)">
            <summary>
            Sets the BindablePassword value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnPasswordChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableSelectedItemsProperty">
            <summary>
            The BindableSelectedItems property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.BindableSelectedItemsEnabledProperty">
            <summary>
            The BindableSelectedItemsEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableSelectedItems(System.Windows.Controls.Primitives.MultiSelector)">
            <summary>
            Gets the BindableSelectedItems value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableSelectedItems(System.Windows.Controls.Primitives.MultiSelector,System.Collections.IList)">
            <summary>
            Sets the BindableSelectedItems value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetBindableSelectedItemsEnabled(System.Windows.Controls.Primitives.MultiSelector)">
            <summary>
            Gets the BindableSelectedItemsEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetBindableSelectedItemsEnabled(System.Windows.Controls.Primitives.MultiSelector,System.Boolean)">
            <summary>
            Sets the BindableSelectedItemsEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnMultiSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.ClosePopupOnClickProperty">
            <summary>
            The ClosePopupOnClick property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetClosePopupOnClick(System.Windows.Controls.Primitives.ButtonBase)">
            <summary>
            Gets the ClosePopupOnClick value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetClosePopupOnClick(System.Windows.Controls.Primitives.ButtonBase,System.Boolean)">
            <summary>
            Sets the ClosePopupOnClick value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.ClosePopupOnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles on the Click event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.ComboBoxClosedProperty">
            <summary>
            The drop down closed property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetComboBoxClosed(System.Windows.Controls.ComboBox)">
            <summary>
            Gets the drop down closed value.
            </summary>
            <param name="combobox">The combo box.</param>
            <returns>The drop down closed value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetComboBoxClosed(System.Windows.Controls.ComboBox,System.Windows.Input.ICommand)">
            <summary>
            Sets the drop down closed value.
            </summary>
            <param name="combobox">The combo box.</param>
            <param name="value">The drop down closed value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnComboBoxClosed(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.ComboBoxOpenedProperty">
            <summary>
            The drop down opened property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetComboBoxOpened(System.Windows.Controls.ComboBox)">
            <summary>
            Gets the drop down opened value.
            </summary>
            <param name="combobox">The combo box.</param>
            <returns>The drop down opened value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetComboBoxOpened(System.Windows.Controls.ComboBox,System.Windows.Input.ICommand)">
            <summary>
            Sets the drop down opened value.
            </summary>
            <param name="combobox">The combo box.</param>
            <param name="value">The drop down opened value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnComboBoxOpened(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.DisabledToolTipProperty">
            <summary>
            The DisabledToolTip property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.CheckedToolTipProperty">
            <summary>
            The CheckedToolTip property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.IndeterminateToolTipProperty">
            <summary>
            The IndeterminateToolTip property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.OriginalToolTipProperty">
            <summary>
            The OriginalToolTip property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDisabledToolTip(System.Windows.FrameworkElement)">
            <summary>
            Gets the DisabledToolTip value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDisabledToolTip(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Sets the DisabledToolTip value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetCheckedToolTip(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Gets the CheckedToolTip value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetCheckedToolTip(System.Windows.Controls.Primitives.ToggleButton,System.Object)">
            <summary>
            Sets the CheckedToolTip value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetIndeterminateToolTip(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Gets the IndeterminateToolTip value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetIndeterminateToolTip(System.Windows.Controls.Primitives.ToggleButton,System.Object)">
            <summary>
            Sets the IndeterminateToolTip value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnConditionalToolTipChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when any conditional tool tip property is changed.
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnIsEnabledPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnToggleButtonPropertyChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when Checked, Unchecked or Indeterminate event is raised.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.SetToolTip(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Sets the tool tip.
            </summary>
            <param name="element">The element.</param>
            <param name="toolTip">The tool tip.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.DesiredWidthProperty">
            <summary>
            The DesiredWidth property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.DesiredHeightProperty">
            <summary>
            The DesiredHeight property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.DesiredMinWidthProperty">
            <summary>
            The DesiredMinWidth property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.DesiredMaxWidthProperty">
            <summary>
            The DesiredMaxWidth property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.DesiredMinHeightProperty">
            <summary>
            The DesiredMinHeight property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.DesiredMaxHeightProperty">
            <summary>
            The DesiredMaxHeight property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDesiredWidth(System.Windows.DependencyObject)">
            <summary>
            Gets the desired width of the element.
            </summary>
            <param name="element">The element.</param>
            <returns>The desired width.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDesiredWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the desired width of the element.
            </summary>
            <param name="element">The element.</param>
            <param name="desiredWidth">The desired width.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDesiredHeight(System.Windows.DependencyObject)">
            <summary>
            Gets the desired height of the element.
            </summary>
            <param name="element">The element.</param>
            <returns>The desired height.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDesiredHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the desired height of the element.
            </summary>
            <param name="element">The element.</param>
            <param name="desiredHeight">The desired height.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDesiredMinWidth(System.Windows.DependencyObject)">
            <summary>
            Gets the desired minimum width of the element.
            </summary>
            <param name="element">The element.</param>
            <returns>The desired minimum width.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDesiredMinWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the desired minimum width of the element.
            </summary>
            <param name="element">The element.</param>
            <param name="desiredMinWidth">The desired minimum width.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDesiredMaxWidth(System.Windows.DependencyObject)">
            <summary>
            Gets the desired maximum width of the element.
            </summary>
            <param name="element">The element.</param>
            <returns>The desired maximum width.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDesiredMaxWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the desired maximum width of the element.
            </summary>
            <param name="element">The element.</param>
            <param name="desiredMaxWidth">The desired maximum width.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDesiredMinHeight(System.Windows.DependencyObject)">
            <summary>
            Gets the desired minimum height of the element.
            </summary>
            <param name="element">The element.</param>
            <returns>The desired minimum height.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDesiredMinHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the desired minimum height of the element.
            </summary>
            <param name="element">The element.</param>
            <param name="desiredMinHeight">The desired minimum height.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDesiredMaxHeight(System.Windows.DependencyObject)">
            <summary>
            Gets the maximum height of the parent element.
            </summary>
            <param name="element">The element.</param>
            <returns>The desired maximum height.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDesiredMaxHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the maximum height of the parent element.
            </summary>
            <param name="element">The element.</param>
            <param name="desiredMaxHeight">The desired maximum height.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.DialogResultProperty">
            <summary>
            The DialogResult property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDialogResult(System.Windows.Window)">
            <summary>
            Gets the DialogResult value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDialogResult(System.Windows.Window,System.Object)">
            <summary>
            Sets the DialogResult value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.DragOnMouseLeftButtonDownProperty">
            <summary>
            The DragOnMouseLeftButtonDown property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDragOnMouseLeftButtonDown(System.Windows.Window)">
            <summary>
            Gets the DragOnMouseLeftButtonDown value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDragOnMouseLeftButtonDown(System.Windows.Window,System.Boolean)">
            <summary>
            Sets the DragOnMouseLeftButtonDown value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles on the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.DropDownProperty">
            <summary>
            The DropDown property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.ParentToggleButtonProperty">
            <summary>
            The ParentToggleButton property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetParentToggleButton(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Gets the ParentToggleButton value.
            </summary>
            <param name="popup">The popup.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetParentToggleButton(System.Windows.Controls.Primitives.Popup,System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Sets the ParentToggleButton value.
            </summary>
            <param name="popup">The popup.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetDropDown(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Gets the DropDown value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetDropDown(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.Primitives.Popup)">
            <summary>
            Sets the DropDown value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnDropDownOpened(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Controls.Primitives.Popup.Opened" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Controls.Primitives.Popup.Closed" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnDropDownKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.UIElement.KeyDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnDropDownPreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnDropDownIsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.UIElement.IsVisibleChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.FocusNextOnEnterProperty">
            <summary>
            The FocusNextOnEnter property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetFocusNextOnEnter(System.Windows.DependencyObject)">
            <summary>
            Gets the FocusNextOnEnter value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetFocusNextOnEnter(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the FocusNextOnEnter value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.FocusNextOnEnter(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyUp event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.FocusOnLoadProperty">
            <summary>
            The FocusOnLoad property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetFocusOnLoad(System.Windows.DependencyObject)">
            <summary>
            Gets the FocusOnLoad value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetFocusOnLoad(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the FocusOnLoad value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.FocusOnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles on the Loaded event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.FullScreenModeProperty">
            <summary>
            The FullScreenMode property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.CollapseInFullScreenModeProperty">
            <summary>
            The CollapseInFullScreenMode property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.FullScreenModePreviousValueProperty">
            <summary>
            The FullScreenModePreviousValue property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetFullScreenMode(System.Windows.DependencyObject)">
            <summary>
            Gets the FullScreenMode value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetFullScreenMode(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the FullScreenMode value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetCollapseInFullScreenMode(System.Windows.DependencyObject)">
            <summary>
            Gets the CollapseInFullScreenMode value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetCollapseInFullScreenMode(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the CollapseInFullScreenMode value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.SetValueInFullScreenMode(System.Boolean,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Sets the dependency property value in the full screen mode.
            </summary>
            <param name="fullScreen">Indicates whether the element is in the full screen mode.</param>
            <param name="element">The element.</param>
            <param name="property">The dependency property.</param>
            <param name="value">The property value in the full screen mode.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnWindowRestored(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Window.StateChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.HelpTopicProperty">
            <summary>
            The HelpTopic property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetHelpTopic(System.Windows.DependencyObject)">
            <summary>
            Gets the HelpTopic value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetHelpTopic(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the HelpTopic value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.HorizontalScrollingEnabledProperty">
            <summary>
            The HorizontalScrollingEnabled property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetHorizontalScrollingEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets the HorizontalScrollingEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetHorizontalScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the HorizontalScrollingEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.SetupHorizontalScrolling(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sets up the horizontal scrolling.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.ScrollOnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Scrolls the view on mouse wheel event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.InputFilterProperty">
            <summary>
            The InputFilter property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetInputFilter(System.Windows.DependencyObject)">
            <summary>
            Gets the InputFilter value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetInputFilter(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the InputFilter value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.KeyInputFilter(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles on the PreviewKeyDown event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.TextInputFilter(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Handles on the PreviewTextInput event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.RecalculateWindowBoundsProperty">
            <summary>
            The RecalculateWindowBounds property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetRecalculateWindowBounds(System.Windows.Window)">
            <summary>
            Gets the RecalculateWindowBounds value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetRecalculateWindowBounds(System.Windows.Window,System.Boolean)">
            <summary>
            Sets the RecalculateWindowBounds value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.RecalculateWindowBounds(System.Object,System.EventArgs)">
            <summary>
            Recalculates the window bounds.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.RecalculateWindowBoundsHook(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Window message handler hook.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="msg">The message ID.</param>
            <param name="wParam">The message's wParam value.</param>
            <param name="lParam">The message's lParam value.</param>
            <param name="handled">A value that indicates whether the message was handled. Set the value to true if the message was handled; otherwise, false.</param>
            <returns>The appropriate return value depends on the particular message. See the message documentation details for the Win32 message being handled.</returns>
        </member>
        <member name="T:Fusion.UI.Extensions.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.RunOnEnterCommandProperty">
            <summary>
            The RunOnEnterCommand property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.RunOnEnterCommandParameterProperty">
            <summary>
            The RunOnEnterCommandParameter property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetRunOnEnterCommand(System.Windows.DependencyObject)">
            <summary>
            Gets the RunOnEnterCommand value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetRunOnEnterCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            Sets the RunOnEnterCommand value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetRunOnEnterCommandParameter(System.Windows.DependencyObject)">
            <summary>
            Gets the RunOnEnterCommandParameter value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetRunOnEnterCommandParameter(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the RunOnEnterCommandParameter value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.RunOnEnter(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyUp event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.RunOnLostFocusCommandProperty">
            <summary>
            The RunOnLostFocusCommand property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.RunOnLostFocusCommandParameterProperty">
            <summary>
            The RunOnLostFocusCommandParameter property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetRunOnLostFocusCommand(System.Windows.DependencyObject)">
            <summary>
            Gets the RunOnLostFocusCommand value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetRunOnLostFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            Sets the RunOnLostFocusCommand value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.GetRunOnLostFocusCommandParameter(System.Windows.DependencyObject)">
            <summary>
            Gets the RunOnLostFocusCommandParameter value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetRunOnLostFocusCommandParameter(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the RunOnLostFocusCommandParameter value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.RunOnLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles on the LostFocus event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.SelectionChangedCommandProperty">
            <summary>
            The SelectionChangedCommand property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetSelectionChangedCommand(System.Windows.UIElement)">
            <summary>
            Gets the SelectionChangedCommand value.
            </summary>
            <param name="element">The element.</param>
            <returns>The SelectionChangedCommand value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetSelectionChangedCommand(System.Windows.UIElement,System.Windows.Input.ICommand)">
            <summary>
            Sets the SelectionChangedCommand value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The SelectionChangedCommand value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.OnSingleSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.SystemCommandsEnabledProperty">
            <summary>
            The SystemCommandsEnabled property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.MinimizeCommandBinding">
            <summary>
            The command binding for <see cref="P:System.Windows.SystemCommands.MinimizeWindowCommand"/>.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.MaximizeCommandBinding">
            <summary>
            The command binding for <see cref="P:System.Windows.SystemCommands.MaximizeWindowCommand"/>.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.RestoreCommandBinding">
            <summary>
            The command binding for <see cref="P:System.Windows.SystemCommands.RestoreWindowCommand"/>.
            </summary>
        </member>
        <member name="F:Fusion.UI.Extensions.CloseCommandBinding">
            <summary>
            The command binding for <see cref="P:System.Windows.SystemCommands.CloseWindowCommand"/>.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetSystemCommandsEnabled(System.Windows.Window)">
            <summary>
            Gets the SystemCommandsEnabled value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetSystemCommandsEnabled(System.Windows.Window,System.Boolean)">
            <summary>
            Sets the SystemCommandsEnabled value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.TabletModeProperty">
            <summary>
            The TabletMode property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetTabletMode(System.Windows.DependencyObject)">
            <summary>
            Gets the tablet mode.
            </summary>
            <param name="element">The element.</param>
            <returns>True if the element is in the tablet mode, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetTabletMode(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the tablet mode.
            </summary>
            <param name="element">The element.</param>
            <param name="tabletMode">Indicates whether the element is in the table mode.</param>
        </member>
        <member name="F:Fusion.UI.Extensions.UnfocusOnEnterProperty">
            <summary>
            The UnfocusOnEnter property.
            </summary>
        </member>
        <member name="M:Fusion.UI.Extensions.GetUnfocusOnEnter(System.Windows.DependencyObject)">
            <summary>
            Gets the UnfocusOnEnter value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Extensions.SetUnfocusOnEnter(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the UnfocusOnEnter value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Extensions.UnfocusOnEnter(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyUp event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Fusion.UI.StringValidator">
            <summary>
            Validation extensions for strings.
            </summary>
        </member>
        <member name="F:Fusion.UI.StringValidator.ForbiddenCharacters">
            <summary>
            The forbidden characters.
            </summary>
        </member>
        <member name="F:Fusion.UI.StringValidator.ReservedOperatingSystemNames">
            <summary>
            The reserved operating system names.
            </summary>
        </member>
        <member name="P:Fusion.UI.StringValidator.FileOrFolderName">
            <summary>
            Gets the name validator.
            </summary>
        </member>
        <member name="M:Fusion.UI.StringValidator.Sanitize(System.String,System.Int32)">
            <summary>
            Sanitizes the specified string, i.e. checks string is not reserved name and removes control and illegal characters.
            </summary>
            <param name="text">The text.</param>
            <param name="maxLength">The maximum length.</param>
            <returns>Sanitized string.</returns>
        </member>
        <member name="T:Fusion.UI.ForceTextBox">
            <summary>
            <see cref="T:Fusion.Force"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.ForceTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.ForceTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.ForceTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.ForceTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.IsolatedContent">
            <summary>
            Content control that hosts the content inside an isolated rendering surface.
            </summary>
            <remarks>
            This control creates an isolated rendering surface for the content. The surface is a native control with all the usual
            rules and limitations (i.e. animations, resizing, airspace violations). The purpose of the control is to allow fast
            visual tree modifications (e.g. changing the parent element) while hosting large and complex content.
            </remarks>
        </member>
        <member name="M:Fusion.UI.IsolatedContent.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.IsolatedContent"/> class.
            </summary>
        </member>
        <member name="T:Fusion.UI.ItemStretch">
            <summary>
            Item size stretch enumeration for uniform wrap panel.
            </summary>
        </member>
        <member name="F:Fusion.UI.ItemStretch.None">
            <summary>
            No item size stretching.
            </summary>
        </member>
        <member name="F:Fusion.UI.ItemStretch.Uniform">
            <summary>
            Stretch items uniform.
            </summary>
        </member>
        <member name="F:Fusion.UI.ItemStretch.UniformStretchToFit">
            <summary>
            Stretch items uniform to fit.
            </summary>
        </member>
        <member name="T:Fusion.UI.LoginView">
            <summary>
            Login view.
            </summary>
        </member>
        <member name="F:Fusion.UI.LoginView.UserNameProperty">
            <summary>
            The UserName property.
            </summary>
        </member>
        <member name="F:Fusion.UI.LoginView.PasswordProperty">
            <summary>
            The Password property.
            </summary>
        </member>
        <member name="F:Fusion.UI.LoginView.CommandProperty">
            <summary>
            The Command property.
            </summary>
        </member>
        <member name="F:Fusion.UI.LoginView.CommandParameterProperty">
            <summary>
            The CommandParameter property.
            </summary>
        </member>
        <member name="M:Fusion.UI.LoginView.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.LoginView"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.LoginView.UserName">
            <summary>
            Gets or sets the UserName value.
            </summary>
            <value>The UserName value.</value>
        </member>
        <member name="P:Fusion.UI.LoginView.Password">
            <summary>
            Gets or sets the Password value.
            </summary>
            <value>The Password value.</value>
        </member>
        <member name="P:Fusion.UI.LoginView.Command">
            <summary>
            Gets or sets the Command value.
            </summary>
            <value>The Command value.</value>
        </member>
        <member name="P:Fusion.UI.LoginView.CommandParameter">
            <summary>
            Gets or sets the CommandParameter value.
            </summary>
            <value>The CommandParameter value.</value>
        </member>
        <member name="T:Fusion.UI.MasterDetailsPanel">
            <summary>
            Master-details panel.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.HasDetailsProperty">
            <summary>
            The HasDetails property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.DetailsProperty">
            <summary>
            The Details property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.DetailsStringFormatProperty">
            <summary>
            The DetailsStringFormat property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.DetailsTemplateProperty">
            <summary>
            The DetailsTemplate property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.DetailsTemplateSelectorProperty">
            <summary>
            The DetailsTemplateSelector property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.DetailsVisibleProperty">
            <summary>
            The DetailsVisible property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MasterDetailsPanel.HasDetailsPropertyKey">
            <summary>
            The HasDetails property key.
            </summary>
        </member>
        <member name="M:Fusion.UI.MasterDetailsPanel.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.MasterDetailsPanel"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.MasterDetailsPanel.HasDetails">
            <summary>
            Gets a value indicating whether the panel has details content.
            </summary>
            <value>True if the panel has details content, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.MasterDetailsPanel.Details">
            <summary>
            Gets or sets the details content.
            </summary>
            <value>The details content.</value>
        </member>
        <member name="P:Fusion.UI.MasterDetailsPanel.DetailsStringFormat">
            <summary>
            Gets or sets the details content string format.
            </summary>
            <value>The details content string format.</value>
        </member>
        <member name="P:Fusion.UI.MasterDetailsPanel.DetailsTemplate">
            <summary>
            Gets or sets the details data template.
            </summary>
            <value>The details data template.</value>
        </member>
        <member name="P:Fusion.UI.MasterDetailsPanel.DetailsTemplateSelector">
            <summary>
            Gets or sets the details data template selector.
            </summary>
            <value>The details data template selector.</value>
        </member>
        <member name="P:Fusion.UI.MasterDetailsPanel.DetailsVisible">
            <summary>
            Gets or sets the DetailsVisible value.
            </summary>
            <value>The DetailsVisible value.</value>
        </member>
        <member name="T:Fusion.UI.OnParseFailure">
            <summary>
            Parse failure resolutions.
            </summary>
        </member>
        <member name="F:Fusion.UI.OnParseFailure.UseZero">
            <summary>
            Use zero value.
            </summary>
        </member>
        <member name="F:Fusion.UI.OnParseFailure.UsePreviousValue">
            <summary>
            Use the previous value.
            </summary>
        </member>
        <member name="T:Fusion.UI.PublishedViewsView">
            <summary>
            The PublishedViews view.
            </summary>
        </member>
        <member name="M:Fusion.UI.PublishedViewsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.PublishedViewsView"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.PublishedViewsView.OpenPublishedView">
            <summary>
            Gets the show published view command.
            </summary>
            <value>The show published view command.</value>
        </member>
        <member name="P:Fusion.UI.PublishedViewsView.PublishedViews">
            <summary>
            Gets the published views.
            </summary>
            <value>The published views.</value>
        </member>
        <member name="T:Fusion.UI.PublishedMethodsView">
            <summary>
            The PublishedMethods view.
            </summary>
        </member>
        <member name="M:Fusion.UI.PublishedMethodsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.PublishedMethodsView"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.PublishedMethodsView.CopySignature">
            <summary>
            Gets the copy signature command.
            </summary>
            <value>The copy signature command.</value>
        </member>
        <member name="P:Fusion.UI.PublishedMethodsView.CopyDelegate">
            <summary>
            Gets the copy delegate command.
            </summary>
            <value>The copy delegate command.</value>
        </member>
        <member name="P:Fusion.UI.PublishedMethodsView.PublishedMethods">
            <summary>
            Gets the published methods.
            </summary>
            <value>The published methods.</value>
        </member>
        <member name="P:Fusion.UI.PublishedMethodsView.PublishedMethodLog">
            <summary>
            Gets the published method log.
            </summary>
            <value>The published method log.</value>
        </member>
        <member name="T:Fusion.UI.LocalizedStringsView">
            <summary>
            The LocalizedStrings view.
            </summary>
        </member>
        <member name="F:Fusion.UI.LocalizedStringsView.NoteProperty">
            <summary>
            The Note property.
            </summary>
        </member>
        <member name="F:Fusion.UI.LocalizedStringsView.SelectedItemProperty">
            <summary>
            The SelectedItem property.
            </summary>
        </member>
        <member name="F:Fusion.UI.LocalizedStringsView.KeyColumnName">
            <summary>
            The key column name.
            </summary>
        </member>
        <member name="F:Fusion.UI.LocalizedStringsView.LocalizationNoteSuffix">
            <summary>
            The localization note suffix.
            </summary>
        </member>
        <member name="F:Fusion.UI.LocalizedStringsView.notes">
            <summary>
            The notes dictionary.
            </summary>
        </member>
        <member name="P:Fusion.UI.LocalizedStringsView.Note">
            <summary>
            Gets or sets the Note value.
            </summary>
            <value>The Note value.</value>
        </member>
        <member name="P:Fusion.UI.LocalizedStringsView.SelectedItem">
            <summary>
            Gets or sets the SelectedItem value.
            </summary>
            <value>The SelectedItem value.</value>
        </member>
        <member name="P:Fusion.UI.LocalizedStringsView.LocalizedStrings">
            <summary>
            Gets the localized strings.
            </summary>
            <value>
            The localized strings.
            </value>
        </member>
        <member name="M:Fusion.UI.LocalizedStringsView.SelectedItemChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the selected item changes.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.LocalizedStringsView.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Fusion.UI.LocalizedStringsView.SetNote(System.Object)">
            <summary>
            Sets the note.
            </summary>
            <param name="selectedItem">The selected item.</param>
        </member>
        <member name="T:Fusion.UI.PerformanceView">
            <summary>
            The Performance view.
            </summary>
        </member>
        <member name="M:Fusion.UI.PerformanceView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.PerformanceView"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counters">
            <summary>
            Gets the counters.
            </summary>
            <value>
            The counters.
            </value>
        </member>
        <member name="T:Fusion.UI.PerformanceView.Counter">
            <summary>
            The Counter class.
            </summary>
        </member>
        <member name="M:Fusion.UI.PerformanceView.Counter.#ctor(Fusion.PerformanceMetric)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.PerformanceView.Counter" /> class.
            </summary>
            <param name="performanceMetric">The performance metric.</param>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Operation">
            <summary>
            Gets the operation.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Target">
            <summary>
            Gets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Average">
            <summary>
            Gets the average.
            </summary>
            <value>The average.</value>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Maximum">
            <summary>
            Gets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Minimum">
            <summary>
            Gets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Samples">
            <summary>
            Gets the samples.
            </summary>
            <value>The samples.</value>
        </member>
        <member name="P:Fusion.UI.PerformanceView.Counter.Total">
            <summary>
            Gets the total.
            </summary>
            <value>The total.</value>
        </member>
        <member name="T:Fusion.UI.LogsView">
            <summary>
            The Logs view.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.EventsChunkSize">
            <summary>
            The events chunk size.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.UpdateTimeSpan">
            <summary>
            The update time span.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.traceListener">
            <summary>
            The trace listener.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.diagnosticEvents">
            <summary>
            The diagnostic logs.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.timer">
            <summary>
            The timer.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.filter">
            <summary>
            The filter.
            </summary>
        </member>
        <member name="M:Fusion.UI.LogsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.LogsView"/> class.
            </summary>
        </member>
        <member name="T:Fusion.UI.LogsView.SeverityLevels">
            <summary>
            The log severity levels.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.SeverityLevels.Unknown">
            <summary>
            Unknown level.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.SeverityLevels.Information">
            <summary>
            Information level.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.SeverityLevels.Warning">
            <summary>
            Warning level.
            </summary>
        </member>
        <member name="F:Fusion.UI.LogsView.SeverityLevels.Error">
            <summary>
            Error level.
            </summary>
        </member>
        <member name="P:Fusion.UI.LogsView.Filter">
            <summary>
            Gets the filter command.
            </summary>
            <value>
            The filter command.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.Clear">
            <summary>
            Gets the clear command.
            </summary>
            <value>
            The clear command.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.Save">
            <summary>
            Gets the save command.
            </summary>
            <value>
            The save command.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.Start">
            <summary>
            Gets the start command.
            </summary>
            <value>
            The start command.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.Stop">
            <summary>
            Gets the stop command.
            </summary>
            <value>
            The stop command.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.DiagnosticEvents">
            <summary>
            Gets the diagnostic events.
            </summary>
            <value>
            The diagnostic events.
            </value>
        </member>
        <member name="T:Fusion.UI.LogsView.DiagnosticEvent">
            <summary>
            The DiagnosticEvent class.
            </summary>
        </member>
        <member name="M:Fusion.UI.LogsView.DiagnosticEvent.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Fusion.UI.LogsView.DiagnosticEvent"/> class from being created.
            </summary>
        </member>
        <member name="P:Fusion.UI.LogsView.DiagnosticEvent.Feature">
            <summary>
            Gets the feature.
            </summary>
            <value>
            The feature.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.DiagnosticEvent.Severity">
            <summary>
            Gets the severity.
            </summary>
            <value>
            The severity.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.DiagnosticEvent.Message">
            <summary>
            Gets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Fusion.UI.LogsView.DiagnosticEvent.RawLog">
            <summary>
            Gets the raw log.
            </summary>
            <value>
            The raw log.
            </value>
        </member>
        <member name="M:Fusion.UI.LogsView.DiagnosticEvent.Parse(System.String)">
            <summary>
            Parses the specified raw log.
            </summary>
            <param name="rawLog">The raw log.</param>
            <returns>A new <see cref="T:Fusion.UI.LogsView.DiagnosticEvent"/>.</returns>
        </member>
        <member name="M:Fusion.UI.LogsView.DiagnosticEvent.Contains(System.String)">
            <summary>
            Determines whether this instance contains the specified filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>True contains the filter, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.DiagnosticView">
            <summary>
            The diagnostic view.
            </summary>
        </member>
        <member name="T:Fusion.UI.MessageView">
            <summary>
            Message view.
            </summary>
        </member>
        <member name="F:Fusion.UI.MessageView.TitleProperty">
            <summary>
            The Title property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MessageView.TextProperty">
            <summary>
            The Text property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MessageView.IconProperty">
            <summary>
            The Icon property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MessageView.ButtonsProperty">
            <summary>
            The Buttons property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MessageView.DefaultButtonProperty">
            <summary>
            The DefaultButton property.
            </summary>
        </member>
        <member name="F:Fusion.UI.MessageView.CancelButtonProperty">
            <summary>
            The CancelButton property.
            </summary>
        </member>
        <member name="P:Fusion.UI.MessageView.Title">
            <summary>
            Gets or sets the Title value.
            </summary>
            <value>The Title value.</value>
        </member>
        <member name="P:Fusion.UI.MessageView.Text">
            <summary>
            Gets or sets the Text value.
            </summary>
            <value>The Text value.</value>
        </member>
        <member name="P:Fusion.UI.MessageView.Icon">
            <summary>
            Gets or sets the Icon value.
            </summary>
            <value>The Icon value.</value>
        </member>
        <member name="P:Fusion.UI.MessageView.Buttons">
            <summary>
            Gets or sets the Buttons value.
            </summary>
            <value>The Buttons value.</value>
        </member>
        <member name="P:Fusion.UI.MessageView.DefaultButton">
            <summary>
            Gets or sets the DefaultButton value.
            </summary>
            <value>The DefaultButton value.</value>
        </member>
        <member name="P:Fusion.UI.MessageView.CancelButton">
            <summary>
            Gets or sets the CancelButton value.
            </summary>
            <value>The CancelButton value.</value>
        </member>
        <member name="T:Fusion.UI.ReadOnlyModeWrapper">
            <summary>
            Shows the content (textBox etc.) in edit mode and textBlock in readonly mode.
            </summary>
        </member>
        <member name="F:Fusion.UI.ReadOnlyModeWrapper.TextProperty">
            <summary>
            The text property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ReadOnlyModeWrapper.IsReadOnlyProperty">
            <summary>
            The is read only property.
            </summary>
        </member>
        <member name="P:Fusion.UI.ReadOnlyModeWrapper.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Fusion.UI.ReadOnlyModeWrapper.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether this instance is read only.
            </summary>
        </member>
        <member name="T:Fusion.UI.UniformWrapPanel">
            <summary>
            Wrap panel which items can be stretched uniformly to fit.
            </summary>
        </member>
        <member name="F:Fusion.UI.UniformWrapPanel.ItemtStretchProperty">
            <summary>
            The item stretch dependency property.
            </summary>
        </member>
        <member name="P:Fusion.UI.UniformWrapPanel.ItemStretch">
            <summary>
            Gets or sets the item stretch.
            </summary>
            <value>The item stretch value.</value>
        </member>
        <member name="M:Fusion.UI.UniformWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Overrides the measure method.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The size.</returns>
        </member>
        <member name="M:Fusion.UI.UniformWrapPanel.ItemStretchChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when item stretch property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event.</param>
        </member>
        <member name="M:Fusion.UI.UniformWrapPanel.UpdateItemWidth(System.Windows.Size)">
            <summary>
            Updates the width of the item.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:Fusion.UI.UniformWrapPanel.UpdateItemHeight(System.Windows.Size)">
            <summary>
            Updates the height of the item.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="T:Fusion.UI.AngleTextBox">
            <summary>
            <see cref="T:Fusion.Angle"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.AngleTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.AngleTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.AngleTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.AngleTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertBooleanToInverse">
            <summary>
            Inverts a boolean value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertBooleanToInverse.Convert(System.Nullable{System.Boolean},System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.ConvertBooleanToInverse.ConvertBack(System.Nullable{System.Boolean},System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the target to the source.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertBooleanToInverseVisibility">
            <summary>
            Converts a boolean value to the inverse <see cref="T:System.Windows.Visibility" />. The converter parameter sets the visibility if the source value is not false.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertBooleanToInverseVisibility.Convert(System.Nullable{System.Boolean},System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.ConvertBooleanToInverseVisibility.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the target to the source.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertBooleanToVisibility">
            <summary>
            Converts a boolean value to <see cref="T:System.Windows.Visibility" />. The converter parameter sets the visibility if the source value is not true.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertBooleanToVisibility.Convert(System.Nullable{System.Boolean},System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.ConvertBooleanToVisibility.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the target to the source.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertColorToSolidColorBrush">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> value to a <see cref="T:System.Windows.Media.SolidColorBrush"/>.
            </summary>
        </member>
        <member name="F:Fusion.UI.ConvertColorToSolidColorBrush.ColorToSolidColorBrushCache">
            <summary>
            The color to solid color brush dictionary.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertColorToSolidColorBrush.Convert(System.Nullable{System.Windows.Media.Color},System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertDoublesToMax">
            <summary>
            Converts multiple double values to the aggregated maximum value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertDoublesToMax.Convert(System.Nullable{System.Double}[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertDoublesToMin">
            <summary>
            Converts multiple double values to the aggregated minimum value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertDoublesToMin.Convert(System.Nullable{System.Double}[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertDoublesToProduct">
            <summary>
            Converts multiple double values to the aggregated product.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertDoublesToProduct.Convert(System.Nullable{System.Double}[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertDoublesToSum">
            <summary>
            Converts multiple double values to the aggregated sum.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertDoublesToSum.Convert(System.Nullable{System.Double}[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectIsNotNullToBoolean">
            <summary>
            Converts an object to a boolean value indicating whether the object reference is not null.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectIsNotNullToBoolean.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectIsNotNullToVisibility">
            <summary>
            Converts an object to <see cref="T:System.Windows.Visibility" /> indicating whether the object reference is not null. The converter parameter sets the visibility if the source value is null.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectIsNotNullToVisibility.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectIsNullToBoolean">
            <summary>
            Converts an object to a boolean value indicating whether the object reference is null.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectIsNullToBoolean.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectIsNullToVisibility">
            <summary>
            Converts an object to <see cref="T:System.Windows.Visibility"/> indicating whether the object reference is null. The converter parameter sets the visibility if the source value is not null.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectIsNullToVisibility.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectsToFirstNotNull">
            <summary>
            Converts multiple objects to the first not null value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectsToFirstNotNull.Convert(System.Object[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertObjectToResource">
            <summary>
            Converts an object to a resource using the object as the resource key.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertObjectToResource.Convert(System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringIsNotNullOrEmptyToVisibility">
            <summary>
            Converts a string to <see cref="T:System.Windows.Visibility"/> indicating whether the string is not null or empty. The converter parameter sets the visibility if the source value is null or an empty string.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringIsNotNullOrEmptyToVisibility.Convert(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ConvertStringIsNullOrEmptyToVisibility">
            <summary>
            Converts a string to <see cref="T:System.Windows.Visibility"/> indicating whether the string is null or empty. The converter parameter sets the visibility if the source value is not null or an empty string.
            </summary>
        </member>
        <member name="M:Fusion.UI.ConvertStringIsNullOrEmptyToVisibility.Convert(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.FormattedTextBlock">
            <summary>
            Formatted text block.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.FormatProperty">
            <summary>
            The Format property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value0Property">
            <summary>
            The Value0 property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value1Property">
            <summary>
            The Value1 property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value2Property">
            <summary>
            The Value2 property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value3Property">
            <summary>
            The Value3 property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value0FormatterProperty">
            <summary>
            The Value0Formatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value1FormatterProperty">
            <summary>
            The Value1Formatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value2FormatterProperty">
            <summary>
            The Value2Formatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Value3FormatterProperty">
            <summary>
            The Value3Formatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.Int32FormatterProperty">
            <summary>
            The Int32Formatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.DoubleFormatterProperty">
            <summary>
            The DoubleFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.DateTimeFormatterProperty">
            <summary>
            The DateTimeFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.TimeSpanFormatterProperty">
            <summary>
            The TimeSpanFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.AngleFormatterProperty">
            <summary>
            The AngleFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.LengthFormatterProperty">
            <summary>
            The LengthFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.AreaFormatterProperty">
            <summary>
            The AreaFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.VolumeFormatterProperty">
            <summary>
            The VolumeFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.MassFormatterProperty">
            <summary>
            The MassFormatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBlock.SymbolsProperty">
            <summary>
            The Symbols property.
            </summary>
        </member>
        <member name="M:Fusion.UI.FormattedTextBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.FormattedTextBlock" /> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Text">
            <summary>
            Gets the text contents of a <see cref="T:System.Windows.Controls.TextBlock" />.
            </summary>
            <value>The text contents of this <see cref="T:System.Windows.Controls.TextBlock" />.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Format">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value0">
            <summary>
            Gets or sets the formatted value at position 0.
            </summary>
            <value>The formatted value at position 0.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value1">
            <summary>
            Gets or sets the formatted value at position 1.
            </summary>
            <value>The formatted value at position 1.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value2">
            <summary>
            Gets or sets the formatted value at position 2.
            </summary>
            <value>The formatted value at position 2.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value3">
            <summary>
            Gets or sets the formatted value at position 3.
            </summary>
            <value>The formatted value at position 3.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value0Formatter">
            <summary>
            Gets or sets the formatter for the value at position 0.
            </summary>
            <value>The formatter for the value at position 0.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value1Formatter">
            <summary>
            Gets or sets the formatter for the value at position 1.
            </summary>
            <value>The formatter for the value at position 1.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value2Formatter">
            <summary>
            Gets or sets the formatter for the value at position 2.
            </summary>
            <value>The formatter for the value at position 2.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Value3Formatter">
            <summary>
            Gets or sets the formatter for the value at position 3.
            </summary>
            <value>The formatter for the value at position 3.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Int32Formatter">
            <summary>
            Gets or sets the integer number formatter.
            </summary>
            <value>The integer number formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.DoubleFormatter">
            <summary>
            Gets or sets the floating point number formatter.
            </summary>
            <value>The floating point number formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.DateTimeFormatter">
            <summary>
            Gets or sets the date and time formatter.
            </summary>
            <value>The date and time formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.TimeSpanFormatter">
            <summary>
            Gets or sets the time span formatter.
            </summary>
            <value>The time span formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.AngleFormatter">
            <summary>
            Gets or sets the angle formatter.
            </summary>
            <value>The angle formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.LengthFormatter">
            <summary>
            Gets or sets the length formatter.
            </summary>
            <value>The length formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.AreaFormatter">
            <summary>
            Gets or sets the area formatter.
            </summary>
            <value>The area formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.VolumeFormatter">
            <summary>
            Gets or sets the volume formatter.
            </summary>
            <value>The volume formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.MassFormatter">
            <summary>
            Gets or sets the mass formatter.
            </summary>
            <value>The mass formatter.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBlock.Symbols">
            <summary>
            Gets or sets the Symbols value.
            </summary>
            <value>The Symbols value.</value>
        </member>
        <member name="M:Fusion.UI.FormattedTextBlock.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Fusion.UI.FormattedTextBlock.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Fusion.UI.FormattedTextBlock.OnFormatChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the format is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Fusion.UI.FormattedTextBlock.FormatValue(System.Object,System.Object)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="formatter">The value formatter.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="T:Fusion.UI.MultiValueConverter`2">
            <summary>
            An abstract base class for multi value converters.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TTarget">The target type.</typeparam>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter`2.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides the value converter.
            </summary>
            <param name="serviceProvider">This argument is not used.</param>
            <returns>Reference to this instance.</returns>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter`2.Convert(`0[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts all values from the source to the target.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter`2.System#Windows#Data#IMultiValueConverter#Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"/>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding"/>.<see cref="F:System.Windows.Data.Binding.DoNothing"/> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> or the default value.</returns>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter`2.System#Windows#Data#IMultiValueConverter#ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
        </member>
        <member name="T:Fusion.UI.NavigationController">
            <summary>
            The NavigationController class.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.PartButton">
            <summary>
            Name constant for the button template part.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.AnimationDelay">
            <summary>
            The animation delay. Note, the animations duration of the control view have to be the same.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.HomeViewNameProperty">
            <summary>
            The HomeViewName property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.HomeViewParameterProperty">
            <summary>
            The HomeViewParameter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.CanNavigateBackProperty">
            <summary>
            The CanNavigateBack property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.SlideDirectionProperty">
            <summary>
            The SlideDirection property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.CurrentPageProperty">
            <summary>
            The CurrentPage property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.NextPageProperty">
            <summary>
            The NextPage property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.CanNavigateBackPropertyKey">
            <summary>
            The CanNavigateBack property key.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.SlideDirectionPropertyKey">
            <summary>
            The SlideDirection property key.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.CurrentPagePropertyKey">
            <summary>
            The CurrentPage property key.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.NextPagePropertyKey">
            <summary>
            The NextPage property key.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationController.pages">
            <summary>
            The navigation stack.
            </summary>
        </member>
        <member name="M:Fusion.UI.NavigationController.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.NavigationController"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.NavigationController.HomeViewName">
            <summary>
            Gets or sets the home view name.
            </summary>
            <value>The home view name.</value>
        </member>
        <member name="P:Fusion.UI.NavigationController.HomeViewParameter">
            <summary>
            Gets or sets the home view parameter.
            </summary>
            <value>The home view parameter.</value>
        </member>
        <member name="P:Fusion.UI.NavigationController.CanNavigateBack">
            <summary>
            Gets a value indicating whether the controller can navigate backwards.
            </summary>
            <value>True if the controller can navigate backwards, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.NavigationController.SlideDirection">
            <summary>
            Gets the SlideDirection value.
            </summary>
            <value>The SlideDirection value.</value>
        </member>
        <member name="P:Fusion.UI.NavigationController.CurrentPage">
            <summary>
            Gets the CurrentPage value.
            </summary>
            <value>The CurrentPage value.</value>
        </member>
        <member name="P:Fusion.UI.NavigationController.NextPage">
            <summary>
            Gets the NextPage value.
            </summary>
            <value>The NextPage value.</value>
        </member>
        <member name="M:Fusion.UI.NavigationController.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Fusion.UI.NavigationController.Navigate(System.String,System.Object)">
            <summary>
            Navigates to the specified page.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
        </member>
        <member name="M:Fusion.UI.NavigationController.NavigateBack">
            <summary>
            Navigates to the previous page if any.
            </summary>
        </member>
        <member name="M:Fusion.UI.NavigationController.NavigateHome">
            <summary>
            Navigates to the home page.
            </summary>
        </member>
        <member name="M:Fusion.UI.NavigationController.CreatePage(System.String,System.Object)">
            <summary>
            Creates a navigation page.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The navigation page.</returns>
        </member>
        <member name="M:Fusion.UI.NavigationController.OnHomeViewChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the home view is changed.
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Fusion.UI.NavigationPage">
            <summary>
            The NavigationPage abstract user control.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationPage.AnimateProperty">
            <summary>
            The Animate property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationPage.HeaderTextProperty">
            <summary>
            The HeaderText property.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationPage.HeaderGeometryKeyProperty">
            <summary>
            The HeaderGeometryKey property.
            </summary>
        </member>
        <member name="P:Fusion.UI.NavigationPage.Animate">
            <summary>
            Gets or sets a value indicating whether the navigation page is animated.
            </summary>
            <value>True if the navigation page is animated, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.NavigationPage.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Fusion.UI.NavigationPage.HeaderGeometryKey">
            <summary>
            Gets or sets the header geometry key.
            </summary>
            <value>The header geometry key.</value>
        </member>
        <member name="T:Fusion.UI.DateTimeTextBox">
            <summary>
            <see cref="T:System.DateTime"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.DateTimeTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.DateTimeTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.DateTimeTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.DateTimeTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.AreaTextBox">
            <summary>
            <see cref="T:Fusion.Area"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.AreaTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.AreaTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.AreaTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.AreaTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.NavigationSlideDirection">
            <summary>
            The navigation slide direction.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationSlideDirection.None">
            <summary>
            No direction.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationSlideDirection.LeftToRight">
            <summary>
            The left to right direction.
            </summary>
        </member>
        <member name="F:Fusion.UI.NavigationSlideDirection.RightToLeft">
            <summary>
            The right to left direction.
            </summary>
        </member>
        <member name="T:Fusion.UI.ExtendedTextBlock">
            <summary>
            Extended <see cref="T:System.Windows.Controls.TextBlock"/> control.
            </summary>
            <example>
            <code lang="XAML" title="XAML - Example of ExtendedTextBlock">
            <![CDATA[
                <ui:ExtendedTextBlock FormattedText="[b]bold[/b], [i]italic[/i], [u]underline[/u], [nl/] new line" />
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Fusion.UI.ExtendedTextBlock.FormattedTextProperty">
            <summary>
            The formatted text property.
            </summary>
        </member>
        <member name="P:Fusion.UI.ExtendedTextBlock.FormattedText">
            <summary>
            Gets or sets the formatted text.
            </summary>
            <value>
            The formatted text.
            </value>
        </member>
        <member name="M:Fusion.UI.ExtendedTextBlock.OnCreateAutomationPeer">
            <summary>
            Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> object for this <see cref="T:System.Windows.Controls.TextBlock"/>.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> object for this <see cref="T:System.Windows.Controls.TextBlock"/>.
            </returns>
        </member>
        <member name="M:Fusion.UI.ExtendedTextBlock.Parse(System.String)">
            <summary>
            Parses the formatted text.
            </summary>
            <param name="text">The text to parse.</param>
            <returns>A collection of inlines that represents the formatted text.</returns>
        </member>
        <member name="M:Fusion.UI.ExtendedTextBlock.OnFormattedTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the formatted text is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedTextBlock.FormattedTextToInline">
            <summary>
            Converts the formatted text to inline.
            </summary>
        </member>
        <member name="T:Fusion.UI.ExtendedTextBlock.AutomatableTextBlockAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedTextBlock.AutomatableTextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ExtendedTextBlock.AutomatableTextBlockAutomationPeer"/> class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.TextBlock"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/>.
            </param>
        </member>
        <member name="M:Fusion.UI.ExtendedTextBlock.AutomatableTextBlockAutomationPeer.IsControlElementCore">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TextBlock"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/> is something that the end user would understand as being interactive or as contributing to the logical structure of the control in the GUI. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"/>.
            </summary>
            <returns>
            False if the element is part of a template; otherwise true.
            </returns>
        </member>
        <member name="T:Fusion.UI.MultiValueConverter">
            <summary>
            Multi value converter factory.
            </summary>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter.Create``2(System.Func{``0[],``1})">
            <summary>
            Creates a value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
            <param name="convert">The converter delegate.</param>
            <returns>The value converter.</returns>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter.Create``3(System.Func{``0[],``1,``2})">
            <summary>
            Creates a value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TParameter">The type of the converter parameter.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
            <param name="convert">The converter delegate.</param>
            <returns>The value converter.</returns>
        </member>
        <member name="T:Fusion.UI.MultiValueConverter.Converter`2">
            <summary>
            Value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
        </member>
        <member name="F:Fusion.UI.MultiValueConverter.Converter`2.convert">
            <summary>
            The converter delegate.
            </summary>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter.Converter`2.#ctor(System.Func{`0[],`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.MultiValueConverter.Converter`2"/> class.
            </summary>
            <param name="convert">The converter delegate.</param>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter.Converter`2.Convert(`0[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.MultiValueConverter.Converter`3">
            <summary>
            Value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TParameter">The type of the converter parameter.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
        </member>
        <member name="F:Fusion.UI.MultiValueConverter.Converter`3.convert">
            <summary>
            The converter delegate.
            </summary>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter.Converter`3.#ctor(System.Func{`0[],`1,`2})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.MultiValueConverter.Converter`3" /> class.
            </summary>
            <param name="convert">The converter delegate.</param>
        </member>
        <member name="M:Fusion.UI.MultiValueConverter.Converter`3.Convert(`0[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.VolumeTextBox">
            <summary>
            <see cref="T:Fusion.Volume"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.VolumeTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.VolumeTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.VolumeTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.VolumeTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.MassTextBox">
            <summary>
            <see cref="T:Fusion.Mass"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.MassTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.MassTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.MassTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.MassTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.TimeSpanTextBox">
            <summary>
            <see cref="T:System.TimeSpan"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.TimeSpanTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.TimeSpanTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.TimeSpanTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.TimeSpanTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.FormattedTextBox">
            <summary>
            An abstract base class for formatted text boxes.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBox.ValueProperty">
            <summary>
            The Value property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBox.MaximumProperty">
            <summary>
            The Maximum property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBox.MinimumProperty">
            <summary>
            The Minimum property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBox.FormatterProperty">
            <summary>
            The Formatter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBox.SymbolsProperty">
            <summary>
            The Symbols property.
            </summary>
        </member>
        <member name="F:Fusion.UI.FormattedTextBox.OnParseFailureProperty">
            <summary>
            The OnParseFailure property.
            </summary>
        </member>
        <member name="P:Fusion.UI.FormattedTextBox.Symbols">
            <summary>
            Gets or sets the localized unit symbols.
            </summary>
            <value>The localized unit symbols.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBox.OnParseFailure">
            <summary>
            Gets or sets the parse failure resolution.
            </summary>
            <value>The parse failure resolution.</value>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.GetZeroValue">
            <summary>
            Gets the zero value.
            </summary>
            <returns>The zero value.</returns>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Is called when content in this editing control changes.
            </summary>
            <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</param>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> event (using the provided arguments).
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.CoerceValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the value to stay within the limits.
            </summary>
            <param name="element">The element.</param>
            <param name="baseValue">The base value.</param>
            <returns>
            The coerced value.
            </returns>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.OnRepresentationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the representation is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.ConvertTextToValue">
            <summary>
            Converts the text to value.
            </summary>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox.ConvertValueToText">
            <summary>
            Converts the value to text.
            </summary>
        </member>
        <member name="T:Fusion.UI.FormattedTextBox`2">
            <summary>
            An abstract base class for formatted text boxes.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TFormatter">The type of the formatter.</typeparam>
        </member>
        <member name="P:Fusion.UI.FormattedTextBox`2.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBox`2.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBox`2.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:Fusion.UI.FormattedTextBox`2.Formatter">
            <summary>
            Gets or sets the value formatter.
            </summary>
            <value>The value formatter.</value>
        </member>
        <member name="M:Fusion.UI.FormattedTextBox`2.GetZeroValue">
            <summary>
            Gets the zero value.
            </summary>
            <returns>The zero value.</returns>
        </member>
        <member name="T:Fusion.UI.DoubleTextBox">
            <summary>
            <see cref="T:System.Double"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.DoubleTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.DoubleTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.DoubleTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.DoubleTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.Int32TextBox">
            <summary>
            <see cref="T:System.Int32"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.Int32TextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.Int32TextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.Int32TextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.Int32TextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.LengthTextBox">
            <summary>
            <see cref="T:Fusion.Length"/> text box.
            </summary>
        </member>
        <member name="M:Fusion.UI.LengthTextBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.LengthTextBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.LengthTextBox.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.UI.LengthTextBox.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.SearchBox">
            <summary>
            Search box.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.CommandProperty">
            <summary>
            The Command property.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.CommandParameterProperty">
            <summary>
            The CommandParameter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.DelayProperty">
            <summary>
            The Delay property.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.IsDropDownOpenProperty">
            <summary>
            The IsDropDownOpen property.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.ItemsSourceProperty">
            <summary>
            The ItemsSource property.
            </summary>
        </member>
        <member name="E:Fusion.UI.SearchBox.DropDownOpened">
            <summary>
            Occurs when the drop-down list of the combo box opens.
            </summary>
        </member>
        <member name="E:Fusion.UI.SearchBox.DropDownClosed">
            <summary>
            Occurs when the drop-down list of the combo box closes.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.DropDownItems">
            <summary>
            Drop down items name.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.delayTimer">
            <summary>
            The delay timer.
            </summary>
        </member>
        <member name="F:Fusion.UI.SearchBox.dropDownItems">
            <summary>
            The drop down items.
            </summary>
        </member>
        <member name="M:Fusion.UI.SearchBox.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.SearchBox" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.SearchBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.SearchBox" /> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.SearchBox.Command">
            <summary>
            Gets or sets the Command value.
            </summary>
            <value>The Command value.</value>
        </member>
        <member name="P:Fusion.UI.SearchBox.CommandParameter">
            <summary>
            Gets or sets the CommandParameter value.
            </summary>
            <value>The CommandParameter value.</value>
        </member>
        <member name="P:Fusion.UI.SearchBox.Delay">
            <summary>
            Gets or sets the Delay value.
            </summary>
            <value>The Delay value.</value>
        </member>
        <member name="P:Fusion.UI.SearchBox.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the suggestion drop down is open.
            </summary>
            <value>True if the suggestion drop down is open, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.SearchBox.ItemsSource">
            <summary>
            Gets or sets the ItemsSource value.
            </summary>
            <value>The ItemsSource value.</value>
        </member>
        <member name="P:Fusion.UI.SearchBox.SelectedIndex">
            <summary>
            Gets or sets the index of the selected drop down item.
            </summary>
            <value>The index of the selected drop down item.</value>
        </member>
        <member name="P:Fusion.UI.SearchBox.HasItems">
            <summary>
            Gets a value indicating whether the drop down has any items.
            </summary>
            <value>True if the drop down has any items, otherwise false.</value>
        </member>
        <member name="M:Fusion.UI.SearchBox.OnApplyTemplate">
            <summary>
            Is called when a control template is applied.
            </summary>
        </member>
        <member name="M:Fusion.UI.SearchBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Fusion.UI.SearchBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Is called when content in this editing control changes.
            </summary>
            <param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</param>
        </member>
        <member name="M:Fusion.UI.SearchBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.
            </summary>
            <param name="e">Provides data about the event.</param>
        </member>
        <member name="M:Fusion.UI.SearchBox.OnPick(System.Object)">
            <summary>
            Called when a value has been picked from the drop down list.
            </summary>
            <param name="value">The picked value.</param>
        </member>
        <member name="M:Fusion.UI.SearchBox.Search">
            <summary>
            Performs the search.
            </summary>
        </member>
        <member name="M:Fusion.UI.SearchBox.OpenDropDown">
            <summary>
            Opens the drop down.
            </summary>
        </member>
        <member name="M:Fusion.UI.SearchBox.CloseDropDown">
            <summary>
            Closes the drop down.
            </summary>
        </member>
        <member name="M:Fusion.UI.SearchBox.FocusDropDown">
            <summary>
            Focuses the drop down.
            </summary>
        </member>
        <member name="T:Fusion.UI.ProgressView">
            <summary>
            Progress view.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.ProgressProperty">
            <summary>
            The Progress property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.TextProperty">
            <summary>
            The Text property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.ProgressPercentageProperty">
            <summary>
            The ProgressPercentage property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.CancelableProperty">
            <summary>
            The Cancelable property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.CommandProperty">
            <summary>
            The Command property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.CommandParameterProperty">
            <summary>
            The CommandParameter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.ValueProperty">
            <summary>
            The Value property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.IsIndeterminateProperty">
            <summary>
            The IsIndeterminate property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.ProgressPercentageToAngle1Converter">
            <summary>
            The progress percentage to angle converter for the left side.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.ProgressPercentageToAngle2Converter">
            <summary>
            The progress percentage to angle converter for the right side.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.ValuePropertyKey">
            <summary>
            The Value property key.
            </summary>
        </member>
        <member name="F:Fusion.UI.ProgressView.IsIndeterminatePropertyKey">
            <summary>
            The IsIndeterminate property key.
            </summary>
        </member>
        <member name="M:Fusion.UI.ProgressView.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.ProgressView" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.ProgressView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ProgressView"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.ProgressView.Progress">
            <summary>
            Gets or sets the progress object.
            </summary>
            <value>The progress object.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.Text">
            <summary>
            Gets or sets the progress description.
            </summary>
            <value>The progress description.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.ProgressPercentage">
            <summary>
            Gets or sets the progress percentage.
            </summary>
            <value>The progress percentage.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.Cancelable">
            <summary>
            Gets or sets a value indicating whether the operation is cancelable.
            </summary>
            <value>True if the operation is cancelable, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.Command">
            <summary>
            Gets or sets the Command value.
            </summary>
            <value>The Command value.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.CommandParameter">
            <summary>
            Gets or sets the CommandParameter value.
            </summary>
            <value>The CommandParameter value.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.Value">
            <summary>
            Gets the progress value.
            </summary>
            <value>The progress value.</value>
        </member>
        <member name="P:Fusion.UI.ProgressView.IsIndeterminate">
            <summary>
            Gets a value indicating whether the progress is indeterminate.
            </summary>
            <value>True if the progress is indeterminate, otherwise false.</value>
        </member>
        <member name="M:Fusion.UI.ProgressView.OnProgressPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Progress property is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.ProgressView.CoerceValueProperty(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the progress property value.
            </summary>
            <param name="element">The element.</param>
            <param name="baseValue">The base value.</param>
            <returns>The coerced value.</returns>
        </member>
        <member name="M:Fusion.UI.ProgressView.ProgressPercentagePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ProgressPercentage property is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.ProgressView.OnProgressChanged(System.Object,Fusion.ProgressBase.Update)">
            <summary>
            Called when the progress is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="update">The progress update.</param>
        </member>
        <member name="T:Fusion.UI.ExtendedWebBrowser">
            <summary>
            Extended web browser control.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedWebBrowser.PartWebBrowser">
            <summary>
            Name constant for WebBrowser template part.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedWebBrowser.HomeProperty">
            <summary>
            The Home property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedWebBrowser.SourceProperty">
            <summary>
            The Source property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedWebBrowser.SuppressErrorsProperty">
            <summary>
            The SuppressErrors property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedWebBrowser.webBrowser">
            <summary>
            The web browser.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedWebBrowser.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.ExtendedWebBrowser"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.ExtendedWebBrowser.Source">
            <summary>
            Gets or sets the source URL.
            </summary>
            <value>The source URL.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedWebBrowser.Home">
            <summary>
            Gets or sets the home URL.
            </summary>
            <value>The home URL.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedWebBrowser.SuppressErrors">
            <summary>
            Gets or sets a value indicating whether or not suppress the errors. By default the errors are suppressed.
            </summary>
            <value>If true, the errors are suppressed.</value>
        </member>
        <member name="M:Fusion.UI.ExtendedWebBrowser.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedWebBrowser.SuppressErrorsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the SuppressErrors property is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.ExtendedWebBrowser.SourcePropertyChanged(System.Windows.DependencyObject,System.Object)">
            <summary>
            Called when the Source property is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="baseValue">The base value.</param>
            <returns>The base value unchanged.</returns>
        </member>
        <member name="M:Fusion.UI.ExtendedWebBrowser.ToggleSilentJsErrors">
            <summary>
            Toggles the silent JS errors.
            </summary>
        </member>
        <member name="M:Fusion.UI.ExtendedWebBrowser.Navigate(System.String)">
            <summary>
            Navigates to the URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="T:Fusion.UI.ColorPicker">
            <summary>
            ColorPicker view control.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ColorProperty">
            <summary>
            The Color property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementHueMonitor">
            <summary>
            Specifies the name of the hue monitor TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementHueTarget">
            <summary>
            Specifies the name of the hue target TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementHueSelector">
            <summary>
            Specifies the name of the hue selector TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementColorSample">
            <summary>
            Specifies the name of the color sample TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementColorSampleSelector">
            <summary>
            Specifies the name of the color sample selector TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementAlphaMonitor">
            <summary>
            Specifies the name of the alpha monitor TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementAlphaTarget">
            <summary>
            Specifies the name of the alpha target TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementAlphaSelector">
            <summary>
            Specifies the name of the alpha selector TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementSelectedColorView">
            <summary>
            Specifies the name of the selected color view TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.ElementInitialColorView">
            <summary>
            Specifies the name of the current color view TemplatePart.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.hue">
            <summary>
            The hue position in the slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.saturation">
            <summary>
            The saturation position in the slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.alpha">
            <summary>
            The alpha position in the slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.hueSlider">
            <summary>
            The hue slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.saturationSlider">
            <summary>
            The saturation slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.alphaSlider">
            <summary>
            The alpha slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.hueIndicator">
            <summary>
            The hue indicator in the hue slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.saturationIndicator">
            <summary>
            The saturation indicator in the slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.alphaIndicator">
            <summary>
            The alpha indicator in the slider.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.initialColorView">
            <summary>
            The current color view.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.selectedColorView">
            <summary>
            The selected color view.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.hueMouseCaptured">
            <summary>
            True if the mouse is captured in the hue slider, otherwise false.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.saturationMouseCaptured">
            <summary>
            True if the mouse is captured in the saturation slider, otherwise false.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.alphaMouseCaptured">
            <summary>
            True if the mouse is captured in the alpha slider, otherwise false.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.ColorPicker"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.ColorPicker.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="M:Fusion.UI.ColorPicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ColorPickerDialog control when the template is applied. 
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.OnColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Color property. changes.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.ColorPicker.DragSliders(System.Windows.Point)">
            <summary>
            Drags the sliders.
            </summary>
            <param name="point">The point on the slider.</param>
        </member>
        <member name="M:Fusion.UI.ColorPicker.CheckAllSliders">
            <summary>
            Checks all slider positions.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.HueChanged">
            <summary>
            Called when the hue is changed.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.SaturationChanged">
            <summary>
            Called when the saturation is changed.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.AlphaChanged">
            <summary>
            Called when the alpha is changed.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.SelectedColorChanged">
            <summary>
            Called when the selected color is changed.
            </summary>
        </member>
        <member name="T:Fusion.UI.ColorPicker.Hsv">
            <summary>
            A HSV value.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.Hsv.Min">
            <summary>
            Max value.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.Hsv.Max">
            <summary>
            Min value.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.Hsv.hue">
            <summary>
            The hue.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.Hsv.saturation">
            <summary>
            The saturation.
            </summary>
        </member>
        <member name="F:Fusion.UI.ColorPicker.Hsv.value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.Hsv.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ColorPicker.Hsv"/> class.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Fusion.UI.ColorPicker.Hsv.Hue">
            <summary>
            Gets the hue.
            </summary>
        </member>
        <member name="P:Fusion.UI.ColorPicker.Hsv.Saturation">
            <summary>
            Gets the saturation.
            </summary>
        </member>
        <member name="P:Fusion.UI.ColorPicker.Hsv.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Fusion.UI.ColorPicker.Hsv.GetColorFromPosition(System.Double)">
            <summary>
            Gets the color from position.
            </summary>
            <param name="position">The position.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Fusion.UI.ColorPicker.Hsv.ConvertHsvToRgb(System.Double,System.Double,System.Double)">
            <summary>
            Converts from Hue/Sat/Val (HSV) color space to Red/Green/Blue color space.
            </summary>
            <param name="h">The Hue value.</param>
            <param name="s">The Saturation value.</param>
            <param name="v">The Value value.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Fusion.UI.ColorPicker.Hsv.ConvertRgbToHsv(System.Windows.Media.Color)">
            <summary>
            Converts from the Red/Green/Blue color space to the Hue/Sat/Val (HSV) color space.
            </summary>
            <param name="c">The color to convert.</param>
            <returns>The converted color.</returns>
        </member>
        <member name="T:Fusion.UI.BorderGrip">
            <summary>
            <see cref="T:System.Windows.Controls.Border" /> grip control.
            </summary>
        </member>
        <member name="F:Fusion.UI.BorderGrip.CornerRadiusProperty">
            <summary>
            The CornerRadius property.
            </summary>
        </member>
        <member name="M:Fusion.UI.BorderGrip.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.BorderGrip"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.BorderGrip.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>The corner radius.</value>
        </member>
        <member name="T:Fusion.UI.Overlay">
            <summary>
            Overlay decorator.
            </summary>
            <remarks>
            This element creates a transparent window on top of the element. The window background is set with the <see cref="P:Fusion.UI.Overlay.Background"/> property
            and the content is set with the <see cref="P:Fusion.UI.Overlay.Content"/> property. The child element of the <see cref="T:Fusion.UI.Overlay"/> is displayed under the
            transparent window.
            <para/>
            All input events from the transparent window can be routed to the element by setting the <see cref="P:Fusion.UI.Overlay.RerouteAllInputs"/> to true. The
            inputs can also be rerouted to another element by setting the <see cref="P:Fusion.UI.Overlay.InputTarget"/> to the target element.
            <para/>
            By default, the transparent window cannot be focused. Set the <see cref="P:System.Windows.UIElement.Focusable"/> to true to allow the focus to be moved to the
            transparent window. Focus is needed mostly for elements that expect input from the keyboard, such as <see cref="T:System.Windows.Controls.TextBox"/>.
            <para/>
            The transparent window does not inherit all dependency properties and resources of the <see cref="T:Fusion.UI.Overlay"/> element. Certain commonly used
            properties are bound to the <see cref="T:Fusion.UI.Overlay"/> element, enabling most use cases. If needed, other properties can be bound manually using
            the normal data binding.
            <para/>
            The transparent window is not shown if the parent window cannot be located. This can happen if the element is hosted inside a native window.
            </remarks>
        </member>
        <member name="F:Fusion.UI.Overlay.UseManualVisibilityProperty">
            <summary>
            The UseManualVisibility property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.BackgroundProperty">
            <summary>
            The Background property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.ContentProperty">
            <summary>
            The Content property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.InputTargetProperty">
            <summary>
            The InputTarget property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.RerouteAllInputsProperty">
            <summary>
            The RerouteAllInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.RerouteTouchInputsProperty">
            <summary>
            The RerouteTouchInput property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.ReroutePreviewTouchInputsProperty">
            <summary>
            The RerouteTouchInput property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.RerouteStylusInputsProperty">
            <summary>
            The RerouteStylusInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.ReroutePreviewStylusInputsProperty">
            <summary>
            The ReroutePreviewStylusInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.RerouteManipulationInputsProperty">
            <summary>
            The RerouteManipulationInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.RerouteKeyInputsProperty">
            <summary>
            The RerouteKeyInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.ReroutePreviewKeyInputsProperty">
            <summary>
            The ReroutePreviewKeyInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.RerouteMouseInputsProperty">
            <summary>
            The RerouteMouseInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.ReroutePreviewMouseInputsProperty">
            <summary>
            The ReroutePreviewMouseInputs property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.IsOverlayWindowFocusedProperty">
            <summary>
            The IsOverlayWindowFocused property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.overlayWindow">
            <summary>
            The overlay window.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.owner">
            <summary>
            The owner window.
            </summary>
        </member>
        <member name="F:Fusion.UI.Overlay.ownerHwndSource">
            <summary>
            The owner window HwndSource.
            </summary>
        </member>
        <member name="M:Fusion.UI.Overlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.Overlay"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.Overlay.UseManualVisibility">
            <summary>
            Gets or sets a value indicating whether the overlay visibility should be manually controlled.
            The default value <c>false</c> lets Fusion to automatically synchronize the visibility according to the parent window.
            </summary>
            <value>
            <c>true</c> if the overlay visibility should be manually set from code; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusion.UI.Overlay.Background">
            <summary>
            Gets or sets the overlay background.
            </summary>
            <value>The overlay background.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.Content">
            <summary>
            Gets or sets the overlay content.
            </summary>
            <value>The overlay content.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.InputTarget">
            <summary>
            Gets or sets the overlay input target. If the input target is defined, all input events are rerouted to the target element. Otherwise the input events are rerouted to the <see cref="T:Fusion.UI.Overlay"/> element.
            </summary>
            <value>The overlay input target.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.RerouteAllInputs">
            <summary>
            Gets or sets a value indicating whether to reroute all input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.RerouteTouchInputs">
            <summary>
            Gets or sets a value indicating whether to reroute touch input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.ReroutePreviewTouchInputs">
            <summary>
            Gets or sets a value indicating whether to reroute touch preview input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.RerouteStylusInputs">
            <summary>
            Gets or sets a value indicating whether to reroute stylus input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.ReroutePreviewStylusInputs">
            <summary>
            Gets or sets a value indicating whether to reroute stylus preview input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.RerouteManipulationInputs">
            <summary>
            Gets or sets a value indicating whether to reroute manipulation input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.RerouteKeyInputs">
            <summary>
            Gets or sets a value indicating whether to reroute key input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.ReroutePreviewKeyInputs">
            <summary>
            Gets or sets a value indicating whether to reroute key preview input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.RerouteMouseInputs">
            <summary>
            Gets or sets a value indicating whether to reroute mouse input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.ReroutePreviewMouseInputs">
            <summary>
            Gets or sets a value indicating whether to reroute mouse preview input events.
            </summary>
            <value>True if the input rerouting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.IsOverlayWindowFocused">
            <summary>
            Gets or sets a value indicating whether the overlay window is focused.
            </summary>
            <value>True if the overlay window is focused, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.Overlay.Window">
            <summary>
            Gets the overlay window.
            </summary>
            <value>The overlay window.</value>
        </member>
        <member name="M:Fusion.UI.Overlay.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Window message handler hook.
            </summary>
            <param name="hWnd">The window handle of the hosted window.</param>
            <param name="msg">The message to act upon.</param>
            <param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
            <param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
            <param name="handled">A value that indicates whether the message was handled. Set the value to true if the message was handled; otherwise, false.</param>
            <returns>The appropriate return value depends on the particular message. See the message documentation details for the Win32 message being handled.</returns>
        </member>
        <member name="M:Fusion.UI.Overlay.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Owner window message handler hook.
            </summary>
            <param name="hWnd">The window handle of the hosted window.</param>
            <param name="msg">The message to act upon.</param>
            <param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
            <param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
            <param name="handled">A value that indicates whether the message was handled. Set the value to true if the message was handled; otherwise, false.</param>
            <returns>The appropriate return value depends on the particular message. See the message documentation details for the Win32 message being handled.</returns>
        </member>
        <member name="M:Fusion.UI.Overlay.RerouteEvent(System.Windows.RoutedEventArgs,System.Boolean)">
            <summary>
            Reroutes the event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> instance containing the event data.</param>
            <param name="reroutingEventIsAllowed">If set to <c>true</c> rerouting event is allowed.</param>
        </member>
        <member name="M:Fusion.UI.Overlay.UpdateOverlay(System.Object,System.EventArgs)">
            <summary>
            Updates the overlay.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.UI.Overlay.UpdateOverlayFocus">
            <summary>
            Updates the overlay focus.
            </summary>
        </member>
        <member name="M:Fusion.UI.Overlay.UpdateOverlayVisibility(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the overlay visibility.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Fusion.UI.Overlay.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.UI.Grip">
            <summary>
            An abstract base class for grip controls.
            </summary>
        </member>
        <member name="F:Fusion.UI.Grip.GripStyleProperty">
            <summary>
            The GripStyle property.
            </summary>
        </member>
        <member name="F:Fusion.UI.Grip.BevelEffectProperty">
            <summary>
            The BevelEffect property.
            </summary>
        </member>
        <member name="P:Fusion.UI.Grip.GripStyle">
            <summary>
            Gets or sets the grip style.
            </summary>
            <value>The grip style.</value>
        </member>
        <member name="P:Fusion.UI.Grip.BevelEffect">
            <summary>
            Gets or sets the bevel effect.
            </summary>
            <value>The bevel effect.</value>
        </member>
        <member name="T:Fusion.UI.GripStyle">
            <summary>
            Grip control styles.
            </summary>
        </member>
        <member name="F:Fusion.UI.GripStyle.Flat">
            <summary>
            Flat grip style.
            </summary>
        </member>
        <member name="F:Fusion.UI.GripStyle.Beveled">
            <summary>
            Beveled grip style.
            </summary>
        </member>
        <member name="T:Fusion.UI.PathGrip">
            <summary>
            <see cref="T:System.Windows.Shapes.Path"/> grip control.
            </summary>
        </member>
        <member name="F:Fusion.UI.PathGrip.DataProperty">
            <summary>
            The Data property.
            </summary>
        </member>
        <member name="F:Fusion.UI.PathGrip.StretchProperty">
            <summary>
            The Stretch property.
            </summary>
        </member>
        <member name="M:Fusion.UI.PathGrip.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.PathGrip"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.PathGrip.Data">
            <summary>
            Gets or sets the path geometry.
            </summary>
            <value>The path geometry.</value>
        </member>
        <member name="P:Fusion.UI.PathGrip.Stretch">
            <summary>
            Gets or sets the path stretch.
            </summary>
            <value>The path stretch.</value>
        </member>
        <member name="T:Fusion.UI.ResizeablePanel">
            <summary>
            Panel with a resize grip.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.ResizeEdgeProperty">
            <summary>
            The ResizeEdge property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.ResizeTabMarginProperty">
            <summary>
            The ResizeTabMargin property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.ResizeTabHorizontalAlignmentProperty">
            <summary>
            The ResizeTabHorizontalAlignment property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.ResizeTabVerticalAlignmentProperty">
            <summary>
            The ResizeTabVerticalAlignment property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.ResizeTabFillProperty">
            <summary>
            The ResizeTabFill property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.ResizeTabBackgroundProperty">
            <summary>
            The ResizeTabBackground property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ResizeablePanel.HideOnDoubleClickProperty">
            <summary>
            The HideOnDoubleClick property.
            </summary>
        </member>
        <member name="M:Fusion.UI.ResizeablePanel.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.ResizeablePanel"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.ResizeEdge">
            <summary>
            Gets or sets the resize edge.
            </summary>
            <value>
            The resize edge.
            </value>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.ResizeTabMargin">
            <summary>
            Gets or sets the resize tab margin.
            </summary>
            <value>
            The resize tab margin.
            </value>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.ResizeTabHorizontalAlignment">
            <summary>
            Gets or sets the resize tab horizontal alignment.
            </summary>
            <value>
            The resize tab horizontal alignment.
            </value>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.ResizeTabVerticalAlignment">
            <summary>
            Gets or sets the resize tab vertical alignment.
            </summary>
            <value>
            The resize tab vertical alignment.
            </value>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.ResizeTabFill">
            <summary>
            Gets or sets the resize tab fill brush.
            </summary>
            <value>
            The resize tab fill brush.
            </value>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.ResizeTabBackground">
            <summary>
            Gets or sets the resize tab background brush.
            </summary>
            <value>
            The resize tab background brush.
            </value>
        </member>
        <member name="P:Fusion.UI.ResizeablePanel.HideOnDoubleClick">
            <summary>
            Gets or sets a value indicating whether the panel is hidden on double click.
            </summary>
            <value>True if the panel is hidden on double click, otherwise false.</value>
        </member>
        <member name="M:Fusion.UI.ResizeablePanel.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="T:Fusion.UI.TabletModeLayout">
            <summary>
            Tablet mode layout element.
            </summary>
        </member>
        <member name="F:Fusion.UI.TabletModeLayout.ContentProperty">
            <summary>
            The Content property.
            </summary>
        </member>
        <member name="F:Fusion.UI.TabletModeLayout.TabletModeContentProperty">
            <summary>
            The TabletModeContent property.
            </summary>
        </member>
        <member name="F:Fusion.UI.TabletModeLayout.TabletModePaddingProperty">
            <summary>
            The TabletModePadding property.
            </summary>
        </member>
        <member name="F:Fusion.UI.TabletModeLayout.HasTabletModeContentProperty">
            <summary>
            The HasTabletModeContent property.
            </summary>
        </member>
        <member name="M:Fusion.UI.TabletModeLayout.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.TabletModeLayout"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.TabletModeLayout.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Fusion.UI.TabletModeLayout.TabletModeContent">
            <summary>
            Gets or sets the content in the tablet mode.
            </summary>
            <value>The content in the tablet mode.</value>
        </member>
        <member name="P:Fusion.UI.TabletModeLayout.HasTabletModeContent">
            <summary>
            Gets a value indicating whether the object has tablet mode content.
            </summary>
            <value>True if the object has tablet mode content, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.TabletModeLayout.TabletModePadding">
            <summary>
            Gets or sets the tablet mode padding.
            </summary>
            <value>The tablet mode padding.</value>
        </member>
        <member name="M:Fusion.UI.TabletModeLayout.OnTabledModeContentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the tabled mode content is changed.
            </summary>
            <param name="element">The element.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Fusion.UI.ValueConverter">
            <summary>
            Value converter factory.
            </summary>
        </member>
        <member name="M:Fusion.UI.ValueConverter.Create``2(System.Func{``0,``1})">
            <summary>
            Creates a value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
            <param name="convert">The converter delegate.</param>
            <returns>The value converter.</returns>
        </member>
        <member name="M:Fusion.UI.ValueConverter.Create``3(System.Func{``0,``1,``2})">
            <summary>
            Creates a value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TParameter">The type of the converter parameter.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
            <param name="convert">The converter delegate.</param>
            <returns>The value converter.</returns>
        </member>
        <member name="T:Fusion.UI.ValueConverter.Converter`2">
            <summary>
            Value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
        </member>
        <member name="F:Fusion.UI.ValueConverter.Converter`2.convert">
            <summary>
            The converter delegate.
            </summary>
        </member>
        <member name="M:Fusion.UI.ValueConverter.Converter`2.#ctor(System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ValueConverter.Converter`2"/> class.
            </summary>
            <param name="convert">The converter delegate.</param>
        </member>
        <member name="M:Fusion.UI.ValueConverter.Converter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ValueConverter.Converter`3">
            <summary>
            Value converter.
            </summary>
            <typeparam name="TSource">The type of the source value.</typeparam>
            <typeparam name="TParameter">The type of the converter parameter.</typeparam>
            <typeparam name="TTarget">The type of the target value.</typeparam>
        </member>
        <member name="F:Fusion.UI.ValueConverter.Converter`3.convert">
            <summary>
            The converter delegate.
            </summary>
        </member>
        <member name="M:Fusion.UI.ValueConverter.Converter`3.#ctor(System.Func{`0,`1,`2})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ValueConverter.Converter`3" /> class.
            </summary>
            <param name="convert">The converter delegate.</param>
        </member>
        <member name="M:Fusion.UI.ValueConverter.Converter`3.Convert(`0,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ExtendedCheckBox">
            <summary>
            Extended check box control.
            </summary>
            <example>
            <code lang="XAML" title="XAML - Example of ExtendedCheckBox">
            <![CDATA[
            <ui:ExtendedCheckBox CheckedCommand="{Binding SomeCommandProperty}" 
                                 CheckedCommandParameter="{Binding }"
                                 UnCheckedCommand="{Binding SomeCommandProperty}" 
                                 UnCheckedCommandParameter="{Binding }" /> ]]>
            </code>
            </example>
        </member>
        <member name="F:Fusion.UI.ExtendedCheckBox.CheckedGeometryProperty">
            <summary>
            CheckedGeometry dependency property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedCheckBox.UncheckedGeometryProperty">
            <summary>
            UncheckedGeometry dependency property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedCheckBox.CheckedCommandProperty">
            <summary>
            CheckedCommand dependency property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedCheckBox.CheckedCommandParameterProperty">
            <summary>
            CheckedCommandParameter dependency property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedCheckBox.UncheckedCommandProperty">
            <summary>
            UncheckedCommand dependency property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ExtendedCheckBox.UncheckedCommandParameterProperty">
            <summary>
            UncheckedCommandParameter dependency property.
            </summary>
        </member>
        <member name="P:Fusion.UI.ExtendedCheckBox.CheckedGeometry">
            <summary>
            Gets or sets the geometry to show when the check box is checked.
            </summary>
            <value>The geometry to show when the check box is checked.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedCheckBox.UncheckedGeometry">
            <summary>
            Gets or sets the geometry to show when the check box is not checked.
            </summary>
            <value>The geometry to show when the check box is not checked.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedCheckBox.CheckedCommand">
            <summary>
            Gets or sets the command to execute when the check box is checked.
            </summary>
            <value>The command to execute when the check box is checked.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedCheckBox.CheckedCommandParameter">
            <summary>
            Gets or sets the parameter for the <see cref="P:Fusion.UI.ExtendedCheckBox.CheckedCommand"/>.
            </summary>
            <value>The parameter for the <see cref="P:Fusion.UI.ExtendedCheckBox.CheckedCommand"/>.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedCheckBox.UncheckedCommand">
            <summary>
            Gets or sets the command to execute when the check box is unchecked.
            </summary>
            <value>The command to execute when the check box is unchecked.</value>
        </member>
        <member name="P:Fusion.UI.ExtendedCheckBox.UncheckedCommandParameter">
            <summary>
            Gets or sets the parameter for the <see name="UncheckedCommand"/>.
            </summary>
            <value>The parameter for the <see name="UncheckedCommand"/>.</value>
        </member>
        <member name="M:Fusion.UI.ExtendedCheckBox.OnClick">
            <summary>
            Called when a control is clicked by the mouse or the keyboard.
            </summary>
        </member>
        <member name="T:Fusion.UI.PublishedView">
            <summary>
            Host control for a published view.
            </summary>
        </member>
        <member name="F:Fusion.UI.PublishedView.ViewNameProperty">
            <summary>
            The view name property.
            </summary>
        </member>
        <member name="F:Fusion.UI.PublishedView.ViewParameterProperty">
            <summary>
            The view parameter property.
            </summary>
        </member>
        <member name="F:Fusion.UI.PublishedView.DefaultContentProperty">
            <summary>
            The default content property.
            </summary>
        </member>
        <member name="F:Fusion.UI.PublishedView.ContentPresenterPart">
            <summary>
            The content presenter part name.
            </summary>
        </member>
        <member name="M:Fusion.UI.PublishedView.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.UI.PublishedView"/> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.PublishedView.DefaultViewParameter">
            <summary>
            Gets the default view parameter.
            </summary>
            <value>The default view parameter.</value>
        </member>
        <member name="P:Fusion.UI.PublishedView.ViewName">
            <summary>
            Gets or sets the view name.
            </summary>
            <value>
            The view name.
            </value>
        </member>
        <member name="P:Fusion.UI.PublishedView.ViewParameter">
            <summary>
            Gets or sets the view parameter.
            </summary>
            <value>
            The view parameter.
            </value>
        </member>
        <member name="P:Fusion.UI.PublishedView.DefaultContent">
            <summary>
            Gets or sets the default content.
            </summary>
            <value>
            The default content.
            </value>
        </member>
        <member name="M:Fusion.UI.PublishedView.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Fusion.UI.PublishedView.OnViewChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the view is changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Fusion.UI.PublishedView.UpdateView">
            <summary>
            Updates the view.
            </summary>
        </member>
        <member name="T:Fusion.UI.ValidatorCallback">
            <summary>
            Validator callback delegate type.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="cultureInfo">The culture info.</param>
            <returns>
            True if the value passes validation, otherwise false.
            </returns>
        </member>
        <member name="T:Fusion.UI.Validator">
            <summary>
            User input validator.
            </summary>
            <example>
            <![CDATA[
            internal static class ValidationRules
            {
                public static ValidatorCallback NoNumbersAllowed = (value, cultureInfo) =>
                {
                    return (value as string).All(c => c < '0' || c > '9');
                };
            }
            -------------------------------------------------------------------------------------
            <TextBox>
              <Validation.ErrorTemplate>
                <ControlTemplate>
                  <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Margin="3" Foreground="Red" VerticalAlignment="Center" Text="{Binding Path=/ErrorContent}" />
                    <Border BorderBrush="Red" BorderThickness="2" CornerRadius="3" Padding="2">
                      <!-- Setting the ErrorToolTip overrides the existing tool tip. Use only if needed. -->
                      <AdornedElementPlaceholder ui:Validator.ErrorToolTip="{Binding Path=/ErrorContent}" />
                    </Border>
                  </DockPanel>
                </ControlTemplate>
              </Validation.ErrorTemplate>
              <TextBox.Text>
                <Binding Path="ValidatedText" UpdateSourceTrigger="PropertyChanged">
                  <Binding.ValidationRules>
                    <ui:Validator Callback="{x:Static local:ValidationRules.NoNumbersAllowed}" ErrorMessageOrResourceKey="No numbers, please." />
                  </Binding.ValidationRules>
                </Binding>
              </TextBox.Text>
            </TextBox>
            ]]>
            </example>
        </member>
        <member name="F:Fusion.UI.Validator.ErrorToolTipProperty">
            <summary>
            ErrorToolTip property.
            </summary>
        </member>
        <member name="P:Fusion.UI.Validator.IsNonEmptyString">
            <summary>
            Gets the validation rule that requires that the value is a non-empty string.
            </summary>
            <value>The validation rule.</value>
        </member>
        <member name="P:Fusion.UI.Validator.IsNonNumericString">
            <summary>
            Gets the validation rule that requires that the value is a non-numeric string.
            </summary>
            <value>The validation rule.</value>
        </member>
        <member name="P:Fusion.UI.Validator.IsGreaterThanZero">
            <summary>
            Gets the validation rule that requires that the value is greater than zero.
            </summary>
            <value>The validation rule.</value>
        </member>
        <member name="P:Fusion.UI.Validator.IsDateTime">
            <summary>
            Gets the validation rule that requires that the value is a <see cref="T:System.DateTime" />.
            </summary>
            <value>The validation rule.</value>
        </member>
        <member name="P:Fusion.UI.Validator.Callback">
            <summary>
            Gets or sets the validator callback.
            </summary>
            <value>
            The validator callback.
            </value>
        </member>
        <member name="P:Fusion.UI.Validator.ErrorMessageOrResourceKey">
            <summary>
            Gets or sets the error message or the resource key for the localized error message.
            </summary>
            <value>
            The error message or the resource key for the localized error message.
            </value>
        </member>
        <member name="M:Fusion.UI.Validator.GetErrorToolTip(System.Windows.Controls.AdornedElementPlaceholder)">
            <summary>
            Gets the ErrorToolTip property value.
            </summary>
            <param name="element">The element.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Fusion.UI.Validator.SetErrorToolTip(System.Windows.Controls.AdornedElementPlaceholder,System.Object)">
            <summary>
            Sets the ErrorToolTip property value.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Fusion.UI.Validator.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validates the user input.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult" /> object.
            </returns>
        </member>
        <member name="T:Fusion.UI.AppExtension">
            <summary>
            Data binding XAML markup extension that uses the current application instance as the data source.
            </summary>
            <example>
            In a view (XAML)
            <code>
                Text="{ui:App Name}"
            </code>
            <para/>
            The same as above, using the built in data binding (XAML)
            <code>
                Text="{Binding Path=Name, Source={x:Static ui:App.Current}}"
            </code>
            </example>
        </member>
        <member name="M:Fusion.UI.AppExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.AppExtension" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.AppExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.AppExtension" /> class.
            </summary>
            <param name="path">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</param>
        </member>
        <member name="T:Fusion.UI.CommandHandlerExtension">
            <summary>
            Command handler XAML markup extension.
            </summary>
            <summary>
            Command handler XAML markup extension.
            </summary>
        </member>
        <member name="M:Fusion.UI.CommandHandlerExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.CommandHandlerExtension" /> class.
            </summary>
        </member>
        <member name="M:Fusion.UI.CommandHandlerExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.CommandHandlerExtension" /> class.
            </summary>
            <param name="commandName">The command name.</param>
        </member>
        <member name="P:Fusion.UI.CommandHandlerExtension.CommandName">
            <summary>
            Gets or sets the command name.
            </summary>
            <value>The command name.</value>
        </member>
        <member name="M:Fusion.UI.CommandHandlerExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="M:Fusion.UI.CommandHandlerExtension.System#Windows#Data#IMultiValueConverter#Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.</returns>
        </member>
        <member name="M:Fusion.UI.CommandHandlerExtension.System#Windows#Data#IMultiValueConverter#ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
        </member>
        <member name="T:Fusion.UI.CredentialDialog">
            <summary>
            Standard Windows credential dialog.
            </summary>
        </member>
        <member name="P:Fusion.UI.CredentialDialog.Title">
            <summary>
            Gets or sets the dialog title.
            </summary>
            <value>The dialog title.</value>
        </member>
        <member name="P:Fusion.UI.CredentialDialog.Text">
            <summary>
            Gets or sets the dialog text.
            </summary>
            <value>The dialog text.</value>
        </member>
        <member name="M:Fusion.UI.CredentialDialog.ShowDialog(System.Windows.Window)">
            <summary>
            Shows the credential dialog.
            </summary>
            <param name="ownerWindow">The owner window.</param>
            <returns>The provided credential or null if no credential was provided.</returns>
        </member>
        <member name="M:Fusion.UI.CredentialDialog.ShowDialog(System.IntPtr)">
            <summary>
            Shows the credential dialog.
            </summary>
            <param name="ownerWindow">The owner window.</param>
            <returns>The provided credential or null if no credential was provided.</returns>
        </member>
        <member name="T:Fusion.UI.CredentialDialog.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.UI.OpenFolderDialog">
            <summary>
            Standard Windows open folder dialog.
            </summary>
            <example>
            The following example shows how to use the <see cref="T:Fusion.UI.OpenFolderDialog" />.
            <code>
            public string SelectFolder()
            {
                var dialog = new OpenFolderDialog
                {
                    SelectedPath = @"c:\files",
                    Title = "Please select a folder"
                };
            
                if (dialog.ShowDialog())
                {
                    return dialog.SelectedFolder;
                }
            
                return string.Empty;
            }
            </code>
            </example>
        </member>
        <member name="P:Fusion.UI.OpenFolderDialog.SelectedFolder">
            <summary>
            Gets or sets the selected folder path.
            </summary>
            <value>
            The selected folder path.
            </value>
        </member>
        <member name="P:Fusion.UI.OpenFolderDialog.Title">
            <summary>
            Gets or sets the window title.
            </summary>
            <value>
            The window title.
            </value>
        </member>
        <member name="M:Fusion.UI.OpenFolderDialog.ShowDialog(System.Windows.Window)">
            <summary>
            Shows the open folder dialog.
            </summary>
            <param name="ownerWindow">The owner window.</param>
            <returns>True if the folder was selected, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UI.OpenFolderDialog.ShowDialog(System.IntPtr)">
            <summary>
            Shows the open folder dialog.
            </summary>
            <param name="ownerWindow">The owner window.</param>
            <returns>True if the folder was selected, otherwise false.</returns>
        </member>
        <member name="T:Fusion.UI.OpenFolderDialog.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="M:Fusion.UI.OpenFolderDialog.Win32.ShowOpenFolderDialog(System.IntPtr,System.String,System.String)">
            <summary>
            Creates the folder dialog.
            </summary>
            <param name="windowOwnerHandle">The window owner handle.</param>
            <param name="initialFolder">The initial folder.</param>
            <param name="title">The title.</param>
            <returns>
            In case of selection, the selected folder; otherwise null.
            </returns>
        </member>
        <member name="T:Fusion.UI.TimeSpanToStringConverter">
            <summary>
            The TimeSpanToStringConverter converts a <see cref="T:System.TimeSpan"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.TimeSpanToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.TimeSpanToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.DateTimeToStringConverter">
            <summary>
            The DateTimeToStringConverter converts a <see cref="T:System.DateTime"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.DateTimeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.DateTimeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.Int32ToStringConverter">
            <summary>
            Converts an integer to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.Int32ToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.Int32ToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.DoubleToStringConverter">
            <summary>
            The DoubleToStringConverter converts a double to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.DoubleToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.DoubleToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.TwoWayValueConverter`2">
            <summary>
            An abstract base class for two-way value converters.
            </summary>
            <example>The following example shows how to use the TwoWayValueConverter abstract class.
            <code lang="C#" title="C# - Example ValueConverter">
            <![CDATA[
                [ValueConversion(typeof(double), typeof(string))]
                public class TwoWayConverter : TwoWayValueConverter<double, string>
                {
                    public override string Convert(double value, object parameter, CultureInfo culture)
                    {
                        var convertedValue = this.DoSomeConversions();
                        return convertedValue;
                    }
                    
                    public override double ConvertBack(string value, object parameter, CultureInfo culture)
                    {
                        var convertedValue = this.DoReverseConversions();
                        return convertedValue;
                    }
                }]]>
            </code>
            </example>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TTarget">The target type.</typeparam>
        </member>
        <member name="M:Fusion.UI.TwoWayValueConverter`2.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides the value converter.
            </summary>
            <param name="serviceProvider">This argument is not used.</param>
            <returns>Reference to this instance.</returns>
        </member>
        <member name="M:Fusion.UI.TwoWayValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.TwoWayValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the target to the source.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.TwoWayValueConverter`2.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Binding parameter.</param>
            <param name="culture">Culture to use in conversion.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:Fusion.UI.TwoWayValueConverter`2.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the target to the source.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Binding parameter.</param>
            <param name="culture">Culture to use in conversion.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:Fusion.UI.TwoWayValueConverter`2.CastFailed(System.Object,System.Type,System.Exception)">
            <summary>
            Called when the type conversion fails.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedType">The expected type.</param>
            <param name="exception">The conversion exception.</param>
        </member>
        <member name="T:Fusion.UI.ValueConverter`2">
            <summary>
            An abstract base class for value converters.
            </summary>
            <example>The following example shows how to use the ValueConverter abstract class.
            <code lang="C#" title="C# - Example ValueConverter">
            <![CDATA[
                [ValueConversion(typeof(double), typeof(string))]
                public class SourceToTargetConverter : ValueConverter<double, string>
                {
                    public override string Convert(double value, object parameter, CultureInfo culture)
                    {
                        var convertedValue = this.DoSomeConversion();
                        return convertedValue;
                    }
                }]]>
            </code>
            </example>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TTarget">The target type.</typeparam>
        </member>
        <member name="M:Fusion.UI.ValueConverter`2.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides the value converter.
            </summary>
            <param name="serviceProvider">This argument is not used.</param>
            <returns>Reference to this instance.</returns>
        </member>
        <member name="M:Fusion.UI.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture to use in conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.ValueConverter`2.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the source to the target.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Binding parameter.</param>
            <param name="culture">Culture to use in conversion.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:Fusion.UI.ValueConverter`2.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from the target to the source.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Binding parameter.</param>
            <param name="culture">Culture to use in conversion.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Fusion.UI.VolumeToStringConverter">
            <summary>
            The VolumeToStringConverter converts a <see cref="T:Fusion.Volume"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.VolumeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.VolumeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.MassToStringConverter">
            <summary>
            The MassToStringConverter converts a <see cref="T:Fusion.Mass"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.MassToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.MassToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.LengthToStringConverter">
            <summary>
            The LengthToStringConverter converts a <see cref="T:Fusion.Length"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.LengthToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.LengthToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.AreaToStringConverter">
            <summary>
            The AreaToStringConverter converts an <see cref="T:Fusion.Area"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.AreaToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.AreaToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.AngleToStringConverter">
            <summary>
            The AngleToStringConverter converts an <see cref="T:Fusion.Angle"/> to string.
            </summary>
        </member>
        <member name="M:Fusion.UI.AngleToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Fusion.UI.AngleToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Fusion.UI.ModelView">
            <summary>
            Building information model view.
            </summary>
            <summary>
            Building information model view.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.DefaultMaterial">
            <summary>
            The default material.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.SelectedMaterial">
            <summary>
            The material for selected objects.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.GrayedMaterial">
            <summary>
            The material for grayed objects.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.GhostedMaterial">
            <summary>
            The material for ghosted objects.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.materialGroups">
            <summary>
            The material groups.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.program">
            <summary>
            The GPU program.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.markerProgram">
            <summary>
            The GPU program for the origin marker.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.marker">
            <summary>
            The origin marker buffer.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.markerTexture">
            <summary>
            The origin marker texture.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.prepared">
            <summary>
            Indicates whether the buffer groups have been prepared.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.previous">
            <summary>
            The previous camera parameters.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.current">
            <summary>
            The current camera parameters.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.cameraMatrix">
            <summary>
            The camera matrix.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.projectionMatrix">
            <summary>
            The projection matrix.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.clipPlanes">
            <summary>
            The clip planes.
            </summary>
        </member>
        <member name="P:Fusion.UI.ModelView.Camera">
            <summary>
            Gets or sets the camera parameters.
            </summary>
            <value>The camera parameters.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.Model">
            <summary>
            Gets or sets the current model.
            </summary>
            <value>The current model.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.EntityStates">
            <summary>
            Gets or sets the building entity states.
            </summary>
            <value>The building entity states.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.IsPickingEnabled">
            <summary>
            Gets or sets a value indicating whether the picking is enabled.
            </summary>
            <value>True if the picking is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.EntityPickingCallback">
            <summary>
            Gets or sets the delegate to the entity picking callback.
            </summary>
            <value>The delegate to the entity picking callback.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.EntityPickedCallback">
            <summary>
            Gets or sets the delegate to the entity picked callback.
            </summary>
            <value>The delegate to the entity picked callback.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.ClipPlane0">
            <summary>
            Gets or sets the clip plane value.
            </summary>
            <value>The clip plane value.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.ClipPlane1">
            <summary>
            Gets or sets the clip plane value.
            </summary>
            <value>The clip plane value.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.ClipPlane2">
            <summary>
            Gets or sets the clip plane value.
            </summary>
            <value>The clip plane value.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.BufferCount">
            <summary>
            Gets the number of GPU buffers managed by the view.
            </summary>
            <value>The GPU buffer count.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.BufferGroupCount">
            <summary>
            Gets the number of GPU buffer groups managed by the view.
            </summary>
            <value>The GPU buffer group count.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.VertexCount">
            <summary>
            Gets the total vertex count.
            </summary>
            <value>The total vertex count.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.IndexCount">
            <summary>
            Gets the total index count.
            </summary>
            <value>The total index count.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.FaceCount">
            <summary>
            Gets the total face count.
            </summary>
            <value>The total face count.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.Size">
            <summary>
            Gets the total size.
            </summary>
            <value>The total size.</value>
        </member>
        <member name="P:Fusion.UI.ModelView.DebuggerDisplay">
            <summary>
            Gets the debugger display string.
            </summary>
            <value>The debugger display string.</value>
        </member>
        <member name="M:Fusion.UI.ModelView.OnSelect(Fusion.Float2)">
            <summary>
            Called when the user selects a point from the view.
            </summary>
            <param name="point">The selected point.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnPanning(Fusion.Float2)">
            <summary>
            Called when the user starts panning the view.
            </summary>
            <param name="point">The starting point.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnPanning(Fusion.Float2,Fusion.Float2)">
            <summary>
            Called when the user pans the view.
            </summary>
            <param name="point">The starting point.</param>
            <param name="delta">The delta from the starting point.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnRotating(Fusion.Float2)">
            <summary>
            Called when the user starts rotating the view.
            </summary>
            <param name="point">The starting point.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnRotating(Fusion.Float2,Fusion.Float2)">
            <summary>
            Called when the user rotates the view.
            </summary>
            <param name="point">The starting point.</param>
            <param name="delta">The delta from the starting point.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnZooming(Fusion.Float2)">
            <summary>
            Called when the user starts zooming the view.
            </summary>
            <param name="point">The center point.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnZooming(Fusion.Float2,System.Single)">
            <summary>
            Called when the user zooms the view.
            </summary>
            <param name="point">The center point.</param>
            <param name="delta">The delta in scale.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.Initialize">
            <summary>
            Initializes the view.
            </summary>
        </member>
        <member name="M:Fusion.UI.ModelView.Draw">
            <summary>
            Draws the view.
            </summary>
        </member>
        <member name="M:Fusion.UI.ModelView.Draw(System.Linq.IGrouping{Fusion.Models.Material,Fusion.Graphics.GPU.Geometry})">
            <summary>
            Draws the material group.
            </summary>
            <param name="group">The material group.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnModelChanged(Fusion.Models.Model)">
            <summary>
            Called when the <see cref="P:Fusion.UI.ModelView.Model"/> property is changed.
            </summary>
            <param name="model">The new model.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnEntityStatesChanged(Fusion.Models.EntityStates,Fusion.Models.EntityStates)">
            <summary>
            Called when the <see cref="P:Fusion.UI.ModelView.EntityStates"/> property is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnEntityStateChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the entity state is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.OnCameraChanged">
            <summary>
            Called when the <see cref="P:Fusion.UI.ModelView.Camera"/> property is changed.
            </summary>
        </member>
        <member name="M:Fusion.UI.ModelView.UpdateCamera">
            <summary>
            Copies the camera parameters to the <see cref="P:Fusion.UI.ModelView.Camera"/> property.
            </summary>
        </member>
        <member name="M:Fusion.UI.ModelView.PickEntity(Fusion.Float2)">
            <summary>
            Picks a building entity.
            </summary>
            <param name="point">The point in the view.</param>
            <returns>The picked building entity or null if nothing was picked.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.PickGeometry(Fusion.Float2)">
            <summary>
            Picks a geometry point.
            </summary>
            <param name="point">The point in the view.</param>
            <returns>The picked geometry point or null if nothing was picked.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.PickCameraLocation(Fusion.Float2)">
            <summary>
            Picks the camera location from the geometry.
            </summary>
            <param name="point">The point in the view.</param>
        </member>
        <member name="M:Fusion.UI.ModelView.GetRayFromCameraToViewPoint(Fusion.Float2)">
            <summary>
            Gets the ray pointing from the camera to the specified view position.
            </summary>
            <param name="point">The view position.</param>
            <returns>The ray point to the view position.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.GetMaterialGroups">
            <summary>
            Gets the material groups.
            </summary>
            <returns>The material groups.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.Upload(System.Collections.Generic.IEnumerable{Fusion.Models.Geometry})">
            <summary>
            Uploads the building entity geometries to the GPU.
            </summary>
            <param name="geometries">The building entity geometries.</param>
            <returns>The GPU geometries.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.Upload(System.Collections.Generic.IEnumerable{Fusion.Models.Geometry},System.Int32,System.Int32)">
            <summary>
            Uploads the building entity geometries to the GPU.
            </summary>
            <param name="geometries">The building entity geometries.</param>
            <param name="points">The total number of points in the geometries.</param>
            <param name="faces">The total number of faces in the geometries.</param>
            <returns>The GPU geometry.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.GetMaterial(Fusion.Models.Geometry)">
            <summary>
            Gets the material for the building entity geometry.
            </summary>
            <param name="geometry">The building entity geometry.</param>
            <returns>The material.</returns>
        </member>
        <member name="T:Fusion.UI.ModelView.Grouping`2">
            <summary>
            A group of elements.
            </summary>
            <typeparam name="TKey">The grouping key type.</typeparam>
            <typeparam name="TElement">The group element type.</typeparam>
        </member>
        <member name="F:Fusion.UI.ModelView.Grouping`2.elements">
            <summary>
            The grouped elements.
            </summary>
        </member>
        <member name="M:Fusion.UI.ModelView.Grouping`2.#ctor(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.ModelView.Grouping`2"/> class.
            </summary>
            <param name="key">The grouping key.</param>
            <param name="elements">The grouped elements.</param>
        </member>
        <member name="P:Fusion.UI.ModelView.Grouping`2.Key">
            <summary>
            Gets the grouping key.
            </summary>
            <value>The grouping key.</value>
        </member>
        <member name="M:Fusion.UI.ModelView.Grouping`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.UI.ModelView.Grouping`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="F:Fusion.UI.ModelView.CameraProperty">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.Camera"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.ModelProperty">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.Model"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.EntityStatesProperty">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.EntityStates"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.IsPickingEnabledProperty">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.IsPickingEnabled"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.EntityPickingCallbackProperty">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.EntityPickingCallback"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.EntityPickedCallbackProperty">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.EntityPickedCallback"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.ClipPlane0Property">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.ClipPlane0"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.ClipPlane1Property">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.ClipPlane1"/> property.
            </summary>
        </member>
        <member name="F:Fusion.UI.ModelView.ClipPlane2Property">
            <summary>
            The <see cref="P:Fusion.UI.ModelView.ClipPlane2"/> property.
            </summary>
        </member>
        <member name="T:Fusion.UI.WebView">
            <summary>
            Web view.
            </summary>
            <summary>
            Web view.
            </summary>
        </member>
        <member name="M:Fusion.UI.WebView.SplitMessage(System.String)">
            <summary>
            Splits the encoded message into arguments.
            </summary>
            <param name="message">The encoded message.</param>
            <returns>The message arguments.</returns>
        </member>
        <member name="M:Fusion.UI.WebView.SplitToken(System.String,System.Boolean@)">
            <summary>
            Splits the dispatch token.
            </summary>
            <param name="token">The dispatch token.</param>
            <param name="hasCallback">The output parameter that indicates whether the token has a callback slot.</param>
            <returns>The method name.</returns>
        </member>
        <member name="M:Fusion.UI.WebView.GenerateScriptInterface(System.String,System.String)">
            <summary>
            Generates the script interface.
            </summary>
            <param name="argumentsToArrayFunction">The function to convert the function arguments to an array.</param>
            <param name="invokeFusionMethodFunction">The function to invoke the native Fusion method.</param>
            <returns>The script interface definition.</returns>
        </member>
        <member name="F:Fusion.UI.WebView.scriptInterface">
            <summary>
            The script interface declaration.
            </summary>
        </member>
        <member name="F:Fusion.UI.WebView.webBrowser">
            <summary>
            The native web browser.
            </summary>
        </member>
        <member name="M:Fusion.UI.WebView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.WebView" /> class.
            </summary>
        </member>
        <member name="P:Fusion.UI.WebView.CanGoBack">
            <summary>
            Gets whether the web view can navigate to the previous page.
            </summary>
            <value>True if the web view can navigate backwards, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.WebView.CanGoForward">
            <summary>
            Gets whether the web view can navigate to the next page.
            </summary>
            <value>True if the web view can navigate forwards, otherwise false.</value>
        </member>
        <member name="P:Fusion.UI.WebView.Source">
            <summary>
            Gets the source URI.
            </summary>
            <value>The source URI.</value>
        </member>
        <member name="P:Fusion.UI.WebView.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
            <value>The visual children count.</value>
        </member>
        <member name="P:Fusion.UI.WebView.LogicalChildren">
            <summary>
            Gets an enumerator for logical child elements of this element.
            </summary>
            <value>The logical children.</value>
        </member>
        <member name="M:Fusion.UI.WebView.Evaluate(System.String)">
            <summary>
            Evaluates the script.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="M:Fusion.UI.WebView.GoBack">
            <summary>
            Navigates to the previous page.
            </summary>
        </member>
        <member name="M:Fusion.UI.WebView.GoForward">
            <summary>
            Navigates to the next page.
            </summary>
        </member>
        <member name="M:Fusion.UI.WebView.Navigate(System.String)">
            <summary>
            Navigates to a page.
            </summary>
            <param name="uri">The page URI.</param>
        </member>
        <member name="M:Fusion.UI.WebView.LoadHtml(System.String)">
            <summary>
            Loads a page from a HTML string.
            </summary>
            <param name="html">The HTML string.</param>
        </member>
        <member name="M:Fusion.UI.WebView.LoadFile(System.String)">
            <summary>
            Loads a page from a file.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="M:Fusion.UI.WebView.GetVisualChild(System.Int32)">
            <summary>
            Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">The zero-based index of the requested child element in the collection.</param>
            <returns>The requested child element. This should not return null; if the provided index is out of range, an exception is thrown.</returns>
        </member>
        <member name="M:Fusion.UI.WebView.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Fusion.UI.WebView.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="T:Fusion.UI.WebView.ScriptAdapter">
            <summary>
            The script adapter.
            </summary>
        </member>
        <member name="F:Fusion.UI.WebView.ScriptAdapter.viewModel">
            <summary>
            The view model.
            </summary>
        </member>
        <member name="M:Fusion.UI.WebView.ScriptAdapter.#ctor(Fusion.WebViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UI.WebView.ScriptAdapter" /> class.
            </summary>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Fusion.UI.WebView.ScriptAdapter.InvokeMethod(System.String)">
            <summary>
            Invokes a method from a script.
            </summary>
            <param name="message">The encoded message.</param>
        </member>
        <member name="T:Fusion.NavigationViewModel">
            <summary>
            An abstract base class for navigation page view models. View model acts as a connection between the model (data) and the view (user interface elements).
            </summary>
        </member>
        <member name="P:Fusion.NavigationViewModel.Navigation">
            <summary>
            Gets or sets the navigation controller.
            </summary>
            <value>The navigation controller.</value>
        </member>
        <member name="M:Fusion.NavigationViewModel.NavigatingHere">
            <summary>
            Called when the navigation controller is navigating to this page.
            </summary>
        </member>
        <member name="M:Fusion.NavigationViewModel.NavigatingBack">
            <summary>
            Called when the navigation controller is navigating back to the previous page.
            </summary>
            <returns>True if navigation is allowed to continue, otherwise false.</returns>
        </member>
        <member name="T:Fusion.IHostUI">
            <summary>
            Host UI.
            </summary>
            <summary>
            Host UI.
            </summary>
        </member>
        <member name="M:Fusion.IHostUI.ShowMessageDialog(System.String,System.String,System.String,System.String[],System.String,System.String)">
            <summary>
            Shows a message dialog.
            </summary>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <param name="icon">The icon geometry resource key, or null for no icon.</param>
            <param name="buttons">The texts or resource keys for the buttons.</param>
            <param name="defaultButton">The text or resource key for the default button.</param>
            <param name="cancelButton">The text or resource key for the cancel button.</param>
            <returns>The selected button or null if the dialog was closed with other means.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowProgressDialog(System.Action{Fusion.Progress})">
            <summary>
            Shows a modal progress dialog.
            </summary>
            <param name="backgroundOperation">The action to invoke in a background thread.</param>
            <returns>True if the operation was completed successfully, false if the operation was canceled.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowDiagnosticWindow">
            <summary>
            Shows the diagnostic window.
            </summary>
        </member>
        <member name="P:Fusion.IHostUI.Help">
            <summary>
            Gets or sets the help provider.
            </summary>
            <value>The help provider.</value>
        </member>
        <member name="P:Fusion.IHostUI.Resources">
            <summary>
            Gets the host UI resources.
            </summary>
            <value>The host UI resources.</value>
        </member>
        <member name="P:Fusion.IHostUI.PublishedViews">
            <summary>
            Gets the published views.
            </summary>
            <value>The published views.</value>
        </member>
        <member name="P:Fusion.IHostUI.FullScreenMode">
            <summary>
            Gets or sets a value indicating whether the full screen mode is enabled.
            </summary>
            <value>True if the full screen mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.IHostUI.TabletMode">
            <summary>
            Gets or sets a value indicating whether the tablet mode is enabled.
            </summary>
            <value>True if the tablet mode is enabled, otherwise false.</value>
        </member>
        <member name="M:Fusion.IHostUI.RegisterKeyboardShortcut(System.String,System.Action)">
            <summary>
            Registers a keyboard shortcut.
            </summary>
            <param name="gesture">The gesture. May include modifiers such as "Control+Shift+A".</param>
            <param name="action">The action to perform when the keyboard shortcut is pressed.</param>
        </member>
        <member name="M:Fusion.IHostUI.ShowWindow(System.String,System.Object)">
            <summary>
            Shows a child window.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The window controller.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowDialog(System.String,System.Object)">
            <summary>
            Shows a modal dialog.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
            <returns>The dialog result or null if the dialog did not provide any result.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowOpenFilePickerDialog(System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowOpenFilePickerDialog(System.String,System.String,System.String,System.String[],System.Boolean,Fusion.FileType[])">
            <summary>
            Shows a modal open file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="allowMultiple">Indicates whether the dialog allows multiple files to be selected.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file paths or an empty array if no files were selected.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowSaveFilePickerDialog(System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowSaveFilePickerDialog(System.String,System.String,System.String,System.String[],Fusion.FileType[])">
            <summary>
            Shows a modal save file picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFileName">The initial file name. Null indicates the default name.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <param name="customPlaces">The custom places paths. Null indicates no custom places.</param>
            <param name="fileTypes">The supported file types.</param>
            <returns>The selected file path or null if no file was selected.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowFolderPickerDialog(System.String,System.String)">
            <summary>
            Shows a modal folder picker dialog.
            </summary>
            <param name="caption">The dialog caption.</param>
            <param name="initialFolder">The initial folder path. Null indicates the default folder.</param>
            <returns>The selected folder path or null if no folder was selected.</returns>
        </member>
        <member name="M:Fusion.IHostUI.ShowCredentialDialog(System.String,System.String)">
            <summary>
            Shows a modal credential dialog.
            </summary>
            <param name="text">The message text.</param>
            <param name="caption">The dialog caption.</param>
            <returns>The session credential or null if the credential was not supplied.</returns>
        </member>
        <member name="M:Fusion.IHostUI.RegisterCommandObserver(Fusion.ICommandObserver)">
            <summary>
            Registers a command observer.
            </summary>
            <param name="commandObserver">The command observer.</param>
        </member>
        <member name="M:Fusion.IHostUI.GetResource(System.Object)">
            <summary>
            Gets the resource.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The resource or null if the resource was not found.</returns>
        </member>
        <member name="M:Fusion.IHostUI.GetLocalizedText(System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>The localized text or the default fall back value if the localized text was not found.</returns>
        </member>
        <member name="T:Fusion.AccessControlToken">
            <summary>
            An abstract base class for access control tokens.
            </summary>
        </member>
        <member name="M:Fusion.AccessControlToken.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AccessControlToken"/> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
            <param name="expires">The expiry timestamp in UTC or null if the token does not expire.</param>
        </member>
        <member name="P:Fusion.AccessControlToken.Principal">
            <summary>
            Gets the identifier of the user, group or organization associated with the token.
            </summary>
            <value>The principal identifier or null if the token is not associated with any principal.</value>
        </member>
        <member name="P:Fusion.AccessControlToken.Expires">
            <summary>
            Gets the expiry timestamp for the token.
            </summary>
            <value>The expiry timestamp in UTC or null if the token does not expire.</value>
        </member>
        <member name="M:Fusion.AccessControlToken.Dispose">
            <summary>
            Invalidates the token to prevent further use.
            </summary>
        </member>
        <member name="M:Fusion.AccessControlToken.IsValidFor(System.TimeSpan)">
            <summary>
            Determines whether the token is valid for the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns>True if the token is valid for the duration, otherwise false.</returns>
        </member>
        <member name="M:Fusion.AccessControlToken.ToString">
            <summary>
            Returns a string representation of the token.
            </summary>
            <returns>The string representation of the token.</returns>
        </member>
        <member name="T:Fusion.Angle">
            <summary>
            An angle.
            </summary>
        </member>
        <member name="F:Fusion.Angle.Zero">
            <summary>
            The zero angle.
            </summary>
        </member>
        <member name="F:Fusion.Angle.radians">
            <summary>
            The angle in radians.
            </summary>
        </member>
        <member name="M:Fusion.Angle.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Angle" /> struct.
            </summary>
            <param name="degrees">The angle in degrees.</param>
        </member>
        <member name="P:Fusion.Angle.Degrees">
            <summary>
            Gets the angle in degrees.
            </summary>
            <value>The angle in degrees.</value>
        </member>
        <member name="P:Fusion.Angle.Radians">
            <summary>
            Gets the angle in radians.
            </summary>
            <value>The angle in radians.</value>
        </member>
        <member name="P:Fusion.Angle.Sin">
            <summary>
            Gets the sine of the angle.
            </summary>
            <value>The sine of the angle.</value>
        </member>
        <member name="P:Fusion.Angle.Cos">
            <summary>
            Gets the cosine of the angle.
            </summary>
            <value>The cosine of the angle.</value>
        </member>
        <member name="P:Fusion.Angle.Tan">
            <summary>
            Gets the tangent of the angle.
            </summary>
            <value>The tangent of the angle.</value>
        </member>
        <member name="M:Fusion.Angle.op_Equality(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Inequality(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_LessThan(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_LessThanOrEqual(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_GreaterThan(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_GreaterThanOrEqual(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_UnaryPlus(Fusion.Angle)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Addition(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_UnaryNegation(Fusion.Angle)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Subtraction(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Multiply(System.Double,Fusion.Angle)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Multiply(Fusion.Angle,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Division(Fusion.Angle,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Division(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Modulus(Fusion.Angle,Fusion.Angle)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.op_Implicit(System.Double)~Fusion.Angle">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Angle.Acos(System.Double)">
            <summary>
            Returns the angle whose cosine is the specified number.
            </summary>
            <param name="cos">The cosine of the angle.</param>
            <returns>The angle.</returns>
        </member>
        <member name="M:Fusion.Angle.Asin(System.Double)">
            <summary>
            Returns the angle whose sine is the specified number.
            </summary>
            <param name="sin">The sine of the angle.</param>
            <returns>The angle.</returns>
        </member>
        <member name="M:Fusion.Angle.Atan(System.Double)">
            <summary>
            Returns the angle whose tangent is the specified number.
            </summary>
            <param name="tan">The tangent of the angle.</param>
            <returns>The angle.</returns>
        </member>
        <member name="M:Fusion.Angle.Atan(System.Double,System.Double)">
            <summary>
            Returns the angle whose tangent is the quotient of the two numbers.
            </summary>
            <param name="y">The Y coordinate.</param>
            <param name="x">The X coordinate.</param>
            <returns>The angle.</returns>
        </member>
        <member name="M:Fusion.Angle.FromRadians(System.Double)">
            <summary>
            Returns an angle from the value in radians.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle.</returns>
        </member>
        <member name="M:Fusion.Angle.IsInfinity(Fusion.Angle)">
            <summary>
            Determines whether the angle represents an infinity.
            </summary>
            <param name="value">The angle.</param>
            <returns>True if the angle represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Angle.IsPositiveInfinity(Fusion.Angle)">
            <summary>
            Determines whether the angle represents a positive infinity.
            </summary>
            <param name="value">The angle.</param>
            <returns>True if the angle represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Angle.IsNegativeInfinity(Fusion.Angle)">
            <summary>
            Determines whether the angle represents a negative infinity.
            </summary>
            <param name="value">The angle.</param>
            <returns>True if the angle represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Angle.IsNaN(Fusion.Angle)">
            <summary>
            Determines whether the angle represents a value that is not a number.
            </summary>
            <param name="value">The angle.</param>
            <returns>True if the angle represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Angle.Abs(Fusion.Angle)">
            <summary>
            Returns the absolute value the angle.
            </summary>
            <param name="value">The angle.</param>
            <returns>The absolute value the angle.</returns>
        </member>
        <member name="M:Fusion.Angle.Max(Fusion.Angle,Fusion.Angle)">
            <summary>
            Returns the maximum value the two angles.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value the two angles.</returns>
        </member>
        <member name="M:Fusion.Angle.Min(Fusion.Angle,Fusion.Angle)">
            <summary>
            Returns the minimum value the two angles.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value the two angles.</returns>
        </member>
        <member name="M:Fusion.Angle.Round(Fusion.Angle,Fusion.Angle,Fusion.RoundingMode)">
            <summary>
            Returns the angle rounded to the specified precision unit.
            </summary>
            <param name="angle">The angle.</param>
            <param name="precision">The precision unit.</param>
            <param name="roundingMode">The rounding mode.</param>
            <returns>The rounded angle.</returns>
        </member>
        <member name="M:Fusion.Angle.Sign(Fusion.Angle)">
            <summary>
            Returns the sign of the angle.
            </summary>
            <param name="value">The angle.</param>
            <returns>The sign of the angle.</returns>
        </member>
        <member name="M:Fusion.Angle.ToDegrees(System.Double)">
            <summary>
            Converts the angle in radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
        </member>
        <member name="M:Fusion.Angle.ToRadians(System.Double)">
            <summary>
            Converts the angle in degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
        </member>
        <member name="M:Fusion.Angle.To(Fusion.AngleUnit)">
            <summary>
            To the specified unit.
            </summary>
            <param name="unit">The unit.</param>
            <returns>The value in <paramref name="unit"/>.</returns>
        </member>
        <member name="M:Fusion.Angle.CompareTo(System.Object)">
            <summary>
            Compares the angle to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Angle" />.</exception>
        </member>
        <member name="M:Fusion.Angle.CompareTo(Fusion.Angle)">
            <summary>
            Compares the two angles.
            </summary>
            <param name="other">The other angle.</param>
            <returns>Integer value that indicates the relative order of the two angles.</returns>
        </member>
        <member name="M:Fusion.Angle.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Angle.Equals(Fusion.Angle)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Angle.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Angle.Near(Fusion.Angle,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Angle.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Angle.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.AngleUnit">
            <summary>
            Angle units.
            </summary>
        </member>
        <member name="F:Fusion.AngleUnit.Degrees">
            <summary>
            Degrees angle unit.
            </summary>
        </member>
        <member name="F:Fusion.AngleUnit.Radians">
            <summary>
            Radians angle unit.
            </summary>
        </member>
        <member name="T:Fusion.AuthenticationResponse">
            <summary>
            Authentication response.
            </summary>
        </member>
        <member name="M:Fusion.AuthenticationResponse.#ctor(Fusion.AuthenticationResult,Fusion.AuthenticationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthenticationResponse"/> class.
            </summary>
            <param name="result">The authentication result.</param>
            <param name="authenticationToken">The authentication token or null if the authentication failed.</param>
        </member>
        <member name="M:Fusion.AuthenticationResponse.#ctor(Fusion.AuthenticationResult,Fusion.AuthenticationToken,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthenticationResponse" /> class.
            </summary>
            <param name="result">The authentication result.</param>
            <param name="authenticationToken">The authentication token or null if the authentication failed.</param>
            <param name="responseText">The human readable representation of the authentication response.</param>
        </member>
        <member name="P:Fusion.AuthenticationResponse.Result">
            <summary>
            Gets the authentication result.
            </summary>
            <value>The authentication result.</value>
        </member>
        <member name="P:Fusion.AuthenticationResponse.Token">
            <summary>
            Gets the authentication token.
            </summary>
            <value>The authentication token or null if the authentication failed.</value>
        </member>
        <member name="P:Fusion.AuthenticationResponse.ResponseText">
            <summary>
            Gets the human readable representation of the authentication response.
            </summary>
            <value>The response text.</value>
        </member>
        <member name="T:Fusion.AuthenticationResult">
            <summary>
            Authentication results.
            </summary>
        </member>
        <member name="F:Fusion.AuthenticationResult.Success">
            <summary>
            Authentication was successful.
            </summary>
        </member>
        <member name="F:Fusion.AuthenticationResult.Timeout">
            <summary>
            The operation timed out.
            </summary>
        </member>
        <member name="F:Fusion.AuthenticationResult.InvalidCredential">
            <summary>
            The user credential was invalid.
            </summary>
        </member>
        <member name="F:Fusion.AuthenticationResult.ExpiredCredential">
            <summary>
            The user credential has expired.
            </summary>
        </member>
        <member name="T:Fusion.AuthenticationToken">
            <summary>
            An abstract base class for authentication tokens.
            </summary>
            <example>
            <code><![CDATA[
            if (token.IsValidFor(TimeSpan.FromMinutes(15))
            {
                // valid authentication for the next 15 minutes
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Fusion.AuthenticationToken.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthenticationToken" /> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
            <param name="expires">The expiry timestamp in UTC or null if the token does not expire.</param>
        </member>
        <member name="T:Fusion.AuthorizationAvailableResponse">
            <summary>
            Authorization available response.
            </summary>
        </member>
        <member name="M:Fusion.AuthorizationAvailableResponse.#ctor(System.String,Fusion.AuthorizationResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthorizationAvailableResponse"/> class.
            </summary>
            <param name="action">The authorized action.</param>
            <param name="result">The authorization result.</param>
        </member>
        <member name="M:Fusion.AuthorizationAvailableResponse.#ctor(System.String,Fusion.AuthorizationResult,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthorizationAvailableResponse" /> class.
            </summary>
            <param name="action">The authorized action.</param>
            <param name="result">The authorization result.</param>
            <param name="responseText">The human readable representation of the authorization response.</param>
        </member>
        <member name="P:Fusion.AuthorizationAvailableResponse.Action">
            <summary>
            Gets the authorization action.
            </summary>
            <value>The authorized action.</value>
        </member>
        <member name="P:Fusion.AuthorizationAvailableResponse.Result">
            <summary>
            Gets the authorization result.
            </summary>
            <value>The authorization result.</value>
        </member>
        <member name="P:Fusion.AuthorizationAvailableResponse.ResponseText">
            <summary>
            Gets the human readable representation of the authorization response.
            </summary>
            <value>The response text.</value>
        </member>
        <member name="T:Fusion.AuthorizationResponse">
            <summary>
            Authorization response.
            </summary>
        </member>
        <member name="M:Fusion.AuthorizationResponse.#ctor(Fusion.AuthorizationResult,Fusion.AuthorizationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthorizationResponse"/> class.
            </summary>
            <param name="result">The authorization result.</param>
            <param name="authorizationToken">The authorization token or null if the authorization failed.</param>
        </member>
        <member name="M:Fusion.AuthorizationResponse.#ctor(Fusion.AuthorizationResult,Fusion.AuthorizationToken,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthorizationResponse" /> class.
            </summary>
            <param name="result">The authorization result.</param>
            <param name="authorizationToken">The authorization token or null if the authorization failed.</param>
            <param name="responseText">The human readable representation of the authorization response.</param>
        </member>
        <member name="P:Fusion.AuthorizationResponse.Result">
            <summary>
            Gets the authorization result.
            </summary>
            <value>The authorization result.</value>
        </member>
        <member name="P:Fusion.AuthorizationResponse.Token">
            <summary>
            Gets the authorization token.
            </summary>
            <value>The authorization token or null if the authorization failed.</value>
        </member>
        <member name="P:Fusion.AuthorizationResponse.ResponseText">
            <summary>
            Gets the human readable representation of the authorization response.
            </summary>
            <value>The response text.</value>
        </member>
        <member name="T:Fusion.AuthorizationResult">
            <summary>
            Authorization results.
            </summary>
        </member>
        <member name="F:Fusion.AuthorizationResult.Success">
            <summary>
            Authorization was successful.
            </summary>
        </member>
        <member name="F:Fusion.AuthorizationResult.Timeout">
            <summary>
            The operation timed out.
            </summary>
        </member>
        <member name="F:Fusion.AuthorizationResult.AccessDenied">
            <summary>
            The access was denied.
            </summary>
        </member>
        <member name="F:Fusion.AuthorizationResult.AccessExpired">
            <summary>
            The access has expired.
            </summary>
        </member>
        <member name="T:Fusion.AuthorizationToken">
            <summary>
            An abstract base class for authorization tokens.
            </summary>
            <example>
            <code><![CDATA[
            if (token.IsValidFor("CreateUser", TimeSpan.FromMinutes(15))
            {
                // valid authorization to create a new user for the next 15 minutes
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Fusion.AuthorizationToken.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.AuthorizationToken" /> class.
            </summary>
            <param name="principal">The identifier of the principal associated with the token or null if the token is not associated with any principal.</param>
            <param name="expires">The expiry timestamp in UTC or null if the token does not expire.</param>
            <param name="renewableUntil">The last allowed token renewal timestamp or null if the token can be renewed forever.</param>
            <param name="action">The authorized action.</param>
        </member>
        <member name="P:Fusion.AuthorizationToken.RenewableUntil">
            <summary>
            Gets the last allowed token renewal timestamp.
            </summary>
            <value>The last allowed token renewal timestamp or null if the token can be renewed forever.</value>
        </member>
        <member name="P:Fusion.AuthorizationToken.Action">
            <summary>
            Gets the authorized action.
            </summary>
        </member>
        <member name="T:Fusion.BindingSource">
            <summary>
            An abstract base class for objects that can be used as a source for data binding.
            </summary>
            <example>
            <code>
            <![CDATA[
            public class MyBindingSource : BindingSource
            {
                // Text property backing field.
                private string _text = "default text";
                
                // Text property.
                public string Text
                {
                    get { return _text; }
                    set { SetValue(ref _text, value); }
                }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="E:Fusion.BindingSource.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Fusion.BindingSource.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Fusion.BindingSource.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property name. If not specified, defaults to the caller member name.</param>
        </member>
        <member name="M:Fusion.BindingSource.RaisePropertyChanged(System.String,System.String,System.String[])">
            <summary>
            Raises the <see cref="E:Fusion.BindingSource.PropertyChanged"/> event.
            </summary>
            <param name="propertyName1">The first property name.</param>
            <param name="propertyName2">The second property name.</param>
            <param name="propertyNames">The other property names.</param>
        </member>
        <member name="M:Fusion.BindingSource.SetValue``1(``0@,``0,System.String)">
            <summary>
            Sets the property value. Raises the <see cref="E:Fusion.BindingSource.PropertyChanged" /> event, if needed.
            </summary>
            <typeparam name="T">The type of the property value.</typeparam>
            <param name="field">The property backing field.</param>
            <param name="value">The new property value.</param>
            <param name="propertyName">The property name. If not specified, defaults to the caller member name.</param>
            <returns>True if the property value was modified, otherwise false.</returns>
        </member>
        <member name="T:Fusion.BufferedTraceListener">
            <summary>
            A trace listener that stores the trace events into a circular buffer.
            </summary>
        </member>
        <member name="F:Fusion.BufferedTraceListener.rawEventBuffer">
            <summary>
            The raw events buffer.
            </summary>
        </member>
        <member name="F:Fusion.BufferedTraceListener.rawEventBuilder">
            <summary>
            The raw event builder.
            </summary>
        </member>
        <member name="M:Fusion.BufferedTraceListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.BufferedTraceListener" /> class.
            </summary>
        </member>
        <member name="P:Fusion.BufferedTraceListener.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="P:Fusion.BufferedTraceListener.IsThreadSafe">
            <summary>
            Gets a value indicating whether the trace listener is thread safe.
            </summary>
            <value>True is thread safe, otherwise false.</value>
        </member>
        <member name="M:Fusion.BufferedTraceListener.Write(System.String)">
            <summary>
            When overridden in a derived class, writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Fusion.BufferedTraceListener.WriteLine(System.String)">
            <summary>
            When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Fusion.BufferedTraceListener.Take(System.Int32)">
            <summary>
            Takes the specified amount of items.
            </summary>
            <param name="count">The amount of items to take.</param>
            <returns>A collection of raw events.</returns>
        </member>
        <member name="T:Fusion.Camera">
            <summary>
            A camera.
            </summary>
        </member>
        <member name="F:Fusion.Camera.Position">
            <summary>
            The absolute position.
            </summary>
        </member>
        <member name="F:Fusion.Camera.Offset">
            <summary>
            The relative offset from the position after the rotation.
            </summary>
        </member>
        <member name="F:Fusion.Camera.Pitch">
            <summary>
            The pitch (vertical rotation) angle.
            </summary>
        </member>
        <member name="F:Fusion.Camera.Yaw">
            <summary>
            The yaw (horizontal rotation) angle.
            </summary>
        </member>
        <member name="F:Fusion.Camera.FieldOfView">
            <summary>
            The vertical view angle. Value greater than zero produces perspective projection, value less than or equal to zero produces orthographic projection.
            </summary>
        </member>
        <member name="F:Fusion.Camera.ScaleFactor">
            <summary>
            The view scale factor. The recommended value is 1 for perspective projection and 100 for orthographic projection.
            </summary>
        </member>
        <member name="M:Fusion.Camera.#ctor(Fusion.Float3,Fusion.Float3,Fusion.Angle,Fusion.Angle,Fusion.Angle,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Camera"/> struct.
            </summary>
            <param name="position">The absolute position.</param>
            <param name="offset">The relative offset from the position after the rotation.</param>
            <param name="pitch">The pitch angle.</param>
            <param name="yaw">The yaw angle.</param>
            <param name="fieldOfView">The vertical view angle. Value greater than zero produces perspective projection, value less than or equal to zero produces orthographic projection.</param>
            <param name="scaleFactor">The view scale factor. The recommended value is 1 for perspective projection and 100 for orthographic projection.</param>
        </member>
        <member name="P:Fusion.Camera.IsPerspective">
            <summary>
            Gets a value indicating whether the camera is rendered in perspective (True) mode or orthogonal (False).
            </summary>
            <value>True the camera is rendered in perspective, otherwise false.</value>
        </member>
        <member name="M:Fusion.Camera.op_Equality(Fusion.Camera,Fusion.Camera)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Camera.op_Inequality(Fusion.Camera,Fusion.Camera)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Camera.Interpolate(Fusion.Camera,Fusion.Camera,System.Single)">
            <summary>
            Returns the interpolated values between the two cameras.
            </summary>
            <param name="a">The first camera.</param>
            <param name="b">The second camera.</param>
            <param name="t">The interpolation value, in range from 0 to 1.</param>
            <returns>The interpolated camera values.</returns>
        </member>
        <member name="M:Fusion.Camera.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Camera.Equals(Fusion.Camera)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Camera.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Camera.ToMatrix">
            <summary>
            Returns the camera transformation as an affine transformation matrix.
            </summary>
            <returns>The affine transformation matrix.</returns>
        </member>
        <member name="M:Fusion.Camera.Near(Fusion.Camera,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the values are near to each other, otherwise false.</returns>
            <remarks>Will not take into account the field of view property.</remarks>
        </member>
        <member name="T:Fusion.Command">
            <summary>
            <see cref="T:System.Windows.Input.ICommand" /> implementation.
            </summary>
        </member>
        <member name="F:Fusion.Command.execute">
            <summary>
            The delegate to a method that is invoked on Execute.
            </summary>
        </member>
        <member name="F:Fusion.Command.canExecute">
            <summary>
            The delegate to a method that is invoked on CanExecute.
            </summary>
        </member>
        <member name="M:Fusion.Command.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Command" /> class.
            </summary>
            <param name="execute">The delegate to a method that is invoked on Execute.</param>
        </member>
        <member name="M:Fusion.Command.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Command" /> class.
            </summary>
            <param name="execute">The delegate to a method that is invoked on Execute.</param>
            <param name="canExecute">The delegate to a method that is invoked on CanExecute.</param>
        </member>
        <member name="M:Fusion.Command.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Command" /> class.
            </summary>
            <param name="execute">The delegate to a method that is invoked on Execute.</param>
        </member>
        <member name="M:Fusion.Command.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Command" /> class.
            </summary>
            <param name="execute">The delegate to a method that is invoked on Execute.</param>
            <param name="canExecute">The delegate to a method that is invoked on CanExecute.</param>
        </member>
        <member name="E:Fusion.Command.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Fusion.Command.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:Fusion.Command.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Fusion.Command.ChangeCanExecute">
            <summary>
            Raises the <see cref="E:Fusion.Command.CanExecuteChanged" /> event.
            </summary>
        </member>
        <member name="T:Fusion.CommandHandler">
            <summary>
            A base class for command handler implementations.
            </summary>
        </member>
        <member name="F:Fusion.CommandHandler.CommandHandlerProperty">
            <summary>
            The CommandHandler property.
            </summary>
        </member>
        <member name="M:Fusion.CommandHandler.#ctor(Fusion.ViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.CommandHandler" /> class.
            </summary>
            <param name="target">The target object.</param>
        </member>
        <member name="P:Fusion.CommandHandler.Target">
            <summary>
            Gets the target object.
            </summary>
            <value>The target object.</value>
        </member>
        <member name="M:Fusion.CommandHandler.GetCommandHandler(System.Windows.DependencyObject)">
            <summary>
            Gets the command handler.
            </summary>
            <param name="element">The element.</param>
            <returns>The command handler.</returns>
        </member>
        <member name="M:Fusion.CommandHandler.SetCommandHandler(System.Windows.DependencyObject,Fusion.CommandHandler)">
            <summary>
            Sets the command handler.
            </summary>
            <param name="element">The element.</param>
            <param name="commandHandler">The command handler.</param>
        </member>
        <member name="M:Fusion.CommandHandler.GetCommand(System.String)">
            <summary>
            Gets the specified command.
            </summary>
            <param name="commandName">The command name.</param>
            <returns>The command object or null if the command was not found.</returns>
        </member>
        <member name="M:Fusion.CommandHandler.OnHandlerMissing(System.String)">
            <summary>
            Called when a missing handler is detected.
            </summary>
            <param name="commandName">The command name.</param>
        </member>
        <member name="M:Fusion.CommandHandler.OnExecute(System.String,System.Object,System.Action{System.Object},Fusion.CommandHandlerAttribute)">
            <summary>
            Called when a command is executed.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
            <param name="handlerMethod">The command handler method.</param>
            <param name="attribute">The command handler metadata attribute.</param>
        </member>
        <member name="M:Fusion.CommandHandler.OnExecuting(System.String,System.Object)">
            <summary>
            Called when a command is executing.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.CommandHandler.OnExecuted(System.String,System.Object)">
            <summary>
            Called when a command has been executed.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.CommandHandler.OnException(System.String,System.Object,System.Exception)">
            <summary>
            Called when a command caused an unhandled exception.
            </summary>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
            <param name="exception">The unhandled exception.</param>
            <returns>True if the exception was handled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.CommandHandler.CreateDelegate(System.Reflection.MethodInfo)">
            <summary>
            Creates the command action delegate.
            </summary>
            <param name="method">The method information.</param>
            <returns>The command action delegate or null if the method does not match the signature.</returns>
        </member>
        <member name="M:Fusion.CommandHandler.CreateDelegate``1(System.Reflection.MethodInfo)">
            <summary>
            Creates the command action delegate.
            </summary>
            <typeparam name="TDelegate">The delegate type.</typeparam>
            <param name="method">The method information.</param>
            <returns>The command action delegate or null if the method does not match the signature.</returns>
        </member>
        <member name="T:Fusion.CommandHandlerAttribute">
            <summary>
            Indicates that the annotated method is a command handler. The method signature must match: <c>public void CommandName(object parameter)</c>.
            </summary>
            <example>
            In a view model (C#)
            <code>
                [CommandHandler]
                public void Example(object parameter)
                {
                }
            </code>
            <para/>
            In a view (XAML)
            <code>
                Command="{ui:CommandHandler Example}"
            </code>
            </example>
        </member>
        <member name="M:Fusion.CommandHandlerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.CommandHandlerAttribute"/> class.
            </summary>
        </member>
        <member name="P:Fusion.CommandHandlerAttribute.MeasurePerformance">
            <summary>
            Gets or sets a value indicating whether the command performance is measured. The default value is True.
            </summary>
            <value>True if the command performance is measured, otherwise false.</value>
        </member>
        <member name="T:Fusion.Command`1">
            <summary>
            Generic <see cref="T:System.Windows.Input.ICommand" /> implementation.
            </summary>
            <typeparam name="T">The command parameter type.</typeparam>
        </member>
        <member name="M:Fusion.Command`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Command`1" /> class.
            </summary>
            <param name="execute">The delegate to a method that is invoked on Execute.</param>
        </member>
        <member name="M:Fusion.Command`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Command`1" /> class.
            </summary>
            <param name="execute">The delegate to a method that is invoked on Execute.</param>
            <param name="canExecute">The delegate to a method that is invoked on CanExecute.</param>
        </member>
        <member name="M:Fusion.Command`1.Convert(System.Action{`0})">
            <summary>
            Converts the generic delegate to a general delegate.
            </summary>
            <param name="execute">The delegate to convert.</param>
            <returns>The converted delegate.</returns>
        </member>
        <member name="M:Fusion.Command`1.Convert(System.Func{`0,System.Boolean})">
            <summary>
            Converts the generic delegate to a general delegate.
            </summary>
            <param name="canExecute">The delegate to convert.</param>
            <returns>The converted delegate.</returns>
        </member>
        <member name="T:Fusion.Data.Query.QueryExtensions">
            <summary>
            Simple query methods.
            </summary>
        </member>
        <member name="F:Fusion.Data.Query.QueryExtensions.CachedQueries">
            <summary>
            The cached queries.
            </summary>
        </member>
        <member name="F:Fusion.Data.Query.QueryExtensions.ColumnToValue">
            <summary>
            The column-to-value mappings.
            </summary>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``2(Fusion.Data.Sqlite,System.String,System.Func{``0,``1},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``3(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``4(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``5(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``6(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4,``5},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="T5">The fifth column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``7(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="T5">The fifth column type.</typeparam>
            <typeparam name="T6">The sixth column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``8(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="T5">The fifth column type.</typeparam>
            <typeparam name="T6">The sixth column type.</typeparam>
            <typeparam name="T7">The seventh column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``9(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="T5">The fifth column type.</typeparam>
            <typeparam name="T6">The sixth column type.</typeparam>
            <typeparam name="T7">The seventh column type.</typeparam>
            <typeparam name="T8">The eight column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``10(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="T5">The fifth column type.</typeparam>
            <typeparam name="T6">The sixth column type.</typeparam>
            <typeparam name="T7">The seventh column type.</typeparam>
            <typeparam name="T8">The eight column type.</typeparam>
            <typeparam name="T9">The ninth column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``11(Fusion.Data.Sqlite,System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T1">The first column type.</typeparam>
            <typeparam name="T2">The second column type.</typeparam>
            <typeparam name="T3">The third column type.</typeparam>
            <typeparam name="T4">The fourth column type.</typeparam>
            <typeparam name="T5">The fifth column type.</typeparam>
            <typeparam name="T6">The sixth column type.</typeparam>
            <typeparam name="T7">The seventh column type.</typeparam>
            <typeparam name="T8">The eight column type.</typeparam>
            <typeparam name="T9">The ninth column type.</typeparam>
            <typeparam name="T10">The tenth column type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``1(Fusion.Data.Sqlite,System.String,Fusion.Data.Query.Results{``0},Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T">The result object type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="results">The result bindings.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit"/> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Insert(Fusion.Data.Sqlite,System.String,Fusion.Data.Query.Parameters)">
            <summary>
            Inserts rows in the table.
            </summary>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="columns">The column values.</param>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.InsertOrIgnore(Fusion.Data.Sqlite,System.String,Fusion.Data.Query.Parameters)">
            <summary>
            Inserts or ignores rows in the table.
            </summary>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="columns">The column values.</param>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.InsertOrReplace(Fusion.Data.Sqlite,System.String,Fusion.Data.Query.Parameters)">
            <summary>
            Inserts or replaces rows in the table.
            </summary>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="columns">The column values.</param>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Update(Fusion.Data.Sqlite,System.String,Fusion.Data.Query.Parameters,Fusion.Data.Query.Parameters)">
            <summary>
            Updates rows in the table.
            </summary>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="columns">The column values.</param>
            <param name="where">The WHERE clause parameters.</param>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Delete(Fusion.Data.Sqlite,System.String,Fusion.Data.Query.Parameters)">
            <summary>
            Deletes rows from the table.
            </summary>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="where">The WHERE clause parameters.</param>
        </member>
        <member name="M:Fusion.Data.Query.QueryExtensions.Select``1(Fusion.Data.Sqlite,System.String,System.Delegate,Fusion.Data.Query.Parameters,System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves rows from the table.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="database">The database connection.</param>
            <param name="table">The table.</param>
            <param name="select">The select function.</param>
            <param name="where">The WHERE clause parameters.</param>
            <param name="orderBy">The ORDER BY column. Use ASC or DESC suffix to change the ordering.</param>
            <param name="limit">The maximum result limit.</param>
            <param name="offset">The result starting offset. Requires <paramref name="limit" /> greater than zero.</param>
            <returns>The query results.</returns>
        </member>
        <member name="T:Fusion.Data.Query.QueryExtensions.CachedQuery">
            <summary>
            Cached query information.
            </summary>
        </member>
        <member name="P:Fusion.Data.Query.QueryExtensions.CachedQuery.Columns">
            <summary>
            Gets or sets the query result columns.
            </summary>
            <value>The query result columns.</value>
        </member>
        <member name="P:Fusion.Data.Query.QueryExtensions.CachedQuery.ColumnToValue">
            <summary>
            Gets or sets the column to value mappings.
            </summary>
            <value>The column to value mappings.</value>
        </member>
        <member name="T:Fusion.Data.Query.Results`1">
            <summary>
            Query results.
            </summary>
            <typeparam name="T">The result object type.</typeparam>
        </member>
        <member name="F:Fusion.Data.Query.Results`1.results">
            <summary>
            The results.
            </summary>
        </member>
        <member name="P:Fusion.Data.Query.Results`1.Count">
            <summary>
            Gets the number of query results.
            </summary>
            <value>The number of query results.</value>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.Int32})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.Int64})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.Double})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.String})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.Byte[]})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.DateTime})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Add(System.String,System.Action{`0,System.TimeSpan})">
            <summary>
            Adds a query result.
            </summary>
            <param name="name">The column name.</param>
            <param name="value">The delegate to a method that receives the result value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.Bind(Fusion.Data.Sqlite.Statement,`0,System.Int32)">
            <summary>
            Gets the query result values.
            </summary>
            <param name="statement">The prepared statement.</param>
            <param name="result">The result object.</param>
            <param name="baseIndex">The base index value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.Data.Query.Results`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Fusion.Data.Query.Parameters">
            <summary>
            Query parameters.
            </summary>
        </member>
        <member name="F:Fusion.Data.Query.Parameters.parameters">
            <summary>
            The parameters.
            </summary>
        </member>
        <member name="P:Fusion.Data.Query.Parameters.Count">
            <summary>
            Gets the number of query parameters.
            </summary>
            <value>The number of query parameters.</value>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.Int32)">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.Int64)">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.Double)">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.String)">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.Byte[])">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.DateTime)">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Add(System.String,System.TimeSpan)">
            <summary>
            Adds a query parameter.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.Bind(Fusion.Data.Sqlite.Statement,System.Int32)">
            <summary>
            Binds the query parameters.
            </summary>
            <param name="statement">The prepared statement.</param>
            <param name="baseIndex">The base index value.</param>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.Data.Query.Parameters.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Fusion.Data.Query.Parameter">
            <summary>
            Column parameter.
            </summary>
        </member>
        <member name="M:Fusion.Data.Query.Parameter.#ctor(System.String,System.Action{Fusion.Data.Sqlite.Statement,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Query.Parameter"/> class.
            </summary>
            <param name="name">The column name.</param>
            <param name="bind">The delegate to the parameter binding method.</param>
        </member>
        <member name="P:Fusion.Data.Query.Parameter.Bind">
            <summary>
            Gets the delegate to the parameter binding method.
            </summary>
            <value>The delegate to the parameter binding method.</value>
        </member>
        <member name="T:Fusion.Data.Query.Column">
            <summary>
            Named column.
            </summary>
        </member>
        <member name="M:Fusion.Data.Query.Column.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Query.Column"/> class.
            </summary>
            <param name="name">The column name.</param>
        </member>
        <member name="P:Fusion.Data.Query.Column.Name">
            <summary>
            Gets the column name.
            </summary>
            <value>The column name.</value>
        </member>
        <member name="T:Fusion.Data.Query.QueryBuilder">
            <summary>
            Query builder.
            </summary>
        </member>
        <member name="F:Fusion.Data.Query.QueryBuilder.Comma">
            <summary>
            The comma separator.
            </summary>
        </member>
        <member name="F:Fusion.Data.Query.QueryBuilder.queryText">
            <summary>
            The query text.
            </summary>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Delete">
            <summary>
            Appends a "DELETE" fragment.
            </summary>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Select(System.String)">
            <summary>
            Appends a "SELECT expression" fragment.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Select``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends a "SELECT column1, column2, ..., columnN" fragment.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The columns.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.From(System.String)">
            <summary>
            Appends a "FROM table" fragment.
            </summary>
            <param name="table">The table.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Where(System.String)">
            <summary>
            Appends a "WHERE expression" fragment.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Where``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends a "WHERE column1 = ? AND column2 = ? AND ... AND columnN = ?" fragment.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The columns.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.And(System.String)">
            <summary>
            Appends an "AND expression" fragment.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.GroupBy(System.String[])">
            <summary>
            Appends an "GROUP BY column1, column2, ..., columnN" fragment.
            </summary>
            <param name="columns">The columns.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Having(System.String)">
            <summary>
            Appends a "HAVING expression" fragment.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.OrderBy(System.String[])">
            <summary>
            Appends an "ORDER BY column1, column2, ..., columnN" fragment.
            </summary>
            <param name="columns">The columns.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Limit(System.Int32,System.Int32)">
            <summary>
            Appends an "LIMIT count OFFSET offset" fragment. The "OFFSET" fragment is appended only if the offset is greater than zero.
            </summary>
            <param name="count">The count.</param>
            <param name="offset">The offset.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Insert">
            <summary>
            Appends an "INSERT" fragment.
            </summary>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.OrIgnore">
            <summary>
            Appends an "OR IGNORE" fragment.
            </summary>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.OrReplace">
            <summary>
            Appends an "OR REPLACE" fragment.
            </summary>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Into(System.String)">
            <summary>
            Appends an "INTO table" fragment.
            </summary>
            <param name="table">The table.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Values``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends a "(column1, column2, ..., columnN) VALUES (?, ?, ..., ?)" fragment.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The columns.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Update(System.String)">
            <summary>
            Appends an "UPDATE table" fragment.
            </summary>
            <param name="table">The table.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Set``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends a "SET column1 = ?, column2 = ?, columnN = ?" fragment.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The columns.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.ToString">
            <summary>
            Returns the query text.
            </summary>
            <returns>The query text.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.AppendList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends the items as comma separated list.
            </summary>
            <param name="items">The items.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.AppendNames``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends the column names.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The column.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.AppendParameters``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends the column parameters.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The column.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.AppendAssignments``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends the column assignment parameters.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The column.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.AppendEqualsParameters``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends the column equals parameters.
            </summary>
            <typeparam name="T">The column type.</typeparam>
            <param name="columns">The column.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Append(System.String)">
            <summary>
            Appends raw text.
            </summary>
            <param name="text">The text.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="M:Fusion.Data.Query.QueryBuilder.Append``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Appends the items.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="separator">The separator.</param>
            <param name="items">The items.</param>
            <param name="append">The append function.</param>
            <returns>The query builder.</returns>
        </member>
        <member name="T:Fusion.Data.Query.Result`1">
            <summary>
            Result column.
            </summary>
            <typeparam name="T">The result object type.</typeparam>
        </member>
        <member name="M:Fusion.Data.Query.Result`1.#ctor(System.String,System.Action{Fusion.Data.Sqlite.Statement,System.Int32,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Query.Result`1"/> class.
            </summary>
            <param name="name">The column name.</param>
            <param name="bind">The delegate to the result binding method.</param>
        </member>
        <member name="P:Fusion.Data.Query.Result`1.Bind">
            <summary>
            Gets the delegate to the result binding method.
            </summary>
            <value>The delegate to the result binding method.</value>
        </member>
        <member name="T:Fusion.Data.Sqlite">
            <summary>
            Sqlite database connection.
            </summary>
            <example>
            <code>
            <![CDATA[
            // Create the database file in the file system. Special ":memory:" string creates a temporary in-memory database.
            using (var db = new Sqlite("path/to/file"))
            {
                // Execute single statement. Integers, DateTime and TimeSpan values should be stored as INTEGER columns.
                db.Execute("CREATE TABLE IF NOT EXISTS Example (exampleColumn INTEGER)");
                
                // Transaction locks the database, so keep this as short as possible.
                using (var tx = db.BeginTransaction())
                {
                    // Parameter placeholders are indicated with the ? character, indexed from the left to right, starting at index 0.
                    using (var s = db.Prepare("INSERT INTO Example VALUES (?)"))
                    {
                        // Bindings start from index 0.
                        s.BindParameter(0, DateTime.UtcNow);
                        
                        // Non-query statements need only one Execute.
                        s.Execute();
                    }
                    
                    using (var s = db.Prepare("SELECT exampleColumn FROM Example"))
                    {
                        // Query statements should be executed until Execute returns false.
                        while (s.Execute())
                        {
                            // Query result columns are indexed from left to right, starting at index 0.
                            var exampleColumn = s.GetDateTime(0);
                        }
                    }
                    
                    // Commit the transaction, otherwise the transaction will be rolled back on Dispose.
                    tx.Commit();
                }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Fusion.Data.Sqlite.OK">
            <summary>
            Success, no error.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Row">
            <summary>
            Statement produced row.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Done">
            <summary>
            Statement is done.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.ReadWrite">
            <summary>
            Read and write access.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Create">
            <summary>
            Create file if not found.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.connectionString">
            <summary>
            The connection string.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.timeout">
            <summary>
            The time span until an operation times out when the database is busy.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.connection">
            <summary>
            The connection handle.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Sqlite"/> class.
            </summary>
            <param name="path">The path to the database file.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Sqlite" /> class.
            </summary>
            <param name="path">The path to the database file.</param>
            <param name="timeout">The time span until an operation times out when the database is busy. The default value is 60 seconds.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.#ctor(Fusion.Data.Sqlite)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Sqlite"/> class.
            </summary>
            <param name="connection">The existing database connection.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Dispose">
            <summary>
            Closes the database connection.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.Execute(System.String)">
            <summary>
            Executes the specified SQL statement.
            </summary>
            <param name="sql">The SQL statement.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Prepare(System.String)">
            <summary>
            Prepares the specified SQL statement.
            </summary>
            <param name="sql">The SQL statement. Use the question mark '?' for the statement parameters.</param>
            <returns>The prepared SQL statement.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.BeginTransaction">
            <summary>
            Begins a transaction.
            </summary>
            <returns>The database transaction.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Connect">
            <summary>
            Connects to the database.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.VerifyAccess">
            <summary>
            Verifies the access to the object.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.VerifyResult(System.Int32)">
            <summary>
            Verifies the result code.
            </summary>
            <param name="result">The result code.</param>
        </member>
        <member name="T:Fusion.Data.Sqlite.Statement">
            <summary>
            Prepared SQL statement.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Statement.database">
            <summary>
            The database connection.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Statement.statement">
            <summary>
            The statement handle.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Statement.columnCount">
            <summary>
            The number of columns in the statement record set, 0 for non query statements.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.#ctor(Fusion.Data.Sqlite,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Sqlite.Statement" /> class.
            </summary>
            <param name="database">The database connection.</param>
            <param name="statement">The statement handle.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.Dispose">
            <summary>
            Releases the prepared statement.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.Execute">
            <summary>
            Executes one step of the statement.
            </summary>
            <returns>True if the statement produced a result, false if the statement ran to completion.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.Int32)">
            <summary>
            Binds a value for a parameter.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.Int64)">
            <summary>
            Binds a value for a parameter.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.Double)">
            <summary>
            Binds a value for a parameter.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.String)">
            <summary>
            Binds a value for a parameter.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.Byte[])">
            <summary>
            Binds a value for a parameter.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.DateTime)">
            <summary>
            Binds a value for a parameter. The value is stored as an INTEGER.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.BindParameter(System.Int32,System.TimeSpan)">
            <summary>
            Binds a value for a parameter. The value is stored as an INTEGER.
            </summary>
            <param name="index">The parameter index.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetInt32(System.Int32)">
            <summary>
            Gets the result column value as an integer.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetInt64(System.Int32)">
            <summary>
            Gets the result column value as an integer.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetDouble(System.Int32)">
            <summary>
            Gets the result column value as a double.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetString(System.Int32)">
            <summary>
            Gets the result column value as a string.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetBytes(System.Int32)">
            <summary>
            Gets the result column value as a byte array.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetDateTime(System.Int32)">
            <summary>
            Gets the result column value as a <see cref="T:System.DateTime" />. The value must be stored as an INTEGER.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.GetTimeSpan(System.Int32)">
            <summary>
            Gets the result column value as a <see cref="T:System.TimeSpan" />. The value must be stored as an INTEGER.
            </summary>
            <param name="index">The result column index.</param>
            <returns>The result column value.</returns>
        </member>
        <member name="M:Fusion.Data.Sqlite.Statement.ValidateColumnIndex(System.Int32)">
            <summary>
            Checks that the column index is within range.
            </summary>
            <param name="index">The result column index.</param>
        </member>
        <member name="T:Fusion.Data.Sqlite.Transaction">
            <summary>
            Database transaction.
            </summary>
        </member>
        <member name="F:Fusion.Data.Sqlite.Transaction.database">
            <summary>
            The database connection.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.Transaction.#ctor(Fusion.Data.Sqlite)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Data.Sqlite.Transaction"/> class.
            </summary>
            <param name="database">The database connection.</param>
        </member>
        <member name="M:Fusion.Data.Sqlite.Transaction.Dispose">
            <summary>
            Closes the transaction.
            </summary>
        </member>
        <member name="M:Fusion.Data.Sqlite.Transaction.Commit">
            <summary>
            Commits the transaction.
            </summary>
        </member>
        <member name="T:Fusion.Data.Sqlite.Sqlite3">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="T:Fusion.DensityUnit">
            <summary>
            Density unit type.
            </summary>
        </member>
        <member name="F:Fusion.DensityUnit.KilogramsPerCubicMeter">
            <summary>
            The kilograms per cubic meter.
            </summary>
        </member>
        <member name="F:Fusion.DensityUnit.TonsPerCubicMeter">
            <summary>
            The tons per cubic meter.
            </summary>
        </member>
        <member name="F:Fusion.DensityUnit.NewtonsPerCubicMeter">
            <summary>
            The newtons per cubic meter.
            </summary>
        </member>
        <member name="F:Fusion.DensityUnit.KilonewtonsPerCubicMeter">
            <summary>
            The kilonewtons per cubic meter.
            </summary>
        </member>
        <member name="F:Fusion.DensityUnit.PoundForcePerCubicFoot">
            <summary>
            The pound force per cubic foot.
            </summary>
        </member>
        <member name="T:Fusion.DependencyAttribute">
            <summary>
            Declares that the annotated property is resolved as a dependency.
            </summary>
        </member>
        <member name="T:Fusion.Extensions">
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides extension methods for common types.
            </summary>
            <summary>
            Provides extension methods for common types.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides extension methods for common types.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Win32 API based extensions for Window.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
            <summary>
            Provides common extension methods.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.SuppressScriptErrors(System.Windows.Controls.WebBrowser,System.Boolean)">
            <summary>
            Sets whether the script errors are suppressed.
            </summary>
            <param name="webBrowser">The web browser.</param>
            <param name="suppress">Indicates whether to suppress the script errors.</param>
        </member>
        <member name="M:Fusion.Extensions.FindWindow(System.Windows.Application,System.Func{System.Windows.Window,System.Boolean})">
            <summary>
            Finds the window.
            </summary>
            <param name="application">The application.</param>
            <param name="where">The predicate that selects the window.</param>
            <returns>The window or null if the window was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindWindow``1(System.Windows.Application,System.Func{``0,System.Boolean})">
            <summary>
            Finds the window.
            </summary>
            <typeparam name="TWindow">The window type.</typeparam>
            <param name="application">The application.</param>
            <param name="where">The predicate that selects the window.</param>
            <returns>The window or null if the window was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindName``1(System.Windows.FrameworkElement,System.String)">
            <summary>
            Finds a child element by name.
            </summary>
            <typeparam name="TElement">The type of the child element.</typeparam>
            <param name="element">The parent element.</param>
            <param name="name">The element name.</param>
            <returns>Child element or null if the child element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.SimulateClick(System.Windows.Controls.Primitives.ButtonBase)">
            <summary>
            Simulates the button click.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Fusion.Extensions.GetDepth(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the element depth in a tree view.
            </summary>
            <param name="element">The tree view item element.</param>
            <returns>The element depth.</returns>
        </member>
        <member name="M:Fusion.Extensions.ToBitmap(System.Byte[])">
            <summary>
            Converts an array of bytes into a bitmap.
            </summary>
            <param name="array">The array.</param>
            <returns>The <see cref="T:System.Drawing.Bitmap"/>.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindLogicalParent(System.Windows.DependencyObject)">
            <summary>
            Finds the logical parent element.
            </summary>
            <param name="element">Child element.</param>
            <returns>The logical parent element or null if the parent element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindLogicalParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds the logical parent element.
            </summary>
            <typeparam name="TElement">The type of the parent element.</typeparam>
            <param name="element">The child element.</param>
            <returns>The logical parent element or null if the parent element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindLogicalParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Finds the logical parent element.
            </summary>
            <typeparam name="TElement">The type of the parent element.</typeparam>
            <param name="element">The child element.</param>
            <param name="where">The predicate that selects the element.</param>
            <returns>The logical parent element or null if the parent element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetCookies(System.Net.CookieContainer)">
            <summary>
            Gets all cookies in a cookie container.
            </summary>
            <param name="cookieContainer">The cookie container.</param>
            <returns>The cookies in the cookie container.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindChild``1(System.Windows.DependencyObject)">
            <summary>
            Finds the child element.
            </summary>
            <typeparam name="TElement">The type of the child element.</typeparam>
            <param name="element">The parent element.</param>
            <returns>Child element or null if the child element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindChild``1(System.Windows.Application)">
            <summary>
            Finds the child element.
            </summary>
            <typeparam name="TElement">The type of the child element.</typeparam>
            <param name="application">The application.</param>
            <returns>Child element or null if the child element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindChild``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Finds the child element.
            </summary>
            <typeparam name="TElement">The type of the child element.</typeparam>
            <param name="element">The parent element.</param>
            <param name="where">The predicate that selects the child element.</param>
            <returns>Child element or null if the child element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindChild``1(System.Windows.Application,System.Func{``0,System.Boolean})">
            <summary>
            Finds the child element.
            </summary>
            <typeparam name="TElement">The type of the child element.</typeparam>
            <param name="application">The application.</param>
            <param name="where">The predicate that selects the child element.</param>
            <returns>Child element or null if the child element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindParent(System.Windows.DependencyObject)">
            <summary>
            Finds the parent element.
            </summary>
            <param name="element">Child element.</param>
            <returns>The parent element or null if the parent element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds the parent element.
            </summary>
            <typeparam name="TElement">The type of the parent element.</typeparam>
            <param name="element">The child element.</param>
            <returns>The parent element or null if the parent element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Finds the parent element.
            </summary>
            <typeparam name="TElement">The type of the parent element.</typeparam>
            <param name="element">The child element.</param>
            <param name="where">The predicate that selects the element.</param>
            <returns>The parent element or null if the parent element was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.FindParentPopup(System.Windows.DependencyObject)">
            <summary>
            Finds the parent popup.
            </summary>
            <param name="element">The child element.</param>
            <returns>The parent popup or null if the parent popup was not found.</returns>
        </member>
        <member name="M:Fusion.Extensions.Activate(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Activates the popup.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="T:Fusion.Extensions.Win32">
            <summary>
            Native interface.
            </summary>
            <summary>
            Native interface.
            </summary>
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.CopyToSession(System.Net.CookieContainer,System.Func{System.Net.Cookie,System.Boolean})">
            <summary>
            Copies the cookies from a cookie container to the current session.
            </summary>
            <param name="cookieContainer">The cookie container.</param>
            <param name="where">The delegate to the cookie selection predicate method. Null matches all cookies.</param>
        </member>
        <member name="F:Fusion.Extensions.DefaultDpi">
            <summary>
            The default DPI.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.GetMousePosition(System.Windows.Media.Visual)">
            <summary>
            Gets the mouse cursor position, in device independent pixels, relative to the visual location.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The mouse cursor position.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetMousePositionInScreenCoordinates(System.Windows.Media.Visual)">
            <summary>
            Gets the mouse cursor position, in device independent pixels, relative to top left corner of the primary display.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The mouse cursor position.</returns>
        </member>
        <member name="M:Fusion.Extensions.SizeToContentWorkaround(System.Windows.Window)">
            <summary>
            Workaround for SizeToContent bug that causes incorrect size calculation with custom window chrome.
            </summary>
            <param name="window">The window to modify.</param>
        </member>
        <member name="F:Fusion.Extensions.MethodSignatures">
            <summary>
            The cached method signatures.
            </summary>
        </member>
        <member name="F:Fusion.Extensions.DelegateSignatures">
            <summary>
            The cached delegate signatures.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.GetSignature(System.Reflection.MethodInfo,System.Boolean,System.Boolean)">
            <summary>
            Gets the method signature.
            </summary>
            <param name="method">The method.</param>
            <param name="ignoreAccessModifier">Indicates whether the access modifier should be ignored.</param>
            <param name="ignoreStaticModifier">Indicates whether the static modifier should be ignored.</param>
            <returns>The signature of the method.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetSignature(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Gets the method signature.
            </summary>
            <param name="delegateType">The method delegate type.</param>
            <param name="ignoreAccessModifier">Indicates whether the access modifier should be ignored.</param>
            <param name="ignoreStaticModifier">Indicates whether the static modifier should be ignored.</param>
            <returns>The signature of the method.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetSignatureForMethod(System.Reflection.MethodInfo,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the signature.
            </summary>
            <param name="method">The method.</param>
            <param name="name">The method name.</param>
            <param name="ignoreAccessModifier">Indicates whether the access modifier should be ignored.</param>
            <param name="ignoreStaticModifier">Indicates whether the static modifier should be ignored.</param>
            <returns>The signature of a method.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetSignatureAccessModifier(System.Reflection.MethodInfo)">
            <summary>
            Gets the signature access modifier.
            </summary>
            <param name="method">The method.</param>
            <returns>The signature access modifier.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetSignatureForParameter(System.Reflection.ParameterInfo)">
            <summary>
            Gets the signature for a parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>The signature for a parameter.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetSignatureForType(System.Type)">
            <summary>
            Gets the signature for a type.
            </summary>
            <param name="type">The type.</param>
            <returns>The signature for a type.</returns>
        </member>
        <member name="M:Fusion.Extensions.SetFilter(Microsoft.Win32.FileDialog,Fusion.FileType[])">
            <summary>
            Sets the file dialog filter.
            </summary>
            <param name="dialog">The file dialog.</param>
            <param name="fileTypes">The file types.</param>
        </member>
        <member name="M:Fusion.Extensions.OnCommand(System.Windows.UIElement,System.Windows.Input.RoutedCommand,System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            Creates a command binding that invokes the specified action.
            </summary>
            <param name="element">The UI element.</param>
            <param name="command">The command.</param>
            <param name="executed">The action to invoke on command. The command parameter is passed as the argument.</param>
            <param name="canExecute">The function that is invoked to check if the command can be executed. The default value is null.</param>
            <returns>The command binding that was added to the UI element.</returns>
        </member>
        <member name="M:Fusion.Extensions.Match(System.Windows.Input.KeyEventArgs,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Determines whether the keyboard event matches the expected keyboard gesture.
            </summary>
            <param name="keyEventArgs">The keyboard event arguments.</param>
            <param name="key">The expected key.</param>
            <param name="modifierKeys">The expected modifier keys.</param>
            <returns>True if the keyboard event matches the expected keyboard gesture.</returns>
        </member>
        <member name="F:Fusion.Extensions.RecursiveUpdateLockProperty">
            <summary>
            The recursive update lock property.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.RecursiveUpdate(System.Windows.DependencyObject,System.Action)">
            <summary>
            Prevents unlimited recursion while performing an update.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="recursiveUpdate">The recursive update.</param>
            <returns>True if the update was invoked, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.GlobalActivate(System.Windows.Window)">
            <summary>
            Activate a window from anywhere by attaching to the foreground window
            </summary>
        </member>
        <member name="M:Fusion.Extensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the maximal element of the given sequence, based on
            the given projection.
            </summary>
            <remarks>
            If more than one element has the maximal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:Fusion.Extensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the maximal element of the given sequence, based on
            the given projection and the specified comparer for projected values. 
            </summary>
            <remarks>
            If more than one element has the maximal projected value, the first
            one encountered will be returned. This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:Fusion.Extensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the minimal element of the given sequence, based on
            the given projection.
            </summary>
            <remarks>
            If more than one element has the minimal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current minimal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:Fusion.Extensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the minimal element of the given sequence, based on
            the given projection and the specified comparer for projected values.
            </summary>
            <remarks>
            If more than one element has the minimal projected value, the first
            one encountered will be returned. This operator uses immediate execution, but
            only buffers a single result (the current minimal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:Fusion.Extensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds all the given items in source to the target collection.
            </summary>
            <typeparam name="T">The collection element type.</typeparam>
            <param name="target">The target collection.</param>
            <param name="source">The items source.</param>
        </member>
        <member name="M:Fusion.Extensions.AsReadOnly``1(System.Collections.Generic.IList{``0})">
            <summary>
            Gets a read only view of the collection.
            </summary>
            <typeparam name="T">The collection item type.</typeparam>
            <param name="collection">The collection instance.</param>
            <returns>The read only view of the collection.</returns>
        </member>
        <member name="M:Fusion.Extensions.AsReadOnly``1(System.Collections.ObjectModel.ObservableCollection{``0})">
            <summary>
            Gets a read only view of the collection.
            </summary>
            <typeparam name="T">The collection item type.</typeparam>
            <param name="collection">The collection instance.</param>
            <returns>The read only view of the collection.</returns>
        </member>
        <member name="M:Fusion.Extensions.AsReadOnly``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Gets a read only view of the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="instance">The dictionary.</param>
            <returns>The read only view of the dictionary.</returns>
        </member>
        <member name="M:Fusion.Extensions.AsReadOnly``1(System.Collections.Generic.ISet{``0})">
            <summary>
            Gets a read only view of the set.
            </summary>
            <typeparam name="T">The type of the set element.</typeparam>
            <param name="instance">The set.</param>
            <returns>The read only view of the set.</returns>
        </member>
        <member name="M:Fusion.Extensions.Discard``1(System.Collections.Generic.Stack{``0},System.Int32)">
            <summary>
            Discards the specified number of items from the top of the stack.
            </summary>
            <typeparam name="T">The type of the stack item.</typeparam>
            <param name="stack">The stack.</param>
            <param name="count">The number of items to discard from the top of the stack.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T">The sequence element type.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Action{``0,``1})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{System.Tuple{``0}},System.Action{``0})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},System.Action{``0,``1})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2}},System.Action{``0,``1,``2})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <typeparam name="T3">The type of the third item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``4(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3}},System.Action{``0,``1,``2,``3})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <typeparam name="T3">The type of the third item.</typeparam>
            <typeparam name="T4">The type of the fourth item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``5(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4}},System.Action{``0,``1,``2,``3,``4})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <typeparam name="T3">The type of the third item.</typeparam>
            <typeparam name="T4">The type of the fourth item.</typeparam>
            <typeparam name="T5">The type of the fifth item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``6(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5}},System.Action{``0,``1,``2,``3,``4,``5})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <typeparam name="T3">The type of the third item.</typeparam>
            <typeparam name="T4">The type of the fourth item.</typeparam>
            <typeparam name="T5">The type of the fifth item.</typeparam>
            <typeparam name="T6">The type of the sixth item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``7(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6}},System.Action{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <typeparam name="T3">The type of the third item.</typeparam>
            <typeparam name="T4">The type of the fourth item.</typeparam>
            <typeparam name="T5">The type of the fifth item.</typeparam>
            <typeparam name="T6">The type of the sixth item.</typeparam>
            <typeparam name="T7">The type of the seventh item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.ForEach``8(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Performs an action for each element in the enumerable sequence.
            </summary>
            <typeparam name="T1">The type of the first item.</typeparam>
            <typeparam name="T2">The type of the second item.</typeparam>
            <typeparam name="T3">The type of the third item.</typeparam>
            <typeparam name="T4">The type of the fourth item.</typeparam>
            <typeparam name="T5">The type of the fifth item.</typeparam>
            <typeparam name="T6">The type of the sixth item.</typeparam>
            <typeparam name="T7">The type of the seventh item.</typeparam>
            <typeparam name="T8">The type of the eight item.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">The delegate to a method that performs the action for an element.</param>
        </member>
        <member name="M:Fusion.Extensions.FormatInvariant(System.String,System.Object[])">
            <summary>
            Formats the string with the culture-independent (invariant) formatting rules.
            </summary>
            <param name="format">The format string.</param>
            <param name="data">The formatted data.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Gets a value from the dictionary or adds it if missing.
            </summary>
            <typeparam name="TKey">The dictionary key type.</typeparam>
            <typeparam name="TValue">The dictionary value type.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The dictionary key.</param>
            <param name="valueFactory">The delegate to a method that creates the missing value.</param>
            <returns>The value from the dictionary.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetPixelScaleFactors(System.Windows.Media.Visual)">
            <summary>
            Gets the DPI dependent scale factors from device independent pixels to physical screen pixels.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The scaling for horizontal and vertical dimensions.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetResourceDictionary(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the resource dictionary.
            </summary>
            <param name="assembly">The assembly that contains the resource dictionary.</param>
            <param name="resourcePath">The resource path to the resource dictionary.</param>
            <returns>The resource dictionary.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetValue``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Gets a value of an element from the list.
            </summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="list">The list.</param>
            <param name="index">The index of the element in the list.</param>
            <param name="valueFactory">The delegate to a method that creates the missing value.</param>
            <returns>The value of the element or the created value if the index is out of the list bounds.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Gets a value from the dictionary.
            </summary>
            <typeparam name="TKey">The type of the dictionary key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The dictionary key.</param>
            <param name="valueFactory">The delegate to a method that creates the missing value.</param>
            <returns>The value from the dictionary or the created value if the value is missing.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetValueOrDefault``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Gets a value of an element from the list.
            </summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="list">The list.</param>
            <param name="index">The index of the element in the list.</param>
            <returns>The value of the element or the default value if the index is out of the list bounds.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetValueOrDefault``1(System.Collections.Generic.IList{``0},System.Int32,``0)">
            <summary>
            Gets a value of an element from the list.
            </summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="list">The list.</param>
            <param name="index">The index of the element in the list.</param>
            <param name="defaultValue">The value to return if the index is out of the list bounds.</param>
            <returns>The value of the element or the default value if the index is out of the list bounds.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets a value from the dictionary.
            </summary>
            <typeparam name="TKey">The type of the dictionary key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The dictionary key.</param>
            <returns>The value from the dictionary or the default value if the value is missing.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets a value from the dictionary, or the specified default value.
            </summary>
            <typeparam name="TKey">The type of the dictionary key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The dictionary key.</param>
            <param name="defaultValue">The value to return if the value is missing.</param>
            <returns>The value from the dictionary or the specified default value if the value is missing.</returns>
        </member>
        <member name="M:Fusion.Extensions.InsertAfter``1(System.Collections.Generic.IList{``0},``0,``0)">
            <summary>
            Inserts the specified item after the target item in the list.
            </summary>
            <typeparam name="T">The type of the list item.</typeparam>
            <param name="list">The list.</param>
            <param name="item">The item to insert.</param>
            <param name="after">The target item in the list. The <paramref name="item" /> will be inserted after this item.</param>
            <returns>True if the item was inserted, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.InsertBefore``1(System.Collections.Generic.IList{``0},``0,``0)">
            <summary>
            Inserts the specified item before the target item in the list.
            </summary>
            <typeparam name="T">The type of the list item.</typeparam>
            <param name="list">The list.</param>
            <param name="item">The item to insert.</param>
            <param name="before">The target item in the list. The <paramref name="item" /> will be inserted before this item.</param>
            <returns>True if the item was inserted, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetMD5Hash(System.String)">
            <summary>
            Gets the MD5 hash for the string. This is not suitable for hashing sensitive information such as passwords.
            </summary>
            <param name="text">The string.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetMD5Hash(System.Byte[])">
            <summary>
            Gets the MD5 hash for the array. This is not suitable for hashing sensitive information such as passwords.
            </summary>
            <param name="array">The array.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetMD5Hash(System.IO.Stream)">
            <summary>
            Gets the MD5 hash for the stream. This is not suitable for hashing sensitive information such as passwords.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:Fusion.Extensions.GetMD5Hash(System.Drawing.Bitmap)">
            <summary>
            Gets the MD5 hash for the bitmap.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:Fusion.Extensions.Keep``1(System.Collections.Generic.Stack{``0},System.Int32)">
            <summary>
            Keeps the specified number of items from the top of the stack and discards the rest.
            </summary>
            <typeparam name="T">The type of the stack item.</typeparam>
            <param name="stack">The stack.</param>
            <param name="count">The number of items to keep from the top of the stack.</param>
        </member>
        <member name="M:Fusion.Extensions.Near(System.Single,System.Single,System.Int32)">
            <summary>
            Determines whether the specified values are near to each other.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the specified values are near to each other, otherwise false.
            </returns>
            <remarks>
            Floating point comparison is very tricky as the precision of the values varies depending on the magnitude. To handle this,
            the values are linearized into discrete units that can be compared directly.
            </remarks>
            <example>
            This example shows how to compare two floating point values for equality.
            <code>
            if (value1.Near(value2))
            {
                // Values are near to each other, within the allowed error in ULPs.
            }
            </code>
            </example>
        </member>
        <member name="M:Fusion.Extensions.Near(System.Double,System.Double,System.Int32)">
            <summary>
            Determines whether the specified values are near to each other.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the specified values are near to each other, otherwise false.
            </returns>
            <remarks>
            Floating point comparison is very tricky as the precision of the values varies depending on the magnitude. To handle this,
            the values are linearized into discrete units that can be compared directly.
            </remarks>
            <example>
            This example shows how to compare two floating point values for equality.
            <code>
            if (value1.Near(value2))
            {
                // Values are near to each other, within the allowed error in ULPs.
            }
            </code>
            </example>
        </member>
        <member name="T:Fusion.Extensions.SingleBits">
            <summary>
            Provides safe access to the bits of a floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Extensions.SingleBits.Value">
            <summary>
            The floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Extensions.SingleBits.Bits">
            <summary>
            The bits in the value.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.SingleBits.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Extensions.SingleBits"/> struct.
            </summary>
            <param name="value">The floating point value.</param>
        </member>
        <member name="T:Fusion.Extensions.DoubleBits">
            <summary>
            Provides safe access to the bits of a floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Extensions.DoubleBits.Value">
            <summary>
            The floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Extensions.DoubleBits.Bits">
            <summary>
            The bits in the floating point value.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.DoubleBits.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Extensions.DoubleBits"/> struct.
            </summary>
            <param name="value">The floating point value.</param>
        </member>
        <member name="M:Fusion.Extensions.PreserveStackTrace(System.Exception)">
            <summary>
            Prepares the exception to be thrown, preserving the stack trace.
            </summary>
            <param name="exception">The exception.</param>
            <returns>The prepared exception.</returns>
            <example>
            This example shows how to capture and rethrow exceptions.
            <code>
            private Exception exception;
            
            void PerformOperation()
            {
                try
                {
                    PerformInternalOperation();
                }
                catch (Exception error)
                {
                    exception = error;
                }
            }
            
            void VerifyOperation()
            {
                if (exception != null)
                {
                    throw exception.PreserveStackTrace();
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Fusion.Extensions.Reset">
            <summary>
            The cached <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance with Reset action.
            </summary>
        </member>
        <member name="F:Fusion.Extensions.PropertyChangedEventArgs">
            <summary>
            The cached <see cref="F:Fusion.Extensions.PropertyChangedEventArgs"/>.
            </summary>
        </member>
        <member name="M:Fusion.Extensions.Raise(System.EventHandler,System.Object)">
            <summary>
            Raises the event.
            </summary>
            <param name="eventHandler">The event handler.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Fusion.Extensions.Raise(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            Raises the event.
            </summary>
            <param name="eventHandler">The event handler.</param>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="M:Fusion.Extensions.Raise``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Raises the event.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The event handler.</param>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="M:Fusion.Extensions.Raise``1(System.EventHandler{``0},System.Object,System.Func{``0})">
            <summary>
            Raises the event.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The event handler.</param>
            <param name="sender">The sender.</param>
            <param name="eventArgsFactory">The delegate to a function that creates the event arguments.</param>
        </member>
        <member name="M:Fusion.Extensions.Raise(System.ComponentModel.PropertyChangedEventHandler,System.Object,System.String)">
            <summary>
            Raises the event.
            </summary>
            <param name="eventHandler">The event handler.</param>
            <param name="sender">The sender.</param>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:Fusion.Extensions.Raise(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.Object)">
            <summary>
            Raises the event with Reset action.
            </summary>
            <param name="eventHandler">Event to raise.</param>
            <param name="sender">Sender object.</param>
        </member>
        <member name="M:Fusion.Extensions.ReadShort2(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadShort3(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadShort4(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadUShort2(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadUShort3(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadUShort4(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadInt2(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadInt3(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadInt4(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadFloat2(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadFloat3(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadFloat4(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadDouble2(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadDouble3(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadDouble4(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadFloat4x4(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadGuid(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadFourCC(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadRGBA(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadAngle(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadArea(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadLength(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadMass(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadVolume(System.IO.BinaryReader)">
            <summary>
            Reads a value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.ReadPackedInt32(System.IO.BinaryReader)">
            <summary>
            Reads a packed 32 bit integer value from the input stream.
            </summary>
            <param name="reader">The binary reader.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Fusion.Extensions.RemoveAll``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Removes all elements from the collection and returns them as an array.
            </summary>
            <typeparam name="T">The collection element type.</typeparam>
            <param name="collection">The collection.</param>
            <returns>The removed elements.</returns>
        </member>
        <member name="M:Fusion.Extensions.TemplatedPart``1(System.Windows.Controls.Control,System.String,System.Action{``0})">
            <summary>
            Finds the part from the control template and performs an action with it.
            </summary>
            <typeparam name="TPart">The type of the part.</typeparam>
            <param name="control">The control.</param>
            <param name="partName">The part name.</param>
            <param name="withPart">The delegate to a method that performs an action on the part.</param>
        </member>
        <member name="M:Fusion.Extensions.ToBitArray(System.Byte[])">
            <summary>
            Returns the bits in the array as a <see cref="T:System.Collections.BitArray" />.
            </summary>
            <param name="array">The array.</param>
            <returns>The <see cref="T:System.Collections.BitArray" /> that contains the bits from the array.</returns>
        </member>
        <member name="M:Fusion.Extensions.ToByteArray(System.Collections.BitArray)">
            <summary>
            Returns the bits in the <see cref="T:System.Collections.BitArray" /> as an array of bytes.
            </summary>
            <param name="bitArray">The bit array.</param>
            <returns>The bits as an array of bytes.</returns>
        </member>
        <member name="M:Fusion.Extensions.ToByteArray(System.Drawing.Bitmap)">
            <summary>
            Converts a bitmap into an array of bytes.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns>The array of bytes.</returns>
        </member>
        <member name="M:Fusion.Extensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts an enumerable sequence into a <see cref="T:System.Collections.Generic.HashSet`1" />.
            </summary>
            <typeparam name="T">The type of the sequence element.</typeparam>
            <param name="source">The enumerable sequence.</param>
            <returns>The <see cref="T:System.Collections.Generic.HashSet`1" /> that contains the elements from the enumerable sequence.</returns>
        </member>
        <member name="M:Fusion.Extensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Converts an enumerable sequence into a <see cref="T:System.Collections.Generic.HashSet`1" />.
            </summary>
            <typeparam name="T">The type of the sequence element.</typeparam>
            <param name="source">The enumerable sequence.</param>
            <param name="comparer">The comparer used by the hash set. This is useful for example when building a case insensitive hash set.</param>
            <returns>The <see cref="T:System.Collections.Generic.HashSet`1" /> that contains the elements from the enumerable sequence.</returns>
        </member>
        <member name="M:Fusion.Extensions.TrimEnd(System.String,System.Int32)">
            <summary>
            Removes characters from the end of the string.
            </summary>
            <param name="text">The string.</param>
            <param name="characters">The number of characters to remove.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:Fusion.Extensions.TrimStart(System.String,System.Int32)">
            <summary>
            Removes characters from the start of the string.
            </summary>
            <param name="text">The string.</param>
            <param name="characters">The number of characters to remove.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsBoolean(System.String)">
            <summary>
            Attempts to parse the string as a boolean value.
            </summary>
            <param name="text">The string.</param>
            <returns>The parsed value or null if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsBoolean(System.String,System.Boolean)">
            <summary>
            Attempts to parse the string as a boolean value.
            </summary>
            <param name="text">The string.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The parsed value or the default value if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsInt32(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Attempts to parse the string as an integer value.
            </summary>
            <param name="text">The string.</param>
            <param name="numberStyle">The number style.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The parsed value or null if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsInt32(System.String,System.Int32,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Attempts to parse the string as an integer value.
            </summary>
            <param name="text">The string.</param>
            <param name="defaultValue">The default value.</param>
            <param name="numberStyle">The number style.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The parsed value or the default value if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsDouble(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Attempts to parse the string as a floating point value.
            </summary>
            <param name="text">The string.</param>
            <param name="numberStyle">The number style.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The parsed value or null if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsDouble(System.String,System.Double,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Attempts to parse the string as a floating point value.
            </summary>
            <param name="text">The string.</param>
            <param name="defaultValue">The default value.</param>
            <param name="numberStyle">The number style.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The parsed value or the default value if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsEnum``1(System.String,System.Boolean)">
            <summary>
            Attempts to parse the string as an enumerated type.
            </summary>
            <typeparam name="TEnum">The enumerated type.</typeparam>
            <param name="text">The string.</param>
            <param name="ignoreCase">Indicates whether to ignore the character casing. The default value is false.</param>
            <returns>The parsed value or null if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.ParseAsEnum``1(System.String,``0,System.Boolean)">
            <summary>
            Attempts to parse the string as an enumerated type.
            </summary>
            <typeparam name="TEnum">The enumerated type.</typeparam>
            <param name="text">The string.</param>
            <param name="defaultValue">The default value.</param>
            <param name="ignoreCase">Indicates whether to ignore the character casing. The default value is false.</param>
            <returns>The parsed value or the default value if the string could not be parsed.</returns>
        </member>
        <member name="M:Fusion.Extensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Attempts to add the key and value to the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key to add.</param>
            <param name="value">The value to add.</param>
            <returns>True if the key and value were added, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Attempts to add the key and value to the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key to add.</param>
            <param name="valueFactory">The delegate to a method that creates the value.</param>
            <returns>True if the key and value were added, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)">
            <summary>
            Attempts to remove the key and value from the dictionary.
            </summary>
            <typeparam name="TKey">Dictionary key type.</typeparam>
            <typeparam name="TValue">Dictionary value type.</typeparam>
            <param name="dictionary">Dictionary object.</param>
            <param name="key">Key to remove.</param>
            <param name="removedValue">Output variable for the removed value.</param>
            <returns>True if the key and value were removed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.TryUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Attempts to update a value in the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value that replaces the current value.</param>
            <returns>True if the value was updated, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.TryUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,``1@)">
            <summary>
            Attempts to update a value in the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value that replaces the current value.</param>
            <param name="replaced">The output variable for the replaced value.</param>
            <returns>True if the value was updated, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.TryUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1,``1})">
            <summary>
            Attempts to update a value in the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The dictionary key.</param>
            <param name="updateValue">The delegate to a method that returns the value that replaces the current value.</param>
            <returns>True if the value was updated, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Extensions.WithValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Action{``1})">
            <summary>
            Retrieves the value associated with the specified key and invokes the specified action.
            </summary>
            <typeparam name="TKey">The type of the dictionary key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="withValue">The delegate to a method that is invoked with the found value.</param>
            <returns>The reference to the dictionary.</returns>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Short2)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Short3)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Short4)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.UShort2)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.UShort3)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.UShort4)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Int2)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Int3)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Int4)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Float2)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Float3)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Float4)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Double2)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Double3)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Double4)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Float4x4)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,System.Guid)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.FourCC)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.RGBA)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Angle)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Area)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Length)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Mass)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.Write(System.IO.BinaryWriter,Fusion.Volume)">
            <summary>
            Writes a value to the output stream.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Fusion.Extensions.WritePackedInt32(System.IO.BinaryWriter,System.Int32)">
            <summary>
            Writes a packed 32 bit integer value to the output stream. Values less than -134217727 or greater than 134217727 will produce 5 bytes, negating any packing benefit.
            </summary>
            <param name="writer">The binary writer.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="T:Fusion.FileType">
            <summary>
            File type description.
            </summary>
        </member>
        <member name="M:Fusion.FileType.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.FileType" /> class.
            </summary>
            <param name="description">The file type description.</param>
            <param name="extensions">The file extensions, e.g. "txt", "exe", "doc". An empty array matches all file extensions.</param>
        </member>
        <member name="P:Fusion.FileType.Description">
            <summary>
            Gets the file type description.
            </summary>
            <value>The file type description.</value>
        </member>
        <member name="P:Fusion.FileType.Extensions">
            <summary>
            Gets the file extensions.
            </summary>
            <value>The file extensions.</value>
        </member>
        <member name="T:Fusion.Force">
            <summary>
            Force quantity.
            </summary>
        </member>
        <member name="F:Fusion.Force.Zero">
            <summary>
            The zero force.
            </summary>
        </member>
        <member name="F:Fusion.Force.Newton">
            <summary>
            One Newton force.
            </summary>
        </member>
        <member name="F:Fusion.Force.PoundForce">
            <summary>
            One Pound-force force .
            </summary>
        </member>
        <member name="F:Fusion.Force.Kip">
            <summary>
            One kilo pound force (kip) (Not the same as kilopond).
            </summary>
        </member>
        <member name="F:Fusion.Force.KilogramForce">
            <summary>
            One kilogram-force (kgf).
            </summary>
        </member>
        <member name="F:Fusion.Force.TonneForce">
            <summary>
            The tonne force (T).
            </summary>
        </member>
        <member name="F:Fusion.Force.Kilonewton">
            <summary>
            The kilonewton (kN).
            </summary>
        </member>
        <member name="F:Fusion.Force.Decanewton">
            <summary>
            The decanewton (daN).
            </summary>
        </member>
        <member name="F:Fusion.Force.NewtonsInPoundForce">
            <summary>
            The Newtons in one pound-force.
            </summary>
        </member>
        <member name="F:Fusion.Force.NewtonsInDecanewton">
            <summary>
            The newtons in decanewton (daN). 
            </summary>
        </member>
        <member name="F:Fusion.Force.NewtonsInKilonewtons">
            <summary>
            The newtons in one kilonewtons (kN).
            </summary>
        </member>
        <member name="F:Fusion.Force.NewtonsInKiloPound">
            <summary>
            The Newtons in one kilo pound (kip).
            </summary>
        </member>
        <member name="F:Fusion.Force.NewtonsInKilogramForce">
            <summary>
            The Newtons in one kilogram force (kgf).
            </summary>
        </member>
        <member name="F:Fusion.Force.NewtonsInTonneForce">
            <summary>
            The newtons in one tonne force (T).
            </summary>
        </member>
        <member name="M:Fusion.Force.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Force" /> struct.
            </summary>
            <param name="newtons">The force in Newtons.</param>
        </member>
        <member name="P:Fusion.Force.Newtons">
            <summary>
            Gets the force in newtons.
            </summary>
            <value>The force in newtons.</value>
        </member>
        <member name="M:Fusion.Force.op_Equality(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Inequality(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_LessThan(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_LessThanOrEqual(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_GreaterThan(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_GreaterThanOrEqual(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Addition(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_UnaryNegation(Fusion.Force)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Subtraction(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Multiply(Fusion.Force,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Multiply(System.Double,Fusion.Force)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Division(Fusion.Force,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Division(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.op_Modulus(Fusion.Force,Fusion.Force)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Force.IsInfinity(Fusion.Force)">
            <summary>
            Determines whether the force represents an infinity.
            </summary>
            <param name="force">The force.</param>
            <returns>True if the force represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.IsPositiveInfinity(Fusion.Force)">
            <summary>
            Determines whether the force represents a positive infinity.
            </summary>
            <param name="force">The force.</param>
            <returns>True if the force represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.IsNegativeInfinity(Fusion.Force)">
            <summary>
            Determines whether the force represents a negative infinity.
            </summary>
            <param name="force">The force.</param>
            <returns>True if the force represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.IsNaN(Fusion.Force)">
            <summary>
            Determines whether the force represents a value that is not a number.
            </summary>
            <param name="force">The force.</param>
            <returns>True if the force represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.Abs(Fusion.Force)">
            <summary>
            Returns the absolute value of the force.
            </summary>
            <param name="force">The force.</param>
            <returns>The absolute value of the force.</returns>
        </member>
        <member name="M:Fusion.Force.Max(Fusion.Force,Fusion.Force)">
            <summary>
            Returns the maximum value of two forces.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value of two forces.</returns>
        </member>
        <member name="M:Fusion.Force.Min(Fusion.Force,Fusion.Force)">
            <summary>
            Returns the minimum value of two forces.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value of two forces.</returns>
        </member>
        <member name="M:Fusion.Force.Round(Fusion.Force,Fusion.Force,Fusion.RoundingMode)">
            <summary>
            Returns the force rounded to the specified precision unit.
            </summary>
            <param name="force">The force.</param>
            <param name="precision">The precision unit.</param>
            <param name="roundingMode">The rounding mode.</param>
            <returns>The rounded force.</returns>
        </member>
        <member name="M:Fusion.Force.Sign(Fusion.Force)">
            <summary>
            Returns the sign of the force value.
            </summary>
            <param name="force">The force.</param>
            <returns>The sign of the force value.</returns>
        </member>
        <member name="M:Fusion.Force.From(System.Double,Fusion.ForceUnit)">
            <summary>
            Creates an instance of the <see cref="T:Fusion.Force" /> struct from the specified force and unit.
            </summary>
            <param name="force">The force in the specified units.</param>
            <param name="forceUnit">The force unit.</param>
            <returns>The <see cref="T:Fusion.Force" /> struct with the specified force.</returns>
        </member>
        <member name="M:Fusion.Force.CompareTo(System.Object)">
            <summary>
            Compares the force to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Force" />.</exception>
        </member>
        <member name="M:Fusion.Force.CompareTo(Fusion.Force)">
            <summary>
            Compares the two forces.
            </summary>
            <param name="other">The other force.</param>
            <returns>Integer value that indicates the relative order of the two forces.</returns>
        </member>
        <member name="M:Fusion.Force.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.Equals(Fusion.Force)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Force.Near(Fusion.Force,System.Int32)">
            <summary>
            Determines whether the two forces are near to each other.
            </summary>
            <param name="other">The other force.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the forces are near to each other, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Force.To(Fusion.ForceUnit)">
            <summary>
            Converts the <see cref="T:Fusion.Force" /> struct to the specified force units.
            </summary>
            <param name="forceUnit">The force unit.</param>
            <returns>The force in the specified units.</returns>
        </member>
        <member name="M:Fusion.Force.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Force.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.ForceUnit">
            <summary>
            Force units.
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.Newton">
            <summary>
            Newton force unit.
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.PoundForce">
            <summary>
            Pound force unit.
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.KiloPound">
            <summary>
            Kilopound force unit (kip) (Not the same as kilopond).
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.KilogramForce">
            <summary>
            Kilogram-force force unit (kgf).
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.TonneForce">
            <summary>
            The tonne force unit (T) or (Tf).
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.Kilonewton">
            <summary>
            The kilonewton force unit (kN).
            </summary>
        </member>
        <member name="F:Fusion.ForceUnit.Decanewton">
            <summary>
            The decanewton force unit (daN).
            </summary>
        </member>
        <member name="T:Fusion.FormattedResourcesAttribute">
            <summary>
            Declares the formatted resources for the annotated application or application feature class. Formatted resources are loaded after all other resources.
            </summary>
            <remarks>
            Formatted resources can contain references to other resources with "{ResourceKey}" syntax where the ResourceKey is a key for a previously loaded resource.
            </remarks>
        </member>
        <member name="M:Fusion.FormattedResourcesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.FormattedResourcesAttribute" /> class.
            </summary>
            <param name="resourcePath">The resource path.</param>
        </member>
        <member name="T:Fusion.Formatting.DensityFormatter">
            <summary>
            Density formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DensityFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DensityFormatter.Default">
            <summary>
            The default instance.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DensityFormatter.NewtonsInKilogram">
            <summary>
            The newtons in kilogram.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DensityFormatter.KilonewtonsInKilogram">
            <summary>
            The kilonewtons in kilogram.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DensityFormatter.PoundsPerSquareFootInKilogramsPerSquareMeter">
            <summary>
            The kilograms per square meter in pounds per square foot.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DensityFormatter"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.#ctor(Fusion.DensityUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DensityFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.#ctor(Fusion.DensityUnit,Fusion.DensityUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DensityFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.#ctor(Fusion.DensityUnit,Fusion.DensityUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DensityFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.ToString(System.Double,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="value">The value.</param>
            <param name="symbols">The symbols.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,System.Double@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="text">The text.</param>
            <param name="symbols">The symbols.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Fusion.Formatting.DensityFormatter.ConvertValue(System.Double,Fusion.DensityUnit)">
            <summary>
            Convert value according to ratio unit.
            </summary>
            <param name="value">Double value.</param>
            <param name="densityUnit">Density unit.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Fusion.Formatting.ForceFormatter">
            <summary>
            <see cref="T:Fusion.Force" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.ForceFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.ForceFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.ForceFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.#ctor(Fusion.ForceUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.ForceFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.#ctor(Fusion.ForceUnit,Fusion.ForceUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.ForceFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.#ctor(Fusion.ForceUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.ForceFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.#ctor(Fusion.ForceUnit,Fusion.ForceUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.ForceFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.ForceFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.ToString(Fusion.Force,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.ForceFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,Fusion.Force@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.IQuantityFormatter">
            <summary>
            Quantity formatter interface.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.IQuantityFormatter.ToString(System.Object,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.IQuantityFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.IFormatter">
            <summary>
            Formatter interface.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.IFormatter.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.IFormatter.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.Length4Formatter">
            <summary>
            Formatter for moment of inertia of an area and torsion constant.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.Length4Formatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.Length4Formatter.Default">
            <summary>
            The default.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.Length4Formatter.In4InMm4">
            <summary>
            The in4 in mm4.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Length4Formatter"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.#ctor(Fusion.Length4Units)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Length4Formatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.#ctor(Fusion.Length4Units,Fusion.Length4Units)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Length4Formatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.#ctor(Fusion.Length4Units,Fusion.Length4Units,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Length4Formatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.#ctor(Fusion.Length4Units,Fusion.Length4Units,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Length4Formatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.ToString(System.Double,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="value">The value.</param>
            <param name="symbols">The symbols.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,System.Double@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="text">The text.</param>
            <param name="symbols">The symbols.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Fusion.Formatting.Length4Formatter.ConvertValue(System.Double,Fusion.Length4Units)">
            <summary>
            Convert value according to ratio unit.
            </summary>
            <param name="value">Double value.</param>
            <param name="length4Units">Length4 unit.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Fusion.Formatting.RatioFormatter">
            <summary>
            Ratio formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.RatioFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.RatioFormatter.Default">
            <summary>
            The default ratio formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.RatioFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.#ctor(Fusion.RatioUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.RatioFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.#ctor(Fusion.RatioUnit,Fusion.RatioUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.RatioFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.#ctor(Fusion.RatioUnit,Fusion.RatioUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.RatioFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.ToString(System.Double,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="value">The value.</param>
            <param name="symbols">The symbols.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,System.Double@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="text">The text.</param>
            <param name="symbols">The symbols.</param>
            <param name="value">The value.</param>
            <returns>True if parsing successfull, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.RatioFormatter.ConvertValue(System.Double,Fusion.RatioUnit)">
            <summary>
            Convert value according to ratio unit.
            </summary>
            <param name="value">Double value.</param>
            <param name="ratioUnit">Ratio unit.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Fusion.Formatting.Regexes">
            <summary>
            The <see cref="T:Fusion.Formatting.Regexes"/> class provides the regular expression for parsing the formatted text.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.Regexes.DecimalFormat">
            <summary>
            The accepted decimal format.
            </summary>
        </member>
        <member name="T:Fusion.Formatting.WarpingFormatter">
            <summary>
            Warping formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.WarpingFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.WarpingFormatter.Default">
            <summary>
            The default.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.WarpingFormatter.In6InMm6">
            <summary>
            The in6 in mm6.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.WarpingFormatter"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.#ctor(Fusion.WarpingUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.WarpingFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.#ctor(Fusion.WarpingUnit,Fusion.WarpingUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.WarpingFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.#ctor(Fusion.WarpingUnit,Fusion.WarpingUnit,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.WarpingFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.#ctor(Fusion.WarpingUnit,Fusion.WarpingUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.WarpingFormatter"/> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.ToString(System.Double,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="value">The value.</param>
            <param name="symbols">The symbols.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,System.Double@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="text">The text.</param>
            <param name="symbols">The symbols.</param>
            <param name="value">The value.</param>
            <returns>Try if parsing successfull, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.WarpingFormatter.ConvertValue(System.Double,Fusion.WarpingUnit)">
            <summary>
            Converts the value.
            </summary>
            <param name="value">The value.</param>
            <param name="warpingUnit">The warping unit.</param>
            <returns>Converted double.</returns>
        </member>
        <member name="T:Fusion.Formatting.AreaFormatter">
            <summary>
            <see cref="T:Fusion.Area" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.AreaFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.AreaFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AreaFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.#ctor(Fusion.AreaUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AreaFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.#ctor(Fusion.AreaUnit,Fusion.AreaUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AreaFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.#ctor(Fusion.AreaUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AreaFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.#ctor(Fusion.AreaUnit,Fusion.AreaUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AreaFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.AreaFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.ToString(Fusion.Area,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.AreaFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,Fusion.Area@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.DateTimeFormatter">
            <summary>
            <see cref="T:System.DateTime" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DateTimeFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DateTimeFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DateTimeFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.#ctor(System.Globalization.DateTimeStyles,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DateTimeFormatter" /> class.
            </summary>
            <param name="dateTimeStyle">The <see cref="T:System.DateTime" /> style.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="P:Fusion.Formatting.DateTimeFormatter.DateTimeStyle">
            <summary>
            Gets the <see cref="T:System.DateTime" /> style.
            </summary>
            <value>The <see cref="T:System.DateTime" /> style.</value>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.DateTimeFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.ToString(System.DateTime)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.TryParse(System.String,System.DateTime@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.ReadDateTimeStyle(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Globalization.DateTimeStyles)">
            <summary>
            Reads the <see cref="T:System.DateTime" /> style.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The <see cref="T:System.DateTime" /> style.</returns>
        </member>
        <member name="M:Fusion.Formatting.DateTimeFormatter.WriteDateTimeStyle(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the <see cref="T:System.DateTime" /> style.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="T:Fusion.Formatting.AngleFormatter">
            <summary>
            <see cref="T:Fusion.Angle" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.AngleFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.AngleFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AngleFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.#ctor(Fusion.AngleUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AngleFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.#ctor(Fusion.AngleUnit,Fusion.AngleUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AngleFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AngleFormatter" /> class.
            </summary>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.#ctor(Fusion.AngleUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AngleFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.#ctor(Fusion.AngleUnit,Fusion.AngleUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.AngleFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.AngleFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.ToString(Fusion.Angle,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.AngleFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,Fusion.Angle@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.DoubleFormatter">
            <summary>
            <see cref="T:System.Double" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DoubleFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.DoubleFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.DoubleFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DoubleFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.DoubleFormatter.#ctor(System.Globalization.NumberStyles,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.DoubleFormatter" /> class.
            </summary>
            <param name="numberStyle">The number style.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.DoubleFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.DoubleFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.DoubleFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.DoubleFormatter.ToString(System.Double)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.DoubleFormatter.TryParse(System.String,System.Double@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.Formatter">
            <summary>
            An abstract base class for formatters.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.Formatter.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Formatter" /> class.
            </summary>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="P:Fusion.Formatting.Formatter.FormatString">
            <summary>
            Gets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="P:Fusion.Formatting.Formatter.FormatProvider">
            <summary>
            Gets the format provider.
            </summary>
            <value>The format provider.</value>
        </member>
        <member name="M:Fusion.Formatting.Formatter.ReadEnum``1(System.String,System.Collections.Generic.IDictionary{System.String,System.String},``0)">
            <summary>
            Reads an enumerated value.
            </summary>
            <typeparam name="TEnum">The type of the enumerated value.</typeparam>
            <param name="key">The key.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The enumerated value.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter.ReadFormatterNames(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter names.
            </summary>
            <param name="prefix">The name prefix.</param>
            <param name="settings">The formatter settings.</param>
            <returns>The formatter names.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter.ReadFormatString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the format string.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <returns>The format string.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter.ReadFormatProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the format provider.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <returns>The format provider.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter.WriteFormatString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the format string.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.Formatter.WriteFormatProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the format provider.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.Formatter.TryParseDouble(System.String,System.Double@)">
            <summary>
            Attempts to parse a double value.
            </summary>
            <param name="text">The text.</param>
            <param name="value">The output parameter for the value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter.TryParseDouble(System.String,System.Globalization.NumberStyles,System.Double@)">
            <summary>
            Attempts to parse a double value.
            </summary>
            <param name="text">The text.</param>
            <param name="numberStyles">The allowed number styles.</param>
            <param name="value">The output parameter for the value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.Formatter`1">
            <summary>
            An abstract base class for formatters.
            </summary>
            <typeparam name="T">The type of the formattable value.</typeparam>
        </member>
        <member name="M:Fusion.Formatting.Formatter`1.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Formatter`1" /> class.
            </summary>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.Formatter`1.ToString(`0)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter`1.ToString(System.Object)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter`1.TryParse(System.String,`0@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.Formatter`1.TryParse(System.String,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.InchSymbolPlacement">
            <summary>
            Inch symbol placement in the fractional format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.InchSymbolPlacement.AfterInches">
            <summary>
            Place the inch symbol after the whole inches.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.InchSymbolPlacement.AfterFractions">
            <summary>
            Places the inch symbol after the fractional inches.
            </summary>
        </member>
        <member name="T:Fusion.Formatting.Int32Formatter">
            <summary>
            <see cref="T:System.Int32" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.Int32Formatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.Int32Formatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.Int32Formatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Int32Formatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.Int32Formatter.#ctor(System.Globalization.NumberStyles,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.Int32Formatter" /> class.
            </summary>
            <param name="numberStyle">The number style.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.Int32Formatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.Int32Formatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.Int32Formatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.Int32Formatter.ToString(System.Int32)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.Int32Formatter.TryParse(System.String,System.Int32@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.LengthFormatter">
            <summary>
            <see cref="T:Fusion.Length" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat1">
            <summary>
            The 1/1" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat2">
            <summary>
            The 1/2" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat4">
            <summary>
            The 1/4" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat8">
            <summary>
            The 1/8" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat16">
            <summary>
            The 1/16" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat32">
            <summary>
            The 1/32" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat64">
            <summary>
            The 1/64" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat128">
            <summary>
            The 1/128" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat256">
            <summary>
            The 1/256" fractional length format.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat1">
            <summary>
            The signed fractional length format for 1/1.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat2">
            <summary>
            The signed fractional length format for 1/2.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat4">
            <summary>
            The signed fractional length format for 1/4.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat8">
            <summary>
            The signed fractional length format for 1/8.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat16">
            <summary>
            The signed fractional length format for 1/16.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat32">
            <summary>
            The signed fractional length format for 1/32.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat64">
            <summary>
            The signed fractional length format for 1/64.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat128">
            <summary>
            The signed fractional length format for 1/128.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.SignedFractionalFormat256">
            <summary>
            The signed fractional length format for 1/256.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.InchesInFoot">
            <summary>
            The inches in one foot.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.FractionalFormat">
            <summary>
            The accepted fractional formats.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.LengthFormatter.MixedFormat">
            <summary>
            The accepted mixed format string.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.LengthFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.#ctor(Fusion.LengthUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.LengthFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.#ctor(Fusion.LengthUnit,Fusion.LengthUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.LengthFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.#ctor(Fusion.LengthUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.LengthFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.#ctor(Fusion.LengthUnit,Fusion.LengthUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.LengthFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.LengthFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.ToString(Fusion.Length,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,Fusion.Length@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.ToFractionalString(Fusion.Length,Fusion.Formatting.UnitSymbols,System.Int32)">
            <summary>
            Returns a string that represents the length.
            </summary>
            <param name="value">The length.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="maximumFractionalDenominator">The maximum fractional denominator.</param>
            <returns>A string that represents the length.</returns>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.ToMixedString(Fusion.Length,Fusion.Formatting.UnitSymbols,System.String,System.String)">
            <summary>
            Returns a string that represents the length.
            </summary>
            <param name="value">The length.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="feetFormatString">The feet format string.</param>
            <param name="inchesFormatString">The inches format string.</param>
            <returns>A string that represents the length.</returns>
        </member>
        <member name="M:Fusion.Formatting.LengthFormatter.ToDecimalString(Fusion.Length,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string that represents the length.
            </summary>
            <param name="value">The length.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>A string that represents the length.</returns>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.IsFootFormatUnit">
            <summary>
            Returns true if the FormatUnit is one of international or US survey foot.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.IsInchFormatUnit">
            <summary>
            Returns true if the FormatUnit is one of international or US survey inch.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.InchUnit">
            <summary>
            Returns the appropriate inch unit (international or US survey) based on the formatter's Unit.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.FootUnit">
            <summary>
            Returns the appropriate foot unit (international or US survey) based on the formatter's Unit.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.YardUnit">
            <summary>
            Returns the appropriate yard unit (international or US survey) based on the formatter's Unit.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.MileUnit">
            <summary>
            Returns the appropriate mile unit (international or US survey) based on the formatter's Unit.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.InchFormatUnit">
            <summary>
            Returns the appropriate inch unit (international or US survey) based on the formatter's FormatUnit.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.LengthFormatter.FootFormatUnit">
            <summary>
            Returns the appropriate foot unit (international or US survey) based on the formatter's FormatUnit.
            </summary>
        </member>
        <member name="T:Fusion.Formatting.MassFormatter">
            <summary>
            <see cref="T:Fusion.Mass" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.MassFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.MassFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.MassFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.#ctor(Fusion.MassUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.MassFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.#ctor(Fusion.MassUnit,Fusion.MassUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.MassFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.#ctor(Fusion.MassUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.MassFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.#ctor(Fusion.MassUnit,Fusion.MassUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.MassFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.MassFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.ToString(Fusion.Mass,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.MassFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,Fusion.Mass@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Formatting.NumberFormatter`1">
            <summary>
            An abstract base class for number formatters.
            </summary>
            <typeparam name="TNumber">The type of the number.</typeparam>
        </member>
        <member name="M:Fusion.Formatting.NumberFormatter`1.#ctor(System.Globalization.NumberStyles,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.NumberFormatter`1"/> class.
            </summary>
            <param name="numberStyle">The number style.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="P:Fusion.Formatting.NumberFormatter`1.NumberStyle">
            <summary>
            Gets the number style.
            </summary>
            <value>The number style.</value>
        </member>
        <member name="M:Fusion.Formatting.NumberFormatter`1.ReadNumberStyle(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Globalization.NumberStyles)">
            <summary>
            Reads the number style.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The number style.</returns>
        </member>
        <member name="M:Fusion.Formatting.NumberFormatter`1.WriteNumberStyle(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Globalization.NumberStyles)">
            <summary>
            Writes the number style.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="T:Fusion.Formatting.QuantityFormatter`2">
            <summary>
            An abstract base class for quantity formatters.
            </summary>
            <typeparam name="TQuantity">The type of the formattable quantity.</typeparam>
            <typeparam name="TQuantityUnit">The type of the quantity unit.</typeparam>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.#ctor(`1,`1,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.QuantityFormatter`2"/> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="P:Fusion.Formatting.QuantityFormatter`2.Unit">
            <summary>
            Gets the default unit. This unit is used when the format cannot be determined from the input.
            </summary>
            <value>The default unit.</value>
        </member>
        <member name="P:Fusion.Formatting.QuantityFormatter`2.FormatUnit">
            <summary>
            Gets the format unit.
            </summary>
            <value>The format unit.</value>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.ToString(`0)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.ToString(`0,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.ToString(System.Object,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.TryParse(System.String,`0@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.TryParse(System.String,Fusion.Formatting.UnitSymbols,`0@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.TryParse(System.String,Fusion.Formatting.UnitSymbols,System.Object@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.ReadUnit(System.String,System.Collections.Generic.IDictionary{System.String,System.String},`1)">
            <summary>
            Reads the unit.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The unit.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.ReadFormatUnit(System.String,System.Collections.Generic.IDictionary{System.String,System.String},`1)">
            <summary>
            Reads the format unit.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The format unit.</returns>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.WriteUnit(System.String,System.Collections.Generic.IDictionary{System.String,System.String},`1)">
            <summary>
            Writes the unit.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Fusion.Formatting.QuantityFormatter`2.WriteFormatUnit(System.String,System.Collections.Generic.IDictionary{System.String,System.String},`1)">
            <summary>
            Writes the format unit.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="T:Fusion.Formatting.TimeSpanFormatter">
            <summary>
            <see cref="T:System.TimeSpan" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.TimeSpanFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.TimeSpanFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.TimeSpanFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.#ctor(System.Globalization.TimeSpanStyles,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.TimeSpanFormatter" /> class.
            </summary>
            <param name="timeSpanStyle">The <see cref="T:System.TimeSpan" /> style.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="P:Fusion.Formatting.TimeSpanFormatter.TimeSpanStyle">
            <summary>
            Gets the <see cref="T:System.TimeSpan" /> style.
            </summary>
            <value>The <see cref="T:System.TimeSpan" /> style.</value>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.TimeSpanFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.ToString(System.TimeSpan)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.TryParse(System.String,System.TimeSpan@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.ReadTimeSpanStyle(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Globalization.TimeSpanStyles)">
            <summary>
            Reads the <see cref="T:System.TimeSpan" /> style.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The <see cref="T:System.TimeSpan" /> style.</returns>
        </member>
        <member name="M:Fusion.Formatting.TimeSpanFormatter.WriteTimeSpanStyle(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the <see cref="T:System.TimeSpan" /> style.
            </summary>
            <param name="name">The formatter name.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="T:Fusion.Formatting.UnitSymbols">
            <summary>
            The unit symbols.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.UnitSymbols.Default">
            <summary>
            The default unit symbols.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.UnitSymbols.None">
            <summary>
            The object to use when no symbols are wanted. Modifying the property values has no effect.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.UnitSymbols.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.UnitSymbols" /> class.
            </summary>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SeparatorBetweenNumberAndUnitSymbol">
            <summary>
            Gets or sets the separator between the number and the unit symbol in the decimal format.
            </summary>
            <value>The separator between the number and the unit symbol. The default value is single space character.</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SeparatorBetweenFeetAndInches">
            <summary>
            Gets or sets the separator between feet and inches in the fractional format.
            </summary>
            <value>The separator between feet and inches. The default value is an empty string.</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SeparatorBetweenInchesAndFractions">
            <summary>
            Gets or sets the separator between whole inches and fractional inches in the fractional format.
            </summary>
            <value>The separator between whole inches and fractional inches. The default value is an empty string.</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.InchSymbolPlacement">
            <summary>
            Gets or sets the inch symbol placement in the fractional format.
            </summary>
            <value>The inch symbol placement. The default placement is after whole inches.</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Zero">
            <summary>
            Gets or sets the zero symbol.
            </summary>
            <value>The zero symbol. The default value is null.</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.NaN">
            <summary>
            Gets or sets the not-a-number symbol.
            </summary>
            <value>The not-a-number symbol. The default value is "NAN".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Infinity">
            <summary>
            Gets or sets the infinity symbol.
            </summary>
            <value>The infinity symbol. The default value is "INF".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.PositiveInfinity">
            <summary>
            Gets or sets the positive infinity symbol.
            </summary>
            <value>The positive infinity symbol. The default value is "+INF".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.NegativeInfinity">
            <summary>
            Gets or sets the negative infinity symbol.
            </summary>
            <value>The negative infinity symbol. The default value is "-INF".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Millimeter">
            <summary>
            Gets or sets the millimeter symbol.
            </summary>
            <value>The millimeter symbol. The default value is "mm".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Centimeter">
            <summary>
            Gets or sets the centimeter symbol.
            </summary>
            <value>The centimeter symbol. The default value is "cm".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Meter">
            <summary>
            Gets or sets the meter symbol.
            </summary>
            <value>The meter symbol. The default value is "m".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Inch">
            <summary>
            Gets or sets the inch symbol.
            </summary>
            <value>The inch symbol. The default value is "in".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Foot">
            <summary>
            Gets or sets the foot symbol.
            </summary>
            <value>The foot symbol. The default value is "ft".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Degree">
            <summary>
            Gets or sets the degree symbol.
            </summary>
            <value>The degree symbol. The default value is "".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Radian">
            <summary>
            Gets or sets the radian symbol.
            </summary>
            <value>The radian symbol. The default value is "".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Yard">
            <summary>
            Gets or sets the yard symbol.
            </summary>
            <value>The yard symbol. The default value is "yd".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Kilometer">
            <summary>
            Gets or sets the Kilometer symbol.
            </summary>
            <value>The Kilometer symbol. The default value is "km".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Mile">
            <summary>
            Gets or sets the Mile symbol.
            </summary>
            <value>The Mile symbol. The default value is "mi".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.USSurveyInch">
            <summary>
            Gets or sets the US survey inch symbol.
            </summary>
            <value>The US survey inch symbol. The default value is "in".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.USSurveyFoot">
            <summary>
            Gets or sets the US survey foot symbol.
            </summary>
            <value>The US survey foot symbol. The default value is "ft".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.USSurveyYard">
            <summary>
            Gets or sets the US survey yard symbol.
            </summary>
            <value>The US survey yard symbol. The default value is "yd".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.USSurveyMile">
            <summary>
            Gets or sets the US survey Mile symbol.
            </summary>
            <value>The US survey Mile symbol. The default value is "mi".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SquareMillimeter">
            <summary>
            Gets or sets the square millimeter symbol.
            </summary>
            <value>The square millimeter symbol. The default value is "mm2".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SquareCentimeter">
            <summary>
            Gets or sets the square centimeter symbol.
            </summary>
            <value>The square centimeter symbol. The default value is "cm2".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SquareMeter">
            <summary>
            Gets or sets the square meter symbol.
            </summary>
            <value>The square meter symbol. The default value is "m2".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SquareInch">
            <summary>
            Gets or sets the square inch symbol.
            </summary>
            <value>The square inch symbol. The default value is "in2".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SquareFoot">
            <summary>
            Gets or sets the square foot symbol.
            </summary>
            <value>The square foot symbol. The default value is "ft2".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.SquareYard">
            <summary>
            Gets or sets the square yard symbol.
            </summary>
            <value>The square yard symbol. The default value is "yd2".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.CubicMillimeter">
            <summary>
            Gets or sets the cubic millimeter symbol.
            </summary>
            <value>The cubic millimeter symbol. The default value is "mm3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.CubicCentimeter">
            <summary>
            Gets or sets the cubic centimeter symbol.
            </summary>
            <value>The cubic centimeter symbol. The default value is "cm3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.CubicMeter">
            <summary>
            Gets or sets the cubic meter symbol.
            </summary>
            <value>The cubic meter symbol. The default value is "m3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.CubicInch">
            <summary>
            Gets or sets the cubic inch symbol.
            </summary>
            <value>The cubic inch symbol. The default value is "in3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.CubicFoot">
            <summary>
            Gets or sets the cubic foot symbol.
            </summary>
            <value>The cubic foot symbol. The default value is "ft3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.CubicYard">
            <summary>
            Gets or sets the cubic yard symbol.
            </summary>
            <value>The cubic yard symbol. The default value is "yd3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Liter">
            <summary>
            Gets or sets the liter symbol.
            </summary>
            <value>The liter symbol. The default value is "l".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Gallon">
            <summary>
            Gets or sets the US gallon symbol.
            </summary>
            <value>The US gallon symbol. The default value is "gal".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Kilogram">
            <summary>
            Gets or sets the kilogram symbol.
            </summary>
            <value>The kilogram symbol. The default value is "kg".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Tonne">
            <summary>
            Gets or sets the metric tonne symbol.
            </summary>
            <value>The metric tonne symbol. The default value is "t".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.TonneCapitalized">
            <summary>
            Gets or sets the metric tonne symbol.
            </summary>
            <value>The metric tonne symbol. The default value is "T".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Pound">
            <summary>
            Gets or sets the US pound symbol.
            </summary>
            <value>The US pound symbol. The default value is "lb".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.ShortTon">
            <summary>
            Gets or sets the US short ton symbol.
            </summary>
            <value>The US short ton symbol. The default value is "sh tn".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Ounce">
            <summary>
            Gets or sets the Ounce symbol.
            </summary>
            <value>The Ounce symbol. The default value is "oz".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Milligram">
            <summary>
            Gets or sets the Milligram symbol.
            </summary>
            <value>The Milligram symbol. The default value is "mg".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Gram">
            <summary>
            Gets or sets the Gram symbol.
            </summary>
            <value>The Gram symbol. The default value is "g".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Newton">
            <summary>
            Gets or sets the Newton symbol.
            </summary>
            <value>The Newton symbol. The default value is "N".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Decanewton">
            <summary>
            Gets or sets the decanewton.
            </summary>
            <value>The decanewton. The default value is "daN".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Kilonewton">
            <summary>
            Gets or sets the Kilonewton symbol.
            </summary>
            <value>The kilonewton. The default value is "kN".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.PoundForce">
            <summary>
            Gets or sets the pound-force symbol.
            </summary>
            <value>The pound-force symbol. The default value is "lbf".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.KiloPound">
            <summary>
            Gets or sets the KiloPound (kip) symbol.
            </summary>
            <value>The KiloPound (kip) symbol. The default value is "kip".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.KilogramForce">
            <summary>
            Gets or sets the kilogram-force symbol.
            </summary>
            <value>The kilogram-force symbol. The default value is "kgf".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Percent">
            <summary>
            Gets or sets the percent symbol.
            </summary>
            <value>The percent symbol. The default value is "%".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Permille">
            <summary>
            Gets or sets the permille symbol.
            </summary>
            <value>The permille symbol. The default value is "‰".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.KilogramsPerCubicMeter">
            <summary>
            Gets or sets the kilograms per cubic meter.
            </summary>
            <value>The kilograms per cubic meter. The default value is "kg/m3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.TonsPerCubicMeter">
            <summary>
            Gets or sets the tons per cubic meter.
            </summary>
            <value>The tons per cubic meter. The default value is "T/m3" </value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.NewtonsPerCubicMeter">
            <summary>
            Gets or sets the newtons per cubic meter.
            </summary>
            <value>The newtons per cubic meter. The default value is "N/m3"</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.KilonewtonsPerCubicMeter">
            <summary>
            Gets or sets the kilonewtons per cubic meter.
            </summary>
            <value>The kilonewtons per cubic meter. The default value is "kN/m3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.PoundForcePerCubicFoot">
            <summary>
            Gets or sets the pound force per cubic foot.
            </summary>
            <value>The pound force per cubic foot. The default value is "lbf/ft3".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Length4Millimeter">
            <summary>
            Gets or sets the length4 millimeter.
            </summary>
            <value>The length4 millimeter. The default value is "mm4".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Length4Centimeter">
            <summary>
            Gets or sets the length4 centimeter.
            </summary>
            <value>The length4 centimeter. The default value is "cm4".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.Length4Inch">
            <summary>
            Gets or sets the length4 inch.
            </summary>
            <value>The length4 inch. The default value is "in4".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.WarpingMillimeter">
            <summary>
            Gets or sets the warping millimeter.
            </summary>
            <value>The warping millimeter. The default value is "mm6".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.WarpingCentimeter">
            <summary>
            Gets or sets the warping centimeter.
            </summary>
            <value>The warping centimeter. The default value is "cm6".</value>
        </member>
        <member name="P:Fusion.Formatting.UnitSymbols.WarpingInch">
            <summary>
            Gets or sets the warping inch.
            </summary>
            <value>The warping length4 inch. The default value is "in6".</value>
        </member>
        <member name="T:Fusion.Formatting.VolumeFormatter">
            <summary>
            <see cref="T:Fusion.Volume" /> formatter.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.VolumeFormatter.NamePrefix">
            <summary>
            The formatter name prefix.
            </summary>
        </member>
        <member name="F:Fusion.Formatting.VolumeFormatter.Default">
            <summary>
            The default formatter.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.VolumeFormatter" /> class.
            </summary>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.#ctor(Fusion.VolumeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.VolumeFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.#ctor(Fusion.VolumeUnit,Fusion.VolumeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.VolumeFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.#ctor(Fusion.VolumeUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.VolumeFormatter" /> class.
            </summary>
            <param name="unit">The unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.#ctor(Fusion.VolumeUnit,Fusion.VolumeUnit,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Formatting.VolumeFormatter" /> class.
            </summary>
            <param name="unit">The default unit.</param>
            <param name="formatUnit">The format unit.</param>
            <param name="formatString">The format string.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.ReadSettings(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads the formatter settings.
            </summary>
            <param name="settings">The formatter settings.</param>
            <returns>The named formatters.</returns>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.WriteSettings(System.Collections.Generic.IDictionary{System.String,Fusion.Formatting.VolumeFormatter},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes the formatter settings.
            </summary>
            <param name="formatters">The named formatters.</param>
            <param name="settings">The formatter settings.</param>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.ToString(Fusion.Volume,Fusion.Formatting.UnitSymbols)">
            <summary>
            Returns a string representation of the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="symbols">The localized unit symbols.</param>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="M:Fusion.Formatting.VolumeFormatter.TryParse(System.String,Fusion.Formatting.UnitSymbols,Fusion.Volume@)">
            <summary>
            Attempts to parse the specified string.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="symbols">The localized unit symbols.</param>
            <param name="value">The output variable for the parsed value.</param>
            <returns>True if the value was parsed, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Graphics.GPU">
            <summary>
            The graphics processing unit.
            </summary>
            <summary>
            The graphics processing unit.
            </summary>
            <summary>
            The graphics processing unit.
            </summary>
            <summary>
            The graphics processing unit.
            </summary>
            <summary>
            The graphics processing unit.
            </summary>
            <summary>
            The graphics processing unit.
            </summary>
            <summary>
            The graphics processing unit.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.View">
            <summary>
            View element that displays the GPU output.
            </summary>
            <summary>
            View element that displays the GPU output.
            </summary>
            <summary>
            View element that displays the GPU output.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.BindDefaultFramebuffer">
            <summary>
            Binds the default framebuffer.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.BeginAnimation">
            <summary>
            Begins the animation.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.EndAnimation">
            <summary>
            Ends the animation.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.ActiveViews">
            <summary>
            The active view instances.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Opengl32dll">
            <summary>
            The module handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.WndProcRef">
            <summary>
            The window procedure reference.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.WndClass">
            <summary>
            The window class description.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.rc">
            <summary>
            The rendering context handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.parentHwndSource">
            <summary>
            The parent HWND source.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.dc">
            <summary>
            The device context handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.width">
            <summary>
            The view width.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.height">
            <summary>
            The view height.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.mouseX">
            <summary>
            The mouse X coordinate relative to the view.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View._mouseX">
            <summary>
            The mouse X coordinate relative to the view.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.mouseY">
            <summary>
            The mouse Y coordinate relative to the view.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View._mouseY">
            <summary>
            The mouse Y coordinate relative to the view.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.gesture">
            <summary>
            The current gesture.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.zoomAmount">
            <summary>
            The zoom steps.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Fusion.Graphics.GPU.View"/> class.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.View.Gesture">
            <summary>
            Input gestures.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Gesture.None">
            <summary>
            No gesture.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Gesture.LeftDown">
            <summary>
            Left button down.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Gesture.RightDown">
            <summary>
            Right button down.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Gesture.Rotating">
            <summary>
            Rotating gesture.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Gesture.Panning">
            <summary>
            Panning gesture.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.Gesture.Zooming">
            <summary>
            Zooming gesture.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.RequestRedraw">
            <summary>
            Requests redraw for the view.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
            <summary>
            Creates the native control.
            </summary>
            <param name="hwndParent">The parent window handle.</param>
            <returns>The native control handle.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
            <summary>
            Destroys the native control.
            </summary>
            <param name="hwnd">The native control handle.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            When overridden in a derived class, accesses the window process (handle) of the hosted child window.
            </summary>
            <param name="hwnd">The window handle of the hosted window.</param>
            <param name="msg">The message to act upon.</param>
            <param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
            <param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
            <param name="handled">Whether events resulting should be marked handled.</param>
            <returns>The result code.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.ParentWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Accesses the window process (handle) of the parent window.
            </summary>
            <param name="hwnd">The window handle of the hosted window.</param>
            <param name="msg">The message to act upon.</param>
            <param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
            <param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
            <param name="handled">Whether events resulting should be marked handled.</param>
            <returns>The result code.</returns>
        </member>
        <member name="T:Fusion.Graphics.GPU.View.Win32">
            <summary>
            Native interface.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.frameTimeSource">
            <summary>
            The frame time source.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.frameIntervalSource">
            <summary>
            The frame interval source.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.frameCount">
            <summary>
            The frame count.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.redrawRequested">
            <summary>
            Indicates whether a redraw has been requested.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.framebuffer">
            <summary>
            The framebuffer handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.renderbuffer">
            <summary>
            The renderbuffer handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.View.animating">
            <summary>
            The animation event handler.
            </summary>
        </member>
        <member name="E:Fusion.Graphics.GPU.View.Animating">
            <summary>
            Occurs when the view is animating.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnSelect(Fusion.Float2)">
            <summary>
            Called when the user selects a point from the view.
            </summary>
            <param name="point">The selected point.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnPanning(Fusion.Float2)">
            <summary>
            Called when the user starts panning the view.
            </summary>
            <param name="point">The starting point.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnPanning(Fusion.Float2,Fusion.Float2)">
            <summary>
            Called when the user pans the view.
            </summary>
            <param name="point">The starting point.</param>
            <param name="delta">The delta from the starting point.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnRotating(Fusion.Float2)">
            <summary>
            Called when the user starts rotating the view.
            </summary>
            <param name="point">The starting point.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnRotating(Fusion.Float2,Fusion.Float2)">
            <summary>
            Called when the user rotates the view.
            </summary>
            <param name="point">The starting point.</param>
            <param name="delta">The delta from the starting point.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnZooming(Fusion.Float2)">
            <summary>
            Called when the user starts zooming the view.
            </summary>
            <param name="point">The center point.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.OnZooming(Fusion.Float2,System.Single)">
            <summary>
            Called when the user zooms the view.
            </summary>
            <param name="point">The center point.</param>
            <param name="delta">The delta in scale.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.Initialize">
            <summary>
            Initializes the view.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.Draw">
            <summary>
            Draws the view.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.Fill(System.Nullable{Fusion.RGBA},System.Boolean)">
            <summary>
            Fills the render target buffers.
            </summary>
            <param name="color">The fill color for the target color buffer.</param>
            <param name="depth">Indicates whether to fill the target depth buffer with the default value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.BeginTarget(System.Int32,System.Int32,Fusion.Graphics.GPU.Texture,Fusion.Graphics.GPU.Texture,Fusion.Graphics.Scaling,Fusion.Graphics.Mipmapping,Fusion.Graphics.Wrapping)">
            <summary>
            Sets up a new render target.
            </summary>
            <param name="width">The render target width.</param>
            <param name="height">The render target height.</param>
            <param name="colorTarget">The color target texture.</param>
            <param name="depthTarget">The depth target texture.</param>
            <param name="scaling">The target texture scaling mode.</param>
            <param name="mipmapping">The target texture mipmapping mode.</param>
            <param name="wrapping">The target texture wrapping mode.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.EndTarget">
            <summary>
            Restores the default render target.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.View.Draw(System.Int32,System.Int32)">
            <summary>
            Draws a frame.
            </summary>
            <param name="width">The frame width.</param>
            <param name="height">The frame height.</param>
        </member>
        <member name="P:Fusion.Graphics.GPU.TargetWidth">
            <summary>
            Gets the render target width.
            </summary>
            <value>The render target width.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.TargetHeight">
            <summary>
            Gets the render target height.
            </summary>
            <value>The render target height.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.FrameWidth">
            <summary>
            Gets the frame width.
            </summary>
            <value>The frame width.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.FrameHeight">
            <summary>
            Gets the frame height.
            </summary>
            <value>The frame height.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.FrameNumber">
            <summary>
            Gets the frame number.
            </summary>
            <value>The frame number.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.FrameTime">
            <summary>
            Gets the frame timestamp in seconds. This is the time since the beginning of the first frame.
            </summary>
            <value>The frame timestamp in seconds.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.FrameInterval">
            <summary>
            Gets the frame interval in seconds. This is the time between the two most recent frames.
            </summary>
            <value>The frame interval in seconds.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.FrameDuration">
            <summary>
            Gets the frame duration in seconds. This is the time spent drawing the most recent frame, excluding any other processing.
            </summary>
            <value>The frame duration in seconds.</value>
        </member>
        <member name="T:Fusion.Graphics.GPU.Texture">
            <summary>
            GPU texture that stores rectangular data blocks in GPU accessible memory.
            </summary>
            <summary>
            Texture object that stores rectangular arrays of data in GPU memory.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Texture.Load(System.IO.Stream,Fusion.Graphics.Scaling,Fusion.Graphics.Mipmapping,Fusion.Graphics.Wrapping)">
            <summary>
            Loads the texture image.
            </summary>
            <param name="source">The image source stream.</param>
            <param name="scaling">The texture scaling mode.</param>
            <param name="mipmapping">The texture mipmapping mode.</param>
            <param name="wrapping">The texture wrapping mode.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="F:Fusion.Graphics.GPU.Texture.handle">
            <summary>
            The object handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Texture.sampler">
            <summary>
            The bound sampler.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Texture.generateMipmap">
            <summary>
            Indicates whether mipmap generation is pending.
            </summary>
        </member>
        <member name="P:Fusion.Graphics.GPU.Texture.Width">
            <summary>
            Gets the texture width.
            </summary>
            <value>The texture width.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Texture.Height">
            <summary>
            Gets the texture height.
            </summary>
            <value>The texture height.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Texture.Size">
            <summary>
            Gets the GPU texture size in bytes.
            </summary>
            <value>The size in bytes.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Texture.DebuggerDisplay">
            <summary>
            Gets the debugger display string.
            </summary>
            <value>The debugger display string.</value>
        </member>
        <member name="M:Fusion.Graphics.GPU.Texture.Fusion#Graphics#GPU#ITexture#Initialize(System.Int32,System.Int32,Fusion.Graphics.Scaling,Fusion.Graphics.Mipmapping,Fusion.Graphics.Wrapping)">
            <summary>
            Initializes the texture.
            </summary>
            <param name="width">The texture image width.</param>
            <param name="height">The texture image height.</param>
            <param name="scaling">The texture scaling mode.</param>
            <param name="mipmapping">The texture mipmapping mode.</param>
            <param name="wrapping">The texture wrapping mode.</param>
            <returns>The object handle.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.Texture.Dispose">
            <summary>
            Releases the GPU texture.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Texture.Bind">
            <summary>
            Binds the texture to a sampler.
            </summary>
            <returns>The sampler number.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.Texture.Bind(System.Boolean)">
            <summary>
            Binds the texture to a sampler.
            </summary>
            <param name="modify">Indicates whether to bind the texture for modifications.</param>
            <returns>The sampler number.</returns>
        </member>
        <member name="F:Fusion.Graphics.GPU.samplerAllocator">
            <summary>
            The sampler allocator.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.samplerTextures">
            <summary>
            The textures bound to samplers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.sampler">
            <summary>
            The active sampler.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.ITexture">
            <summary>
            Private texture object interface.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.ITexture.Initialize(System.Int32,System.Int32,Fusion.Graphics.Scaling,Fusion.Graphics.Mipmapping,Fusion.Graphics.Wrapping)">
            <summary>
            Initializes the texture.
            </summary>
            <param name="width">The texture image width.</param>
            <param name="height">The texture image height.</param>
            <param name="scaling">The texture scaling mode.</param>
            <param name="mipmapping">The texture mipmapping mode.</param>
            <param name="wrapping">The texture wrapping mode.</param>
            <returns>The object handle.</returns>
        </member>
        <member name="T:Fusion.Graphics.GPU.SamplerAllocator">
            <summary>
            Produces a repeating sequence of samplers from a fixed range.
            </summary>
            <remarks>
            Each texture object must be bound to a sampler in order to use it from a shader. The number of samplers
            is generally small (4 - 32) while the number of texture objects is often larger (~100). Changing the
            sampler binding is a somewhat slow operation, so we try to minimize the binding changes by treating
            the samplers as a cache.
            <para />
            We start by generating a repeating sequence of sampler index numbers from range [0, count) where the
            count is the total number of available samplers. When a texture object is used in a shader, we first
            check if the object is already bound to a sampler. If yes, we move the sampler to the end of the
            sequence. Otherwise we take the first sampler from the sequence and bind the texture object to it.
            This produces simple Least Recently Used (LRU) replacement policy.
            <para />
            The implementation is a circular queue of constant size, with an extra operation for finding and
            moving single item at the end of the queue. The operation is O(n), but the number of items is
            small, making it faster to rearrange the queue than to rebind the sampler.
            </remarks>
        </member>
        <member name="F:Fusion.Graphics.GPU.SamplerAllocator.samplers">
            <summary>
            The queued samplers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.SamplerAllocator.current">
            <summary>
            The index of the current sampler.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.SamplerAllocator.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Graphics.GPU.SamplerAllocator"/> class.
            </summary>
            <param name="count">The number of samplers. The produced values will be in range [0, count).</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.SamplerAllocator.Next">
            <summary>
            Returns the next sampler in the sequence.
            </summary>
            <returns>The next sampler in the sequence.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.SamplerAllocator.Used(System.Int32)">
            <summary>
            Marks the specified sampler as used by moving it to the end of the sequence.
            </summary>
            <param name="sampler">The used sampler.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.SamplerAllocator.Advance(System.Int32)">
            <summary>
            Returns the index of the next sampler in the sequence.
            </summary>
            <param name="index">The index of the current sampler.</param>
            <returns>The index of the next sampler in the sequence.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.SamplerAllocator.IndexOf(System.Int32)">
            <summary>
            Finds the index of the specified sampler.
            </summary>
            <param name="sampler">The sampler to find.</param>
            <returns>The index or -1 if the sampler was not found.</returns>
        </member>
        <member name="T:Fusion.Graphics.GPU.Geometry">
            <summary>
            Geometry object that stores vertex attributes and index values in the GPU memory.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.ValueBuffer">
            <summary>
            The value buffer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.IndexBuffer">
            <summary>
            The index buffer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.valueStart">
            <summary>
            The value buffer start position.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.valueCount">
            <summary>
            The value buffer element count.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.indexStart">
            <summary>
            The index buffer start position.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.indexCount">
            <summary>
            The index buffer element count.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.format">
            <summary>
            The vertex format.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.stride">
            <summary>
            The vertex stride.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.handle">
            <summary>
            The object handle.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.primitive">
            <summary>
            The primitive type.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.#ctor(Fusion.Graphics.Attrib,Fusion.Graphics.Attrib,Fusion.Graphics.Attrib,Fusion.Graphics.Attrib,Fusion.Graphics.Attrib,Fusion.Graphics.Attrib,Fusion.Graphics.Attrib,Fusion.Graphics.Attrib)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Graphics.GPU.Geometry"/> class.
            </summary>
            <param name="attrib0">The vertex attribute type at index 0. This is reserved for the vertex position.</param>
            <param name="attrib1">The vertex attribute type at index 1.</param>
            <param name="attrib2">The vertex attribute type at index 2.</param>
            <param name="attrib3">The vertex attribute type at index 3.</param>
            <param name="attrib4">The vertex attribute type at index 4.</param>
            <param name="attrib5">The vertex attribute type at index 5.</param>
            <param name="attrib6">The vertex attribute type at index 6.</param>
            <param name="attrib7">The vertex attribute type at index 7.</param>
        </member>
        <member name="P:Fusion.Graphics.GPU.Geometry.VertexCount">
            <summary>
            Gets the vertex count.
            </summary>
            <value>The vertex count.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Geometry.IndexCount">
            <summary>
            Gets the index count.
            </summary>
            <value>The index count.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Geometry.Size">
            <summary>
            Gets the size in bytes.
            </summary>
            <value>The size in bytes.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Geometry.Format">
            <summary>
            Gets the vertex format.
            </summary>
            <value>The vertex format.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Geometry.DebuggerDisplay">
            <summary>
            Gets the debugger display string.
            </summary>
            <value>The debugger display string.</value>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Dispose">
            <summary>
            Releases the GPU memory.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Begin(Fusion.Graphics.Construct,System.Int32,System.Int32)">
            <summary>
            Begins geometry construction.
            </summary>
            <param name="construct">The geometry construction mode.</param>
            <param name="vertexCount">The vertex count.</param>
            <param name="indexCount">The index count.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.End">
            <summary>
            Ends geometry construction.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Draw">
            <summary>
            Draws the geometry.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Byte4(Fusion.RGBA)">
            <summary>
            Writes a vertex attribute with 4 x 8-bit unsigned integers.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Byte4(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Writes a vertex attribute with 4 x 8-bit unsigned integers.
            </summary>
            <param name="r">The R component.</param>
            <param name="g">The G component.</param>
            <param name="b">The B component.</param>
            <param name="a">The A component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Short2(Fusion.Short2)">
            <summary>
            Writes a vertex attribute with 2 x 16-bit integers.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Short2(System.Int32,System.Int32)">
            <summary>
            Writes a vertex attribute with 2 x 16-bit integers.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Short4(Fusion.Short4)">
            <summary>
            Writes a vertex attribute with 4 x 16-bit integers.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Short4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a vertex attribute with 4 x 16-bit integers.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.UShort2(Fusion.UShort2)">
            <summary>
            Writes a vertex attribute with 2 x 16-bit unsigned integers.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.UShort2(System.Int32,System.Int32)">
            <summary>
            Writes a vertex attribute with 2 x 16-bit unsigned integers.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.UShort4(Fusion.UShort4)">
            <summary>
            Writes a vertex attribute with 4 x 16-bit unsigned integers.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.UShort4(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a vertex attribute with 4 x 16-bit unsigned integers.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float(System.Single)">
            <summary>
            Writes a vertex attribute with a 32-bit floating point value.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float2(Fusion.Float2)">
            <summary>
            Writes a vertex attribute with 2 x 32-bit floating point values.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float2(System.Single,System.Single)">
            <summary>
            Writes a vertex attribute with 2 x 32-bit floating point values.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float3(Fusion.Float3)">
            <summary>
            Writes a vertex attribute with 3 x 32-bit floating point values.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float3(System.Single,System.Single,System.Single)">
            <summary>
            Writes a vertex attribute with 3 x 32-bit floating point values.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float4(Fusion.Float4)">
            <summary>
            Writes a vertex attribute with 4 x 32-bit floating point values.
            </summary>
            <param name="attribute">The vertex attribute.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Float4(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a vertex attribute with 4 x 32-bit floating point values.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Index(System.Int32,System.Int32)">
            <summary>
            Writes an index value.
            </summary>
            <param name="index">The index value.</param>
            <param name="baseVertex">The base vertex index.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Index2(Fusion.UShort2,System.Int32)">
            <summary>
            Writes 2 index values.
            </summary>
            <param name="index">The index values.</param>
            <param name="baseVertex">The base vertex index.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Index2(System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes 2 index values.
            </summary>
            <param name="index1">The first index value.</param>
            <param name="index2">The second index value.</param>
            <param name="baseVertex">The base vertex index.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Index3(Fusion.UShort3,System.Int32)">
            <summary>
            Writes 3 index values.
            </summary>
            <param name="index">The index values.</param>
            <param name="baseVertex">The base vertex index.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.Index3(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes 3 index values.
            </summary>
            <param name="index1">The first index value.</param>
            <param name="index2">The second index value.</param>
            <param name="index3">The third index value.</param>
            <param name="baseVertex">The base vertex index.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.AllocateValueBuffer(System.Int32)">
            <summary>
            Allocates the value buffer.
            </summary>
            <param name="requested">The number of requested values.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.AllocateIndexBuffer(System.Int32)">
            <summary>
            Allocates the index buffer.
            </summary>
            <param name="requested">The number of requested indices.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.SizeOf(Fusion.Graphics.Attrib)">
            <summary>
            Gets the size of the vertex attribute type in bytes.
            </summary>
            <param name="attribute">The vertex attribute type.</param>
            <returns>The size in bytes.</returns>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.EnableArrays">
            <summary>
            Enables the vertex attribute arrays.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Geometry.DisableArrays">
            <summary>
            Disables the vertex attribute arrays.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.Geometry.Value">
            <summary>
            32 bit data structure that can represent a 32 bit integer, a 32 bit floating point number, two 16 bit integers or four 8 bit integers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.Size">
            <summary>
            The value size in bytes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.F">
            <summary>
            The value as a 32 bit floating point number.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.S1">
            <summary>
            The first half of the value as a 16 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.S2">
            <summary>
            The second half of the value as a 16 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.U1">
            <summary>
            The first half of the value as a 16 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.U2">
            <summary>
            The second half of the value as a 16 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.H1">
            <summary>
            The first half of the value as a 16 bit floating point number.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.H2">
            <summary>
            The second half of the value as a 16 bit floating point number.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.R">
            <summary>
            The first octet of the value as an 8 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.G">
            <summary>
            The second octet of the block value as an 8 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.B">
            <summary>
            The third octet of the value as an 8 bit integer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Geometry.Value.A">
            <summary>
            The fourth octet of the value as an 8 bit integer.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GL">
            <summary>
            OpenGL API constants.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GLBuffer">
            <summary>
            Buffer object handle.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GLFramebuffer">
            <summary>
            Frame buffer object handle.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GLProgram">
            <summary>
            Program object handle.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GLRenderbuffer">
            <summary>
            Render buffer object handle.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GLShader">
            <summary>
            Shader object handle.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.GLTexture">
            <summary>
            Texture object handle.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.Delegates">
            <summary>
            OpenGL 2.1 API delegates.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.blend">
            <summary>
            The blend mode.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.cull">
            <summary>
            The cull mode.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.depth">
            <summary>
            The depth processing options.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.GPU.Program">
            <summary>
            GPU program that controls the graphics pipeline.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.attributes">
            <summary>
            The vertex attribute declarations.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.varyings">
            <summary>
            The shader varying declarations.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.uniforms">
            <summary>
            The shader uniform declarations.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.uniformNames">
            <summary>
            The uniform names.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.uniformValues">
            <summary>
            The uniform values.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.uniformTextures">
            <summary>
            The uniform textures.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.GPU.Program.handle">
            <summary>
            The object handle.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Graphics.GPU.Program"/> class. Each vertex attribute declaration must contain the type and the name, e.g. "vec3 position".
            </summary>
            <param name="attrib0">The vertex attribute declaration at index 0. This attribute is reserved for vertex position.</param>
            <param name="attrib1">The vertex attribute declaration at index 1.</param>
            <param name="attrib2">The vertex attribute declaration at index 2.</param>
            <param name="attrib3">The vertex attribute declaration at index 3.</param>
            <param name="attrib4">The vertex attribute declaration at index 4.</param>
            <param name="attrib5">The vertex attribute declaration at index 5.</param>
            <param name="attrib6">The vertex attribute declaration at index 6.</param>
            <param name="attrib7">The vertex attribute declaration at index 7.</param>
        </member>
        <member name="P:Fusion.Graphics.GPU.Program.Uniform">
            <summary>
            Gets the shader uniform declarations. Each declaration must contain the type and the name, e.g. "mat4 Projection".
            </summary>
            <value>The shader uniform declarations.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Program.Varying">
            <summary>
            Gets the shader varying declarations. Each declaration must contain the type and the name, e.g. "vec4 v_normal".
            </summary>
            <value>The shader varying declarations.</value>
        </member>
        <member name="P:Fusion.Graphics.GPU.Program.VertexShader">
            <summary>
            Gets or sets the vertex shader source code. The shader must have a function called "main" that sets the "gl_Position" built-in global variable.
            </summary>
            <value>The vertex shader source code.</value>
            <example>
            <code>
            void main()
            {
                gl_Position = vec4(position, 1.0);
            }
            </code>
            </example>
        </member>
        <member name="P:Fusion.Graphics.GPU.Program.FragmentShader">
            <summary>
            Gets or sets the fragment shader source code. The shader must have a function called "main" that sets the "gl_FragColor" built-in global variable.
            </summary>
            <value>The fragment shader source code.</value>
            <example>
            <code>
            void main()
            {
                gl_FragColor = vec4(1.0);
            }
            </code>
            </example>
        </member>
        <member name="P:Fusion.Graphics.GPU.Program.DebuggerDisplay">
            <summary>
            Gets the debugger display string.
            </summary>
            <value>The debugger display string.</value>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.Dispose">
            <summary>
            Releases the GPU program.
            </summary>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.RGBA)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,System.Boolean)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,System.Single)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,System.Single[])">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float2)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float2[])">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float3)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float3[])">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float4)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float4[])">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float4x4)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Float4x4[])">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Plane)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Plane[])">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.SetUniform(System.String,Fusion.Graphics.GPU.Texture)">
            <summary>
            Sets the uniform value.
            </summary>
            <param name="name">The uniform name.</param>
            <param name="value">The uniform value.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.Use(Fusion.Graphics.Blend,Fusion.Graphics.Cull,Fusion.Graphics.Depth)">
            <summary>
            Configures the graphics pipeline.
            </summary>
            <param name="blend">The fragment blending mode.</param>
            <param name="cull">The face culling mode.</param>
            <param name="depth">The fragment depth processing options.</param>
        </member>
        <member name="M:Fusion.Graphics.GPU.Program.CompileShader(Fusion.Graphics.GPU.GL,System.String)">
            <summary>
            Compiles the shader.
            </summary>
            <param name="shaderType">The shader type.</param>
            <param name="sourceCode">The shader source code.</param>
            <returns>The shader handle.</returns>
        </member>
        <member name="T:Fusion.Graphics.Mipmapping">
            <summary>
            Mipmapping modes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Mipmapping.None">
            <summary>
            No mipmapping.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Mipmapping.Nearest">
            <summary>
            Use the nearest mipmap level.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Mipmapping.Linear">
            <summary>
            Use linear interpolation between the nearest mipmap levels.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Wrapping">
            <summary>
            Wrapping modes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Wrapping.None">
            <summary>
            No wrapping.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Wrapping.Repeat">
            <summary>
            Repeat from the opposite edge.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Scaling">
            <summary>
            Scaling modes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Scaling.Nearest">
            <summary>
            Use the nearest value.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Scaling.Linear">
            <summary>
            Use linear interpolation between the nearest values.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Attrib">
            <summary>
            Vertex attribute types.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.None">
            <summary>
            Not specified.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.RGBA">
            <summary>
            4 x unsigned 8-bit integers, normalized to [0, 1] range.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Short2">
            <summary>
            2 x signed 16-bit integers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Short2Normalized">
            <summary>
            2 x signed 16-bit integers, normalized to [-1, 1] range.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Short4">
            <summary>
            4 x signed 16-bit integers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Short4Normalized">
            <summary>
            4 x signed 16-bit integers, normalized to [-1, 1] range.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.UShort2">
            <summary>
            2 x unsigned 16-bit integers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.UShort2Normalized">
            <summary>
            2 x unsigned 16-bit integers, normalized to [0, 1] range.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.UShort4">
            <summary>
            4 x unsigned 16-bit integers.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.UShort4Normalized">
            <summary>
            4 x unsigned 16-bit integers, normalized to [0, 1] range.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Float">
            <summary>
            1 x 32-bit floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Float2">
            <summary>
            2 x 32-bit floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Float3">
            <summary>
            3 x 32-bit floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Attrib.Float4">
            <summary>
            4 x 32-bit floating point values.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Blend">
            <summary>
            Fragment blending modes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Blend.None">
            <summary>
            No fragment blending.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Blend.Alpha">
            <summary>
            Blend fragments by their alpha values.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Cull">
            <summary>
            Face culling modes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Cull.None">
            <summary>
            No face culling.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Cull.BackFaces">
            <summary>
            Cull back faces.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Depth">
            <summary>
            Fragment depth processing options.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Depth.None">
            <summary>
            No fragment depth processing.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Depth.Test">
            <summary>
            Test fragment depth against the depth buffer.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Depth.Write">
            <summary>
            Write fragment depth to the depth buffer.
            </summary>
        </member>
        <member name="T:Fusion.Graphics.Construct">
            <summary>
            Graphics primitive construction modes.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Construct.Points">
            <summary>
            Construct a point for each vertex.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Construct.Lines">
            <summary>
            Construct a line segment for each vertex pair.
            </summary>
        </member>
        <member name="F:Fusion.Graphics.Construct.Triangles">
            <summary>
            Construct a triangle for each vertex triplet.
            </summary>
        </member>
        <member name="T:Fusion.ICommandObserver">
            <summary>
            Command observer interface.
            </summary>
        </member>
        <member name="M:Fusion.ICommandObserver.HandlerMissing(Fusion.ViewModel,System.String)">
            <summary>
            Called when a missing command handler is detected.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
        </member>
        <member name="M:Fusion.ICommandObserver.Executing(Fusion.ViewModel,System.String,System.Object)">
            <summary>
            Called when a command is executing.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.ICommandObserver.Executed(Fusion.ViewModel,System.String,System.Object)">
            <summary>
            Called when a command has been executed.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:Fusion.ICommandObserver.UnhandledException(Fusion.ViewModel,System.String,System.Exception)">
            <summary>
            Called when a command caused an unhandled exception.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="commandName">The command name.</param>
            <param name="exception">The unhandled exception.</param>
        </member>
        <member name="T:Fusion.IHelpProvider">
            <summary>
            Help provider.
            </summary>
        </member>
        <member name="M:Fusion.IHelpProvider.RequestHelp(System.String)">
            <summary>
            Requests help for the specified topic.
            </summary>
            <param name="topic">The help topic.</param>
        </member>
        <member name="T:Fusion.IHost">
            <summary>
            Host interface.
            </summary>
        </member>
        <member name="P:Fusion.IHost.Diagnostics">
            <summary>
            Gets the host diagnostics.
            </summary>
            <value>The host diagnostics.</value>
        </member>
        <member name="P:Fusion.IHost.UI">
            <summary>
            Gets the host UI.
            </summary>
            <value>The host UI.</value>
        </member>
        <member name="P:Fusion.IHost.User">
            <summary>
            Gets the host user information.
            </summary>
            <value>The host user information.</value>
        </member>
        <member name="P:Fusion.IHost.Settings">
            <summary>
            Gets the host settings.
            </summary>
            <value>The host settings.</value>
        </member>
        <member name="P:Fusion.IHost.Recovery">
            <summary>
            Gets the host recovery information.
            </summary>
            <value>The host recovery information.</value>
        </member>
        <member name="P:Fusion.IHost.Session">
            <summary>
            Gets the host session information.
            </summary>
            <value>The host session information.</value>
        </member>
        <member name="P:Fusion.IHost.DataFolder">
            <summary>
            Gets the path to the host data folder.
            </summary>
            <value>The path to the host data folder.</value>
        </member>
        <member name="P:Fusion.IHost.TempFolder">
            <summary>
            Gets the path to the host temp folder.
            </summary>
            <value>The path to the host temp folder.</value>
        </member>
        <member name="M:Fusion.IHost.InvokeDomainLogic(System.Action)">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.IHost.InvokeDomainLogic``1(System.Func{``0})">
            <summary>
            Invokes an action in the dedicated domain logic processing thread.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="action">The action to invoke.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the operation.</returns>
        </member>
        <member name="M:Fusion.IHost.Invoke``1(System.Action{``0})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.IHost.Invoke``1(System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.IHost.Invoke``2(System.Func{``0,``1})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.IHost.Invoke``2(System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            Invokes the published method.
            </summary>
            <typeparam name="TPublishedMethodDelegate">The delegate type that specifies the method name and signature.</typeparam>
            <typeparam name="TResult">The method result type.</typeparam>
            <param name="invokeMethod">The callback that invokes the method delegate and returns the result.</param>
            <returns>The Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Fusion.IHost.StartExternalService(Fusion.RemoteObject)">
            <summary>
            Starts an external service.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Fusion.IHost.StartExternalProgram(System.String,System.String[])">
            <summary>
            Starts an external program. The connection name is passed as the first command line argument.
            </summary>
            <param name="path">The path to the external program. If the path is relative, the root is the application folder.</param>
            <param name="extraCommandLineArguments">The extra command line arguments.</param>
        </member>
        <member name="M:Fusion.IHost.Shutdown">
            <summary>
            Requests the host to shut down.
            </summary>
        </member>
        <member name="M:Fusion.IHost.Restart">
            <summary>
            Requests the host to shut down and restart.
            </summary>
        </member>
        <member name="T:Fusion.IHostDiagnostics">
            <summary>
            Host diagnostics.
            </summary>
        </member>
        <member name="M:Fusion.IHostDiagnostics.Error(System.String,System.Object[])">
            <summary>
            Writes an error message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.IHostDiagnostics.Warning(System.String,System.Object[])">
            <summary>
            Writes a warning message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.IHostDiagnostics.Information(System.String,System.Object[])">
            <summary>
            Writes an information message to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
        </member>
        <member name="M:Fusion.IHostDiagnostics.MeasurePerformance(System.String,System.Object[])">
            <summary>
            Measures the performance of an operation and writes the result to the host diagnostics log.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The formatted arguments.</param>
            <returns>The disposable token that ends the measurement.</returns>
        </member>
        <member name="T:Fusion.IHostUser">
            <summary>
            Host user information provider.
            </summary>
        </member>
        <member name="P:Fusion.IHostUser.Authentication">
            <summary>
            Gets the user authentication provider.
            </summary>
            <value>The user authentication provider.</value>
        </member>
        <member name="P:Fusion.IHostUser.Authorization">
            <summary>
            Gets the user authorization provider.
            </summary>
            <value>The user authorization provider.</value>
        </member>
        <member name="P:Fusion.IHostUser.Cookies">
            <summary>
            Gets the session cookies.
            </summary>
            <value>The session cookies.</value>
        </member>
        <member name="P:Fusion.IHostUser.Credentials">
            <summary>
            Gets the user credential provider.
            </summary>
            <value>The user credential provider.</value>
        </member>
        <member name="P:Fusion.IHostUser.Profile">
            <summary>
            Gets the user profile provider.
            </summary>
            <value>The user profile provider.</value>
        </member>
        <member name="T:Fusion.IKeyValueStore">
            <summary>
            Key-value store.
            </summary>
        </member>
        <member name="P:Fusion.IKeyValueStore.Count">
            <summary>
            Gets the number of entries in the store.
            </summary>
            <value>The number of entries in the store.</value>
        </member>
        <member name="P:Fusion.IKeyValueStore.Keys">
            <summary>
            Gets the keys in the store.
            </summary>
            <value>The keys in the store.</value>
        </member>
        <member name="P:Fusion.IKeyValueStore.Item(System.String)">
            <summary>
            Gets or sets the stored value for the specified key. Setting the value to null removes the entry.
            </summary>
            <param name="key">The key.</param>
            <returns>The stored value or null if the value is not available.</returns>
        </member>
        <member name="T:Fusion.INavigationController">
            <summary>
            Navigation controller.
            </summary>
        </member>
        <member name="P:Fusion.INavigationController.CanNavigateBack">
            <summary>
            Gets a value indicating whether the controller can navigate back.
            </summary>
            <value>True if the controller can navigate back, otherwise false.</value>
        </member>
        <member name="M:Fusion.INavigationController.Navigate(System.String,System.Object)">
            <summary>
            Navigates to the specified page.
            </summary>
            <param name="viewName">The view name.</param>
            <param name="parameter">The view parameter.</param>
        </member>
        <member name="M:Fusion.INavigationController.NavigateHome">
            <summary>
            Navigates to the home page.
            </summary>
        </member>
        <member name="M:Fusion.INavigationController.NavigateBack">
            <summary>
            Navigates to the previous page if any.
            </summary>
        </member>
        <member name="T:Fusion.InvokeIn">
            <summary>
            Method invocation context.
            </summary>
        </member>
        <member name="F:Fusion.InvokeIn.Default">
            <summary>
            Invokes the method in the default context.
            </summary>
        </member>
        <member name="F:Fusion.InvokeIn.Background">
            <summary>
            Invokes the method in a background context.
            </summary>
        </member>
        <member name="F:Fusion.InvokeIn.DomainLogic">
            <summary>
            Invokes the method in the domain logic processing context.
            </summary>
        </member>
        <member name="F:Fusion.InvokeIn.UI">
            <summary>
            Invokes the method in the user interface context.
            </summary>
        </member>
        <member name="T:Fusion.IPopupController">
            <summary>
            Popup controller.
            </summary>
        </member>
        <member name="M:Fusion.IPopupController.Close">
            <summary>
            Closes the popup.
            </summary>
        </member>
        <member name="T:Fusion.IRecovery">
            <summary>
            Application recovery information.
            </summary>
        </member>
        <member name="P:Fusion.IRecovery.Recover">
            <summary>
            Gets a value indicating whether the application should attempt to recover from a restart.
            </summary>
            <value>True if the application should attempt to recover from a restart, otherwise false.</value>
        </member>
        <member name="T:Fusion.ISession">
            <summary>
            Session information.
            </summary>
        </member>
        <member name="T:Fusion.ISettings">
            <summary>
            Application settings.
            </summary>
        </member>
        <member name="P:Fusion.ISettings.EnableExceptionHandling">
            <summary>
            Gets or sets a value indicating whether the application level exception handling is enabled. The default value is False.
            </summary>
            <value>True if the application level exception handling is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.ISettings.LocalizationMode">
            <summary>
            Gets or sets the application localization mode. The default value is <see cref="F:Fusion.LocalizationMode.Normal"/>.
            </summary>
            <value>The application localization mode.</value>
        </member>
        <member name="P:Fusion.ISettings.Culture">
            <summary>
            Gets or sets the application culture. The default value is "en-US".
            </summary>
            <value>The application culture.</value>
        </member>
        <member name="P:Fusion.ISettings.Theme">
            <summary>
            Gets or sets the application theme. The default value is "Generic".
            </summary>
            <value>The application theme.</value>
        </member>
        <member name="P:Fusion.ISettings.EnableMessageLogging">
            <summary>
            Gets or sets a value indicating whether the message logging is enabled. The default value is True.
            </summary>
            <value>True if the message logging is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.ISettings.EnableRecoveryAndRestart">
            <summary>
            Gets or sets a value indicating whether the application recovery and restart is enabled. The default value is True.
            </summary>
            <value>True if the application recovery and restart is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.ISettings.EnableSingleInstanceMode">
            <summary>
            Gets or sets a value indicating whether the single instance mode is enabled. The default value is False.
            </summary>
            <value>True if the single instance mode is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.ISettings.EnableWindowGhosting">
            <summary>
            Gets or sets a value indicating whether the window ghosting is enabled. The default value is True.
            </summary>
            <value>True if the window ghosting is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.ISettings.FeatureFolder">
            <summary>
            Gets or sets the application feature folder. Multiple folders can be specified, separated with a semicolon (;) character. The default value is "Features".
            </summary>
            <value>The application feature folder.</value>
        </member>
        <member name="T:Fusion.ItemsSource`1">
            <summary>
            Provides refresh support between an enumerable collection and a data binding.
            </summary>
            <typeparam name="T">The collection element type.</typeparam>
            <example>
            <code>
            <![CDATA[
            var list = new List<int>();
            var itemsSource = new ItemsSource<int>(list);
            
            list.Add(3);
            itemsSource.Refresh(); // Notifies the binding that the list has changed.
            ]]>
            </code>
            <code>
            <![CDATA[
            // String items source with simple filter.
            class StringItemsSource : ItemsSource<string>
            {
                private string filter;
            
                public StringItemsSource(IEnumerable<string> items) : base(items)
                {
                }
            
                public string Filter
                {
                    get
                    {
                        return this.filter;
                    }
            
                    set
                    {
                        if (this.SetValue(ref this.filter, value))
                        {
                            this.Refresh();
                        }
                    }
                }
            
                public override IEnumerator<string> GetEnumerator()
                {
                    foreach (var item in this.Items)
                    {
                        if (this.filter == null || this.filter.Length < 1 || item.StartsWith(this.filter, StringComparison.OrdinalIgnoreCase))
                        {
                            yield return item;
                        }
                    }
                }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Fusion.ItemsSource`1.items">
            <summary>
            The items source.
            </summary>
        </member>
        <member name="M:Fusion.ItemsSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ItemsSource`1" /> class.
            </summary>
            <param name="itemsSource">The items source.</param>
        </member>
        <member name="E:Fusion.ItemsSource`1.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:Fusion.ItemsSource`1.Items">
            <summary>
            Gets or sets the items source.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="M:Fusion.ItemsSource`1.Refresh">
            <summary>
            Notifies the binding that the item source has changed.
            </summary>
        </member>
        <member name="M:Fusion.ItemsSource`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.ItemsSource`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Fusion.Area">
            <summary>
            Area quantity.
            </summary>
        </member>
        <member name="F:Fusion.Area.Zero">
            <summary>
            The zero area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMillimeter">
            <summary>
            One square millimeter area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareCentimeter">
            <summary>
            One square centimeter area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMeter">
            <summary>
            One square meter area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareInch">
            <summary>
            One square inch area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareFoot">
            <summary>
            One square foot area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareYard">
            <summary>
            One square yard area.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMillimetersInSquareCentimeter">
            <summary>
            The square millimeters in one square centimeter.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMillimetersInSquareMeter">
            <summary>
            The square millimeters in one square meter.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMillimetersInSquareInch">
            <summary>
            The square millimeters in one square inch.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMillimetersInSquareFoot">
            <summary>
            The square millimeters in one square foot.
            </summary>
        </member>
        <member name="F:Fusion.Area.SquareMillimetersInSquareYard">
            <summary>
            The square millimeters in one square yard.
            </summary>
        </member>
        <member name="M:Fusion.Area.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Area" /> struct.
            </summary>
            <param name="squareMillimeters">The area in square millimeters.</param>
        </member>
        <member name="P:Fusion.Area.SquareMillimeters">
            <summary>
            Gets the area in square millimeters.
            </summary>
            <value>The area in square millimeters.</value>
        </member>
        <member name="M:Fusion.Area.op_Equality(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Inequality(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_LessThan(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_LessThanOrEqual(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_GreaterThan(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_GreaterThanOrEqual(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Addition(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_UnaryNegation(Fusion.Area)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Subtraction(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Multiply(Fusion.Area,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Multiply(System.Double,Fusion.Area)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Division(Fusion.Area,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Division(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.op_Modulus(Fusion.Area,Fusion.Area)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Area.IsInfinity(Fusion.Area)">
            <summary>
            Determines whether the area represents an infinity.
            </summary>
            <param name="area">The area.</param>
            <returns>True if the area represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.IsPositiveInfinity(Fusion.Area)">
            <summary>
            Determines whether the area represents a positive infinity.
            </summary>
            <param name="area">The area.</param>
            <returns>True if the area represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.IsNegativeInfinity(Fusion.Area)">
            <summary>
            Determines whether the area represents a negative infinity.
            </summary>
            <param name="area">The area.</param>
            <returns>True if the area represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.IsNaN(Fusion.Area)">
            <summary>
            Determines whether the area represents a value that is not a number.
            </summary>
            <param name="area">The area.</param>
            <returns>True if the area represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.Abs(Fusion.Area)">
            <summary>
            Returns the absolute value of the area.
            </summary>
            <param name="area">The area.</param>
            <returns>The absolute value of the area.</returns>
        </member>
        <member name="M:Fusion.Area.Max(Fusion.Area,Fusion.Area)">
            <summary>
            Returns the maximum value of two areas.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value of two areas.</returns>
        </member>
        <member name="M:Fusion.Area.Min(Fusion.Area,Fusion.Area)">
            <summary>
            Returns the minimum value of two areas.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value of two areas.</returns>
        </member>
        <member name="M:Fusion.Area.Round(Fusion.Area,Fusion.Area,Fusion.RoundingMode)">
            <summary>
            Returns the area rounded to the specified precision unit.
            </summary>
            <param name="area">The area.</param>
            <param name="precision">The precision unit.</param>
            <param name="roundingMode">The rounding mode.</param>
            <returns>The rounded area.</returns>
        </member>
        <member name="M:Fusion.Area.Sign(Fusion.Area)">
            <summary>
            Returns the sign of the area value.
            </summary>
            <param name="area">The area.</param>
            <returns>The sign of the area value.</returns>
        </member>
        <member name="M:Fusion.Area.From(System.Double,Fusion.AreaUnit)">
            <summary>
            Creates an instance of the <see cref="T:Fusion.Area" /> struct from the specified area and unit.
            </summary>
            <param name="area">The area in the specified units.</param>
            <param name="areaUnit">The area unit.</param>
            <returns>The <see cref="T:Fusion.Area" /> struct with the specified area.</returns>
        </member>
        <member name="M:Fusion.Area.CompareTo(System.Object)">
            <summary>
            Compares the area to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Area" />.</exception>
        </member>
        <member name="M:Fusion.Area.CompareTo(Fusion.Area)">
            <summary>
            Compares the two areas.
            </summary>
            <param name="other">The other area.</param>
            <returns>Integer value that indicates the relative order of the two areas.</returns>
        </member>
        <member name="M:Fusion.Area.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.Equals(Fusion.Area)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Area.Near(Fusion.Area,System.Int32)">
            <summary>
            Determines whether the two areas are near to each other.
            </summary>
            <param name="other">The other area.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the areas are near to each other, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Area.To(Fusion.AreaUnit)">
            <summary>
            Converts the <see cref="T:Fusion.Area" /> struct to the specified area units.
            </summary>
            <param name="areaUnit">The area unit.</param>
            <returns>The area in the specified units.</returns>
        </member>
        <member name="M:Fusion.Area.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Area.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.AreaUnit">
            <summary>
            Area units.
            </summary>
        </member>
        <member name="F:Fusion.AreaUnit.SquareMillimeter">
            <summary>
            Square millimeter area unit.
            </summary>
        </member>
        <member name="F:Fusion.AreaUnit.SquareCentimeter">
            <summary>
            Square centimeter area unit.
            </summary>
        </member>
        <member name="F:Fusion.AreaUnit.SquareMeter">
            <summary>
            Square meter area unit.
            </summary>
        </member>
        <member name="F:Fusion.AreaUnit.SquareInch">
            <summary>
            Square inch area unit.
            </summary>
        </member>
        <member name="F:Fusion.AreaUnit.SquareFoot">
            <summary>
            Square foot area unit.
            </summary>
        </member>
        <member name="F:Fusion.AreaUnit.SquareYard">
            <summary>
            Square yard area unit.
            </summary>
        </member>
        <member name="T:Fusion.BoundingBox">
            <summary>
            An axis-aligned bounding box.
            </summary>
        </member>
        <member name="F:Fusion.BoundingBox.Minimum">
            <summary>
            The minimum corner point.
            </summary>
        </member>
        <member name="F:Fusion.BoundingBox.Maximum">
            <summary>
            The maximum corner point.
            </summary>
        </member>
        <member name="M:Fusion.BoundingBox.#ctor(Fusion.Float3,Fusion.Float3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.BoundingBox" /> struct.
            </summary>
            <param name="minimum">The minimum corner point.</param>
            <param name="maximum">The maximum corner point.</param>
        </member>
        <member name="P:Fusion.BoundingBox.Empty">
            <summary>
            Gets an empty bounding box.
            </summary>
            <value>An empty bounding box.</value>
        </member>
        <member name="P:Fusion.BoundingBox.Center">
            <summary>
            Gets the center point.
            </summary>
            <value>The center point.</value>
        </member>
        <member name="P:Fusion.BoundingBox.Radius">
            <summary>
            Gets the radius of a sphere that contains the whole bounding box.
            </summary>
            <value>The radius of a sphere that contains the whole bounding box.</value>
        </member>
        <member name="P:Fusion.BoundingBox.IsEmpty">
            <summary>
            Gets a value indicating whether the bounding box is empty.
            </summary>
            <value>True if the bounding box is empty, otherwise false.</value>
        </member>
        <member name="M:Fusion.BoundingBox.op_Equality(Fusion.BoundingBox,Fusion.BoundingBox)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.op_Inequality(Fusion.BoundingBox,Fusion.BoundingBox)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.FromPoints(System.Collections.Generic.IEnumerable{Fusion.Float3})">
            <summary>
            Constructs a new bounding box that contains the specified points.
            </summary>
            <param name="points">The points.</param>
            <returns>The bounding box that contains the points.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Merge(Fusion.BoundingBox,Fusion.BoundingBox)">
            <summary>
            Merges the two bounding boxes.
            </summary>
            <param name="a">The first bounding box.</param>
            <param name="b">The second bounding box.</param>
            <returns>The merged bounding box.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Contains(Fusion.Float3)">
            <summary>
            Determines whether the bounding box contains a point.
            </summary>
            <param name="point">The point.</param>
            <returns>True if the bounding box contains the point, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Contains(Fusion.Triangle)">
            <summary>
            Determines whether the bounding box contains a triangle.
            </summary>
            <param name="triangle">The triangle.</param>
            <returns>True if the bounding box contains the triangle, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Contains(Fusion.TriangleMesh)">
            <summary>
            Determines whether the bounding box contains a triangle mesh.
            </summary>
            <param name="triangleMesh">The triangle mesh.</param>
            <returns>True if the bounding box contains the triangle mesh, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Contains(Fusion.BoundingBox)">
            <summary>
            Determines whether the bounding box contains another bounding box.
            </summary>
            <param name="boundingBox">The bounding box.</param>
            <returns>True if the bounding box contains the other bounding box, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Equals(Fusion.BoundingBox)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Intersects(Fusion.BoundingBox)">
            <summary>
            Determines whether the bounding box contains or intersects with another bounding box.
            </summary>
            <param name="boundingBox">The bounding box.</param>
            <returns>True if the bounding box contains or intersects with the other bounding box, otherwise false.</returns>
        </member>
        <member name="M:Fusion.BoundingBox.Near(Fusion.BoundingBox,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="T:Fusion.Disposable">
            <summary>
            <see cref="T:System.IDisposable" /> delegate adapter.
            </summary>
            <example>
            <code>
            <![CDATA[
            IDisposable InitiateOperation()
            {
                var token = Disposable.None;
                try
                {
                    token += new Disposable(() => FinalizeOnePart());
                    token += new Disposable(() => FinalizeOtherPart());
                    return token;
                }
                catch
                {
                    token.Dispose();
                    throw;
                }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Fusion.Disposable.None">
            <summary>
            The default instance that does nothing.
            </summary>
        </member>
        <member name="F:Fusion.Disposable.disposed">
            <summary>
            The delegate to a method that is invoked on dispose.
            </summary>
        </member>
        <member name="M:Fusion.Disposable.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Disposable" /> class.
            </summary>
            <param name="disposed">The delegate to a method that is invoked on dispose.</param>
        </member>
        <member name="M:Fusion.Disposable.op_Addition(Fusion.Disposable,System.IDisposable)">
            <summary>
            Combines the two disposable objects.
            </summary>
            <param name="a">The left hand side operand.</param>
            <param name="b">The right hand side operand.</param>
            <returns>The combined disposable object.</returns>
        </member>
        <member name="M:Fusion.Disposable.Dispose">
            <summary>
            Invokes the callback.
            </summary>
        </member>
        <member name="T:Fusion.Double2">
            <summary>
            A vector of 2 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Double2.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Double2.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="M:Fusion.Double2.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double2"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Double2.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double2"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="P:Fusion.Double2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Equality(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Inequality(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_UnaryPlus(Fusion.Double2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Addition(System.Double,Fusion.Double2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Addition(Fusion.Double2,System.Double)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Addition(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_UnaryNegation(Fusion.Double2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Subtraction(System.Double,Fusion.Double2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Subtraction(Fusion.Double2,System.Double)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Subtraction(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Multiply(System.Double,Fusion.Double2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Multiply(Fusion.Double2,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Multiply(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Division(System.Double,Fusion.Double2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Division(Fusion.Double2,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Division(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Modulus(System.Double,Fusion.Double2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Modulus(Fusion.Double2,System.Double)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Modulus(Fusion.Double2,Fusion.Double2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Implicit(Fusion.Short2)~Fusion.Double2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Implicit(Fusion.UShort2)~Fusion.Double2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Implicit(Fusion.Int2)~Fusion.Double2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Implicit(Fusion.Half2)~Fusion.Double2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.op_Implicit(Fusion.Float2)~Fusion.Double2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double2.IsInfinity(Fusion.Double2)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double2.IsPositiveInfinity(Fusion.Double2)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double2.IsNegativeInfinity(Fusion.Double2)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double2.IsNaN(Fusion.Double2)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double2.Abs(Fusion.Double2)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double2.Ceiling(Fusion.Double2)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Double2.Floor(Fusion.Double2)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Double2.Max(Fusion.Double2,Fusion.Double2)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Double2.Min(Fusion.Double2,Fusion.Double2)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Double2.Pow(System.Double,Fusion.Double2)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Double2.Pow(Fusion.Double2,System.Double)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Double2.Pow(Fusion.Double2,Fusion.Double2)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Double2.Round(Fusion.Double2)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Double2.Round(Fusion.Double2,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Double2.Round(Fusion.Double2,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Double2.Round(Fusion.Double2,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Double2.Sign(Fusion.Double2)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double2.Sqrt(Fusion.Double2)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double2.Truncate(Fusion.Double2)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double2.Equals(Fusion.Double2)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Double2.Near(Fusion.Double2,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Double2.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Double2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Double3">
            <summary>
            A vector of 3 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Double3.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Double3.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Double3.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="M:Fusion.Double3.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double3"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Double3.#ctor(System.Double,Fusion.Double2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
        </member>
        <member name="M:Fusion.Double3.#ctor(Fusion.Double2,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double3"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.Double3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="P:Fusion.Double3.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Double3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Equality(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Inequality(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_UnaryPlus(Fusion.Double3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Addition(System.Double,Fusion.Double3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Addition(Fusion.Double3,System.Double)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Addition(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_UnaryNegation(Fusion.Double3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Subtraction(System.Double,Fusion.Double3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Subtraction(Fusion.Double3,System.Double)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Subtraction(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Multiply(System.Double,Fusion.Double3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Multiply(Fusion.Double3,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Multiply(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Division(System.Double,Fusion.Double3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Division(Fusion.Double3,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Division(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Modulus(System.Double,Fusion.Double3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Modulus(Fusion.Double3,System.Double)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Modulus(Fusion.Double3,Fusion.Double3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Implicit(Fusion.Short3)~Fusion.Double3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Implicit(Fusion.UShort3)~Fusion.Double3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Implicit(Fusion.Int3)~Fusion.Double3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Implicit(Fusion.Half3)~Fusion.Double3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.op_Implicit(Fusion.Float3)~Fusion.Double3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double3.IsInfinity(Fusion.Double3)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double3.IsPositiveInfinity(Fusion.Double3)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double3.IsNegativeInfinity(Fusion.Double3)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double3.IsNaN(Fusion.Double3)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double3.Abs(Fusion.Double3)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double3.Ceiling(Fusion.Double3)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Double3.Floor(Fusion.Double3)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Double3.Max(Fusion.Double3,Fusion.Double3)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Double3.Min(Fusion.Double3,Fusion.Double3)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Double3.Pow(System.Double,Fusion.Double3)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Double3.Pow(Fusion.Double3,System.Double)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Double3.Pow(Fusion.Double3,Fusion.Double3)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Double3.Round(Fusion.Double3)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Double3.Round(Fusion.Double3,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Double3.Round(Fusion.Double3,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Double3.Round(Fusion.Double3,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Double3.Sign(Fusion.Double3)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double3.Sqrt(Fusion.Double3)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double3.Truncate(Fusion.Double3)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double3.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double3.Equals(Fusion.Double3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Double3.Near(Fusion.Double3,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Double3.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Double3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Double4">
            <summary>
            A vector of 4 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Double4.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Double4.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Double4.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="F:Fusion.Double4.W">
            <summary>
            The W component.
            </summary>
        </member>
        <member name="M:Fusion.Double4.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(System.Double,Fusion.Double3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yzw">The Y, Z and W components.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(Fusion.Double2,Fusion.Double2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(Fusion.Double3,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="xyz">The X, Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(System.Double,System.Double,Fusion.Double2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(System.Double,Fusion.Double2,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(Fusion.Double2,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Double4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Double4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="P:Fusion.Double4.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Double4.XYZ">
            <summary>
            Gets the X, Y and Z vector components.
            </summary>
            <value>The X, Y and Z vector components.</value>
        </member>
        <member name="P:Fusion.Double4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Equality(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Inequality(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_UnaryPlus(Fusion.Double4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Addition(System.Double,Fusion.Double4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Addition(Fusion.Double4,System.Double)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Addition(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_UnaryNegation(Fusion.Double4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Subtraction(System.Double,Fusion.Double4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Subtraction(Fusion.Double4,System.Double)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Subtraction(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Multiply(System.Double,Fusion.Double4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Multiply(Fusion.Double4,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Multiply(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Division(System.Double,Fusion.Double4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Division(Fusion.Double4,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Division(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Modulus(System.Double,Fusion.Double4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Modulus(Fusion.Double4,System.Double)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Modulus(Fusion.Double4,Fusion.Double4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Implicit(Fusion.RGBA)~Fusion.Double4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Implicit(Fusion.Short4)~Fusion.Double4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Implicit(Fusion.UShort4)~Fusion.Double4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Implicit(Fusion.Int4)~Fusion.Double4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Implicit(Fusion.Half4)~Fusion.Double4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.op_Implicit(Fusion.Float4)~Fusion.Double4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Double4.IsInfinity(Fusion.Double4)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double4.IsPositiveInfinity(Fusion.Double4)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double4.IsNegativeInfinity(Fusion.Double4)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double4.IsNaN(Fusion.Double4)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double4.Abs(Fusion.Double4)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double4.Ceiling(Fusion.Double4)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Double4.Floor(Fusion.Double4)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Double4.Max(Fusion.Double4,Fusion.Double4)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Double4.Min(Fusion.Double4,Fusion.Double4)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Double4.Pow(System.Double,Fusion.Double4)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Double4.Pow(Fusion.Double4,System.Double)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Double4.Pow(Fusion.Double4,Fusion.Double4)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Double4.Round(Fusion.Double4)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Double4.Round(Fusion.Double4,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Double4.Round(Fusion.Double4,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Double4.Round(Fusion.Double4,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Double4.Sign(Fusion.Double4)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double4.Sqrt(Fusion.Double4)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double4.Truncate(Fusion.Double4)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Double4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double4.Equals(Fusion.Double4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Double4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Double4.Near(Fusion.Double4,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Double4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Double4.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Half2">
            <summary>
            A vector of 2 16 bit floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Half2.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Half2.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="M:Fusion.Half2.#ctor(Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half2"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Half2.#ctor(Fusion.Half,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half2"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="P:Fusion.Half2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Equality(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Inequality(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_UnaryPlus(Fusion.Half2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Addition(Fusion.Half,Fusion.Half2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Addition(Fusion.Half2,Fusion.Half)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Addition(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_UnaryNegation(Fusion.Half2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Subtraction(Fusion.Half,Fusion.Half2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Subtraction(Fusion.Half2,Fusion.Half)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Subtraction(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Multiply(Fusion.Half,Fusion.Half2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Multiply(Fusion.Half2,Fusion.Half)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Multiply(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Division(Fusion.Half,Fusion.Half2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Division(Fusion.Half2,Fusion.Half)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Division(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Modulus(Fusion.Half,Fusion.Half2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Modulus(Fusion.Half2,Fusion.Half)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Modulus(Fusion.Half2,Fusion.Half2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Explicit(Fusion.Short2)~Fusion.Half2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Explicit(Fusion.UShort2)~Fusion.Half2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Explicit(Fusion.Int2)~Fusion.Half2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Explicit(Fusion.Float2)~Fusion.Half2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.op_Explicit(Fusion.Double2)~Fusion.Half2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half2.IsInfinity(Fusion.Half2)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half2.IsPositiveInfinity(Fusion.Half2)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half2.IsNegativeInfinity(Fusion.Half2)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half2.IsNaN(Fusion.Half2)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half2.Abs(Fusion.Half2)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half2.Ceiling(Fusion.Half2)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Half2.Floor(Fusion.Half2)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Half2.Max(Fusion.Half2,Fusion.Half2)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Half2.Min(Fusion.Half2,Fusion.Half2)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Half2.Pow(Fusion.Half,Fusion.Half2)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Half2.Pow(Fusion.Half2,Fusion.Half)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Half2.Pow(Fusion.Half2,Fusion.Half2)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Half2.Round(Fusion.Half2)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Half2.Round(Fusion.Half2,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Half2.Round(Fusion.Half2,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Half2.Round(Fusion.Half2,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Half2.Sign(Fusion.Half2)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half2.Sqrt(Fusion.Half2)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half2.Truncate(Fusion.Half2)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half2.Equals(Fusion.Half2)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Half2.Near(Fusion.Half2,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Half2.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Half2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Float2">
            <summary>
            A vector of 2 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Float2.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Float2.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="M:Fusion.Float2.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float2"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Float2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float2"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="P:Fusion.Float2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Equality(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Inequality(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_UnaryPlus(Fusion.Float2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Addition(System.Single,Fusion.Float2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Addition(Fusion.Float2,System.Single)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Addition(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_UnaryNegation(Fusion.Float2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Subtraction(System.Single,Fusion.Float2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Subtraction(Fusion.Float2,System.Single)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Subtraction(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Multiply(System.Single,Fusion.Float2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Multiply(Fusion.Float2,System.Single)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Multiply(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Division(System.Single,Fusion.Float2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Division(Fusion.Float2,System.Single)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Division(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Modulus(System.Single,Fusion.Float2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Modulus(Fusion.Float2,System.Single)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Modulus(Fusion.Float2,Fusion.Float2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Implicit(Fusion.Short2)~Fusion.Float2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Implicit(Fusion.UShort2)~Fusion.Float2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Implicit(Fusion.Int2)~Fusion.Float2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Implicit(Fusion.Half2)~Fusion.Float2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.op_Explicit(Fusion.Double2)~Fusion.Float2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float2.IsInfinity(Fusion.Float2)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float2.IsPositiveInfinity(Fusion.Float2)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float2.IsNegativeInfinity(Fusion.Float2)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float2.IsNaN(Fusion.Float2)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float2.Abs(Fusion.Float2)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float2.Ceiling(Fusion.Float2)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Float2.Floor(Fusion.Float2)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Float2.Max(Fusion.Float2,Fusion.Float2)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Float2.Min(Fusion.Float2,Fusion.Float2)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Float2.Pow(System.Single,Fusion.Float2)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Float2.Pow(Fusion.Float2,System.Single)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Float2.Pow(Fusion.Float2,Fusion.Float2)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Float2.Round(Fusion.Float2)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Float2.Round(Fusion.Float2,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Float2.Round(Fusion.Float2,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Float2.Round(Fusion.Float2,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Float2.Sign(Fusion.Float2)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float2.Sqrt(Fusion.Float2)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float2.Truncate(Fusion.Float2)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float2.Equals(Fusion.Float2)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Float2.Near(Fusion.Float2,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Float2.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Float2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Half3">
            <summary>
            A vector of 3 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Half3.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Half3.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Half3.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="M:Fusion.Half3.#ctor(Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half3"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Half3.#ctor(Fusion.Half,Fusion.Half2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
        </member>
        <member name="M:Fusion.Half3.#ctor(Fusion.Half2,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half3"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.Half3.#ctor(Fusion.Half,Fusion.Half,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="P:Fusion.Half3.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Half3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Equality(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Inequality(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_UnaryPlus(Fusion.Half3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Addition(Fusion.Half,Fusion.Half3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Addition(Fusion.Half3,Fusion.Half)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Addition(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_UnaryNegation(Fusion.Half3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Subtraction(Fusion.Half,Fusion.Half3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Subtraction(Fusion.Half3,Fusion.Half)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Subtraction(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Multiply(Fusion.Half,Fusion.Half3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Multiply(Fusion.Half3,Fusion.Half)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Multiply(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Division(Fusion.Half,Fusion.Half3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Division(Fusion.Half3,Fusion.Half)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Division(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Modulus(Fusion.Half,Fusion.Half3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Modulus(Fusion.Half3,Fusion.Half)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Modulus(Fusion.Half3,Fusion.Half3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Explicit(Fusion.Short3)~Fusion.Half3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Explicit(Fusion.UShort3)~Fusion.Half3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Explicit(Fusion.Int3)~Fusion.Half3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Explicit(Fusion.Float3)~Fusion.Half3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.op_Explicit(Fusion.Double3)~Fusion.Half3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half3.IsInfinity(Fusion.Half3)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half3.IsPositiveInfinity(Fusion.Half3)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half3.IsNegativeInfinity(Fusion.Half3)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half3.IsNaN(Fusion.Half3)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half3.Abs(Fusion.Half3)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half3.Ceiling(Fusion.Half3)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Half3.Floor(Fusion.Half3)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Half3.Max(Fusion.Half3,Fusion.Half3)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Half3.Min(Fusion.Half3,Fusion.Half3)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Half3.Pow(Fusion.Half,Fusion.Half3)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Half3.Pow(Fusion.Half3,Fusion.Half)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Half3.Pow(Fusion.Half3,Fusion.Half3)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Half3.Round(Fusion.Half3)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Half3.Round(Fusion.Half3,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Half3.Round(Fusion.Half3,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Half3.Round(Fusion.Half3,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Half3.Sign(Fusion.Half3)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half3.Sqrt(Fusion.Half3)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half3.Truncate(Fusion.Half3)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half3.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half3.Equals(Fusion.Half3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Half3.Near(Fusion.Half3,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Half3.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Half3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Float3">
            <summary>
            A vector of 3 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Float3.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Float3.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Float3.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="M:Fusion.Float3.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float3"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Float3.#ctor(System.Single,Fusion.Float2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
        </member>
        <member name="M:Fusion.Float3.#ctor(Fusion.Float2,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float3"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.Float3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="P:Fusion.Float3.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Float3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Equality(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Inequality(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_UnaryPlus(Fusion.Float3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Addition(System.Single,Fusion.Float3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Addition(Fusion.Float3,System.Single)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Addition(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_UnaryNegation(Fusion.Float3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Subtraction(System.Single,Fusion.Float3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Subtraction(Fusion.Float3,System.Single)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Subtraction(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Multiply(System.Single,Fusion.Float3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Multiply(Fusion.Float3,System.Single)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Multiply(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Division(System.Single,Fusion.Float3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Division(Fusion.Float3,System.Single)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Division(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Modulus(System.Single,Fusion.Float3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Modulus(Fusion.Float3,System.Single)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Modulus(Fusion.Float3,Fusion.Float3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Implicit(Fusion.Short3)~Fusion.Float3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Implicit(Fusion.UShort3)~Fusion.Float3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Implicit(Fusion.Int3)~Fusion.Float3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Implicit(Fusion.Half3)~Fusion.Float3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.op_Explicit(Fusion.Double3)~Fusion.Float3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float3.IsInfinity(Fusion.Float3)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float3.IsPositiveInfinity(Fusion.Float3)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float3.IsNegativeInfinity(Fusion.Float3)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float3.IsNaN(Fusion.Float3)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float3.Abs(Fusion.Float3)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float3.Ceiling(Fusion.Float3)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Float3.Floor(Fusion.Float3)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Float3.Max(Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Float3.Min(Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Float3.Pow(System.Single,Fusion.Float3)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Float3.Pow(Fusion.Float3,System.Single)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Float3.Pow(Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Float3.Round(Fusion.Float3)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Float3.Round(Fusion.Float3,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Float3.Round(Fusion.Float3,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Float3.Round(Fusion.Float3,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Float3.Sign(Fusion.Float3)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float3.Sqrt(Fusion.Float3)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float3.Truncate(Fusion.Float3)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float3.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float3.Equals(Fusion.Float3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Float3.Near(Fusion.Float3,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Float3.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Float3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Half4">
            <summary>
            A vector of 4 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Half4.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Half4.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Half4.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="F:Fusion.Half4.W">
            <summary>
            The W component.
            </summary>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half,Fusion.Half3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yzw">The Y, Z and W components.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half2,Fusion.Half2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half3,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="xyz">The X, Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half,Fusion.Half,Fusion.Half2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half,Fusion.Half2,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half2,Fusion.Half,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Half4.#ctor(Fusion.Half,Fusion.Half,Fusion.Half,Fusion.Half)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="P:Fusion.Half4.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Half4.XYZ">
            <summary>
            Gets the X, Y and Z vector components.
            </summary>
            <value>The X, Y and Z vector components.</value>
        </member>
        <member name="P:Fusion.Half4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Equality(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Inequality(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_UnaryPlus(Fusion.Half4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Addition(Fusion.Half,Fusion.Half4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Addition(Fusion.Half4,Fusion.Half)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Addition(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_UnaryNegation(Fusion.Half4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Subtraction(Fusion.Half,Fusion.Half4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Subtraction(Fusion.Half4,Fusion.Half)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Subtraction(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Multiply(Fusion.Half,Fusion.Half4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Multiply(Fusion.Half4,Fusion.Half)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Multiply(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Division(Fusion.Half,Fusion.Half4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Division(Fusion.Half4,Fusion.Half)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Division(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Modulus(Fusion.Half,Fusion.Half4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Modulus(Fusion.Half4,Fusion.Half)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Modulus(Fusion.Half4,Fusion.Half4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Implicit(Fusion.RGBA)~Fusion.Half4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Explicit(Fusion.Short4)~Fusion.Half4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Explicit(Fusion.UShort4)~Fusion.Half4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Explicit(Fusion.Int4)~Fusion.Half4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Explicit(Fusion.Float4)~Fusion.Half4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.op_Explicit(Fusion.Double4)~Fusion.Half4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half4.IsInfinity(Fusion.Half4)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half4.IsPositiveInfinity(Fusion.Half4)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half4.IsNegativeInfinity(Fusion.Half4)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half4.IsNaN(Fusion.Half4)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half4.Abs(Fusion.Half4)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half4.Ceiling(Fusion.Half4)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Half4.Floor(Fusion.Half4)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Half4.Max(Fusion.Half4,Fusion.Half4)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Half4.Min(Fusion.Half4,Fusion.Half4)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Half4.Pow(Fusion.Half,Fusion.Half4)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Half4.Pow(Fusion.Half4,Fusion.Half)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Half4.Pow(Fusion.Half4,Fusion.Half4)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Half4.Round(Fusion.Half4)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Half4.Round(Fusion.Half4,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Half4.Round(Fusion.Half4,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Half4.Round(Fusion.Half4,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Half4.Sign(Fusion.Half4)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half4.Sqrt(Fusion.Half4)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half4.Truncate(Fusion.Half4)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Half4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half4.Equals(Fusion.Half4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Half4.Near(Fusion.Half4,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Half4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Half4.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Float4">
            <summary>
            A vector of 4 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Float4.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Float4.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Float4.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="F:Fusion.Float4.W">
            <summary>
            The W component.
            </summary>
        </member>
        <member name="M:Fusion.Float4.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(System.Single,Fusion.Float3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yzw">The Y, Z and W components.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(Fusion.Float2,Fusion.Float2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(Fusion.Float3,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="xyz">The X, Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(System.Single,System.Single,Fusion.Float2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(System.Single,Fusion.Float2,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(Fusion.Float2,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Float4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="P:Fusion.Float4.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Float4.XYZ">
            <summary>
            Gets the X, Y and Z vector components.
            </summary>
            <value>The X, Y and Z vector components.</value>
        </member>
        <member name="P:Fusion.Float4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Equality(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Inequality(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_UnaryPlus(Fusion.Float4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Addition(System.Single,Fusion.Float4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Addition(Fusion.Float4,System.Single)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Addition(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_UnaryNegation(Fusion.Float4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Subtraction(System.Single,Fusion.Float4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Subtraction(Fusion.Float4,System.Single)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Subtraction(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Multiply(System.Single,Fusion.Float4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Multiply(Fusion.Float4,System.Single)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Multiply(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Division(System.Single,Fusion.Float4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Division(Fusion.Float4,System.Single)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Division(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Modulus(System.Single,Fusion.Float4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Modulus(Fusion.Float4,System.Single)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Modulus(Fusion.Float4,Fusion.Float4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Implicit(Fusion.RGBA)~Fusion.Float4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Implicit(Fusion.Short4)~Fusion.Float4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Implicit(Fusion.UShort4)~Fusion.Float4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Implicit(Fusion.Int4)~Fusion.Float4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Implicit(Fusion.Half4)~Fusion.Float4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.op_Explicit(Fusion.Double4)~Fusion.Float4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4.IsInfinity(Fusion.Float4)">
            <summary>
            Determines whether any component in the vector represents an infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4.IsPositiveInfinity(Fusion.Float4)">
            <summary>
            Determines whether any component in the vector represents a positive infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4.IsNegativeInfinity(Fusion.Float4)">
            <summary>
            Determines whether any component in the vector represents a negative infinity.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4.IsNaN(Fusion.Float4)">
            <summary>
            Determines whether any component in the vector represents a value that is not a number.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>True if any component represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4.Abs(Fusion.Float4)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float4.Ceiling(Fusion.Float4)">
            <summary>
            Returns the smallest integers that are greater than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The smallest integers that are greater than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Float4.Floor(Fusion.Float4)">
            <summary>
            Returns the largest integers that are less than or equal to the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The largest integers that are less than or equal to the vector components.</returns>
        </member>
        <member name="M:Fusion.Float4.Max(Fusion.Float4,Fusion.Float4)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Float4.Min(Fusion.Float4,Fusion.Float4)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Float4.Pow(System.Single,Fusion.Float4)">
            <summary>
            Returns the specified value raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The specified value raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Float4.Pow(Fusion.Float4,System.Single)">
            <summary>
            Returns the vector components raised to the specified power.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified power.</returns>
        </member>
        <member name="M:Fusion.Float4.Pow(Fusion.Float4,Fusion.Float4)">
            <summary>
            Returns the vector components raised to the specified powers.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The vector components raised to the specified powers.</returns>
        </member>
        <member name="M:Fusion.Float4.Round(Fusion.Float4)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Float4.Round(Fusion.Float4,System.Int32)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Float4.Round(Fusion.Float4,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the nearest integer values.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the nearest integer values.</returns>
        </member>
        <member name="M:Fusion.Float4.Round(Fusion.Float4,System.Int32,System.MidpointRounding)">
            <summary>
            Returns the vector components rounded to the specified precision.
            </summary>
            <param name="value">The vectorized value.</param>
            <param name="digits">The number of significant digits.</param>
            <param name="midpointRounding">The midpoint rounding mode.</param>
            <returns>The vector components rounded to the specified precision.</returns>
        </member>
        <member name="M:Fusion.Float4.Sign(Fusion.Float4)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float4.Sqrt(Fusion.Float4)">
            <summary>
            Returns the square roots of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The square roots of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float4.Truncate(Fusion.Float4)">
            <summary>
            Returns the integer parts of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The integer parts of the vector components.</returns>
        </member>
        <member name="M:Fusion.Float4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4.Equals(Fusion.Float4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Float4.Near(Fusion.Float4,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Float4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Float4.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Float4x4">
            <summary>
            A matrix of 4x4 floating point values.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M11">
            <summary>
            The component at the first row, first column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M21">
            <summary>
            The component at the second row, first column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M31">
            <summary>
            The component at the third row, first column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M41">
            <summary>
            The component at the fourth row, first column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M12">
            <summary>
            The component at the first row, second column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M22">
            <summary>
            The component at the second row, second column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M32">
            <summary>
            The component at the third row, second column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M42">
            <summary>
            The component at the fourth row, second column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M13">
            <summary>
            The component at the first row, third column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M23">
            <summary>
            The component at the second row, third column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M33">
            <summary>
            The component at the third row, third column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M43">
            <summary>
            The component at the fourth row, third column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M14">
            <summary>
            The component at the first row, fourth column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M24">
            <summary>
            The component at the second row, fourth column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M34">
            <summary>
            The component at the third row, fourth column.
            </summary>
        </member>
        <member name="F:Fusion.Float4x4.M44">
            <summary>
            The component at the fourth row, fourth column.
            </summary>
        </member>
        <member name="M:Fusion.Float4x4.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4x4"/> struct.
            </summary>
            <param name="diagonal">The value for the diagonal components.</param>
        </member>
        <member name="M:Fusion.Float4x4.#ctor(Fusion.Float4,Fusion.Float4,Fusion.Float4,Fusion.Float4)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Float4x4"/> struct.
            </summary>
            <param name="col1">The values for the first column.</param>
            <param name="col2">The values for the second column.</param>
            <param name="col3">The values for the third column.</param>
            <param name="col4">The values for the fourth column.</param>
        </member>
        <member name="P:Fusion.Float4x4.Row1">
            <summary>
            Gets the first row.
            </summary>
            <value>The first row.</value>
        </member>
        <member name="P:Fusion.Float4x4.Row2">
            <summary>
            Gets the second row.
            </summary>
            <value>The second row.</value>
        </member>
        <member name="P:Fusion.Float4x4.Row3">
            <summary>
            Gets the third row.
            </summary>
            <value>The third row.</value>
        </member>
        <member name="P:Fusion.Float4x4.Row4">
            <summary>
            Gets the fourth row.
            </summary>
            <value>The fourth row.</value>
        </member>
        <member name="P:Fusion.Float4x4.Column1">
            <summary>
            Gets the first column.
            </summary>
            <value>The first column.</value>
        </member>
        <member name="P:Fusion.Float4x4.Column2">
            <summary>
            Gets the second column.
            </summary>
            <value>The second column.</value>
        </member>
        <member name="P:Fusion.Float4x4.Column3">
            <summary>
            Gets the third column.
            </summary>
            <value>The third column.</value>
        </member>
        <member name="P:Fusion.Float4x4.Column4">
            <summary>
            Gets the fourth column.
            </summary>
            <value>The fourth column.</value>
        </member>
        <member name="P:Fusion.Float4x4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Float4x4.op_Equality(Fusion.Float4x4,Fusion.Float4x4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4x4.op_Inequality(Fusion.Float4x4,Fusion.Float4x4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4x4.op_Multiply(Fusion.Float4x4,Fusion.Float4x4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Float4x4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4x4.Equals(Fusion.Float4x4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Float4x4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Float4x4.Near(Fusion.Float4x4,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Float4x4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.FourCC">
            <summary>
            A four character code.
            </summary>
        </member>
        <member name="F:Fusion.FourCC.B1">
            <summary>
            The first byte.
            </summary>
        </member>
        <member name="F:Fusion.FourCC.B2">
            <summary>
            The second byte.
            </summary>
        </member>
        <member name="F:Fusion.FourCC.B3">
            <summary>
            The third byte.
            </summary>
        </member>
        <member name="F:Fusion.FourCC.B4">
            <summary>
            The fourth byte.
            </summary>
        </member>
        <member name="M:Fusion.FourCC.#ctor(System.Char,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.FourCC"/> struct.
            </summary>
            <param name="c1">The first character.</param>
            <param name="c2">The second character.</param>
            <param name="c3">The third character.</param>
            <param name="c4">The fourth character.</param>
        </member>
        <member name="M:Fusion.FourCC.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.FourCC"/> struct.
            </summary>
            <param name="code">The four character code.</param>
        </member>
        <member name="M:Fusion.FourCC.op_Equality(Fusion.FourCC,Fusion.FourCC)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.FourCC.op_Inequality(Fusion.FourCC,Fusion.FourCC)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.FourCC.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.FourCC.Equals(Fusion.FourCC)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.FourCC.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.FourCC.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Half">
            <summary>
            Represents a half-precision floating point number. See http://grouper.ieee.org/groups/754/ for more details.
            </summary>
        </member>
        <member name="F:Fusion.Half.Epsilon">
            <summary>
            The smallest positive value greater than zero.
            </summary>
        </member>
        <member name="F:Fusion.Half.MaxValue">
            <summary>
            The largest possible value.
            </summary>
        </member>
        <member name="F:Fusion.Half.MinValue">
            <summary>
            The smallest possible value.
            </summary>
        </member>
        <member name="F:Fusion.Half.NaN">
            <summary>
            The not a number value.
            </summary>
        </member>
        <member name="F:Fusion.Half.NegativeInfinity">
            <summary>
            The negative infinity value.
            </summary>
        </member>
        <member name="F:Fusion.Half.PositiveInfinity">
            <summary>
            The positive infinity value.
            </summary>
        </member>
        <member name="F:Fusion.Half.mantissaTable">
            <summary>
            The mantissa lookup table.
            </summary>
        </member>
        <member name="F:Fusion.Half.exponentTable">
            <summary>
            The exponent lookup table.
            </summary>
        </member>
        <member name="F:Fusion.Half.offsetTable">
            <summary>
            The offset lookup table.
            </summary>
        </member>
        <member name="F:Fusion.Half.baseTable">
            <summary>
            The base lookup table.
            </summary>
        </member>
        <member name="F:Fusion.Half.shiftTable">
            <summary>
            The shift lookup table.
            </summary>
        </member>
        <member name="F:Fusion.Half.bits">
            <summary>
            The bits that hold the number value.
            </summary>
        </member>
        <member name="M:Fusion.Half.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Half"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Fusion.Half.op_Equality(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Inequality(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_LessThan(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_LessThanOrEqual(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_GreaterThan(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_GreaterThanOrEqual(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_UnaryPlus(Fusion.Half)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Addition(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Increment(Fusion.Half)">
            <summary>
            Implements the ++ operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_UnaryNegation(Fusion.Half)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Subtraction(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Decrement(Fusion.Half)">
            <summary>
            Implements the -- operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Multiply(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Division(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Modulus(Fusion.Half,Fusion.Half)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.Byte">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.Char">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.Int16">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.Int32">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.Int64">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.SByte">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.UInt16">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.UInt32">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(Fusion.Half)~System.UInt64">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(Fusion.Half)~System.Single">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(Fusion.Half)~System.Double">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(Fusion.Half)~System.Decimal">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.Byte)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.Int16)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.Int32)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.Int64)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.SByte)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.UInt16)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.UInt32)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Implicit(System.UInt64)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(System.Single)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(System.Double)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.op_Explicit(System.Decimal)~Fusion.Half">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Half.IsInfinity(Fusion.Half)">
            <summary>
            Determines whether the value represents an infinity.
            </summary>
            <param name="value">The value.</param>
            <returns>True if the value represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half.IsPositiveInfinity(Fusion.Half)">
            <summary>
            Determines whether the value represents a positive infinity.
            </summary>
            <param name="value">The value.</param>
            <returns>True if the value represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half.IsNegativeInfinity(Fusion.Half)">
            <summary>
            Determines whether the value represents a negative infinity.
            </summary>
            <param name="value">The value.</param>
            <returns>True if the value represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half.IsNaN(Fusion.Half)">
            <summary>
            Determines whether the value represents a value that is not a number.
            </summary>
            <param name="value">The value.</param>
            <returns>True if the value represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half.Abs(Fusion.Half)">
            <summary>
            Gets the absolute value of the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The absolute value.</returns>
        </member>
        <member name="M:Fusion.Half.Max(Fusion.Half,Fusion.Half)">
            <summary>
            Returns the maximum value the two values.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value the two values.</returns>
        </member>
        <member name="M:Fusion.Half.Min(Fusion.Half,Fusion.Half)">
            <summary>
            Returns the minimum value the two values.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value the two values.</returns>
        </member>
        <member name="M:Fusion.Half.Sign(Fusion.Half)">
            <summary>
            Returns the sign of the value.
            </summary>
            <param name="value">The value.</param>
            <returns>The sign of the value.</returns>
        </member>
        <member name="M:Fusion.Half.CompareTo(System.Object)">
            <summary>
            Compares the current instance to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Angle" />.</exception>
        </member>
        <member name="M:Fusion.Half.CompareTo(Fusion.Half)">
            <summary>
            Compares the current instance to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
        </member>
        <member name="M:Fusion.Half.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half.Equals(Fusion.Half)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Half.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Half.Near(Fusion.Half,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="M:Fusion.Half.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Half.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Half.GenerateMantissaTable">
            <summary>
            Generates the mantissa lookup table.
            </summary>
            <returns>The mantissa lookup table.</returns>
        </member>
        <member name="M:Fusion.Half.GenerateExponentTable">
            <summary>
            Generates the exponent lookup table.
            </summary>
            <returns>The exponent lookup table.</returns>
        </member>
        <member name="M:Fusion.Half.GenerateOffsetTable">
            <summary>
            Generates the offset lookup table.
            </summary>
            <returns>The offset lookup table.</returns>
        </member>
        <member name="M:Fusion.Half.GenerateBaseTable">
            <summary>
            Generates the base lookup table.
            </summary>
            <returns>The base lookup table.</returns>
        </member>
        <member name="M:Fusion.Half.GenerateShiftTable">
            <summary>
            Generates the shift lookup table.
            </summary>
            <returns>The shift lookup table.</returns>
        </member>
        <member name="T:Fusion.Half.SingleBits">
            <summary>
            Provides safe access to the bits of a floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Half.SingleBits.Value">
            <summary>
            The floating point value.
            </summary>
        </member>
        <member name="F:Fusion.Half.SingleBits.Bits">
            <summary>
            The bits in the value.
            </summary>
        </member>
        <member name="T:Fusion.HashCode">
            <summary>
            Provides methods for calculating and combining hash codes.
            </summary>
        </member>
        <member name="F:Fusion.HashCode.Seed">
            <summary>
            The seed hash code.
            </summary>
        </member>
        <member name="M:Fusion.HashCode.GetHashCode(System.Object)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="instance">The object instance.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Fusion.HashCode.GetHashCode(System.Int32,System.Int32)">
            <summary>
            Returns the combined hash code of the specified hash codes.
            </summary>
            <param name="hash1">The first hash code.</param>
            <param name="hash2">The second hash code.</param>
            <returns>The combined hash code.</returns>
        </member>
        <member name="M:Fusion.HashCode.GetHashCode(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the combined hash code of the specified hash codes.
            </summary>
            <param name="hash1">The first hash code.</param>
            <param name="hash2">The second hash code.</param>
            <param name="hash3">The third hash code.</param>
            <returns>The combined hash code.</returns>
        </member>
        <member name="M:Fusion.HashCode.GetHashCode(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the combined hash code of the specified hash codes.
            </summary>
            <param name="hash1">The first hash code.</param>
            <param name="hash2">The second hash code.</param>
            <param name="hash3">The third hash code.</param>
            <param name="hash4">The fourth hash code.</param>
            <returns>The combined hash code.</returns>
        </member>
        <member name="M:Fusion.HashCode.GetHashCode(System.Int32,System.Int32[])">
            <summary>
            Returns the combined hash code of the specified hash codes.
            </summary>
            <param name="hash">The first hash code.</param>
            <param name="hashes">The other hash codes.</param>
            <returns>The combined hash code.</returns>
        </member>
        <member name="T:Fusion.INear`1">
            <summary>
            Provides a method for checking whether the floating point values are near to each other.
            </summary>
            <typeparam name="T">The floating point value type.</typeparam>
        </member>
        <member name="M:Fusion.INear`1.Near(`0,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>
            True if the values are near to each other, otherwise false.
            </returns>
        </member>
        <member name="T:Fusion.Int2">
            <summary>
            A vector of 2 integer values.
            </summary>
        </member>
        <member name="F:Fusion.Int2.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Int2.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="M:Fusion.Int2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int2"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Int2.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int2"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="P:Fusion.Int2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Equality(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Inequality(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_UnaryPlus(Fusion.Int2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Addition(System.Int32,Fusion.Int2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Addition(Fusion.Int2,System.Int32)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Addition(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_UnaryNegation(Fusion.Int2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Subtraction(System.Int32,Fusion.Int2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Subtraction(Fusion.Int2,System.Int32)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Subtraction(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Multiply(System.Int32,Fusion.Int2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Multiply(Fusion.Int2,System.Int32)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Multiply(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Division(System.Int32,Fusion.Int2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Division(Fusion.Int2,System.Int32)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Division(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Modulus(System.Int32,Fusion.Int2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Modulus(Fusion.Int2,System.Int32)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Modulus(Fusion.Int2,Fusion.Int2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Implicit(Fusion.Short2)~Fusion.Int2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Implicit(Fusion.UShort2)~Fusion.Int2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Explicit(Fusion.Half2)~Fusion.Int2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Explicit(Fusion.Float2)~Fusion.Int2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.op_Explicit(Fusion.Double2)~Fusion.Int2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int2.Abs(Fusion.Int2)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Int2.Max(Fusion.Int2,Fusion.Int2)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Int2.Min(Fusion.Int2,Fusion.Int2)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Int2.Sign(Fusion.Int2)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Int2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Int2.Equals(Fusion.Int2)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Int2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Int2.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Int2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Int3">
            <summary>
            A vector of 3 integer values.
            </summary>
        </member>
        <member name="F:Fusion.Int3.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Int3.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Int3.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="M:Fusion.Int3.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int3"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Int3.#ctor(System.Int32,Fusion.Int2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
        </member>
        <member name="M:Fusion.Int3.#ctor(Fusion.Int2,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int3"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.Int3.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="P:Fusion.Int3.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Int3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Equality(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Inequality(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_UnaryPlus(Fusion.Int3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Addition(System.Int32,Fusion.Int3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Addition(Fusion.Int3,System.Int32)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Addition(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_UnaryNegation(Fusion.Int3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Subtraction(System.Int32,Fusion.Int3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Subtraction(Fusion.Int3,System.Int32)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Subtraction(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Multiply(System.Int32,Fusion.Int3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Multiply(Fusion.Int3,System.Int32)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Multiply(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Division(System.Int32,Fusion.Int3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Division(Fusion.Int3,System.Int32)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Division(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Modulus(System.Int32,Fusion.Int3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Modulus(Fusion.Int3,System.Int32)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Modulus(Fusion.Int3,Fusion.Int3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Implicit(Fusion.Short3)~Fusion.Int3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Implicit(Fusion.UShort3)~Fusion.Int3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Explicit(Fusion.Half3)~Fusion.Int3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Explicit(Fusion.Float3)~Fusion.Int3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.op_Explicit(Fusion.Double3)~Fusion.Int3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int3.Abs(Fusion.Int3)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Int3.Max(Fusion.Int3,Fusion.Int3)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Int3.Min(Fusion.Int3,Fusion.Int3)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Int3.Sign(Fusion.Int3)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Int3.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Int3.Equals(Fusion.Int3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Int3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Int3.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Int3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Int4">
            <summary>
            A vector of 4 integer values.
            </summary>
        </member>
        <member name="F:Fusion.Int4.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Int4.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Int4.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="F:Fusion.Int4.W">
            <summary>
            The W component.
            </summary>
        </member>
        <member name="M:Fusion.Int4.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(System.Int32,Fusion.Int3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yzw">The Y, Z and W components.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(Fusion.Int2,Fusion.Int2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(Fusion.Int3,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="xyz">The X, Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(System.Int32,System.Int32,Fusion.Int2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(System.Int32,Fusion.Int2,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(Fusion.Int2,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Int4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Int4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="P:Fusion.Int4.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Int4.XYZ">
            <summary>
            Gets the X, Y and Z vector components.
            </summary>
            <value>The X, Y and Z vector components.</value>
        </member>
        <member name="P:Fusion.Int4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Equality(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Inequality(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_UnaryPlus(Fusion.Int4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Addition(System.Int32,Fusion.Int4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Addition(Fusion.Int4,System.Int32)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Addition(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_UnaryNegation(Fusion.Int4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Subtraction(System.Int32,Fusion.Int4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Subtraction(Fusion.Int4,System.Int32)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Subtraction(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Multiply(System.Int32,Fusion.Int4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Multiply(Fusion.Int4,System.Int32)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Multiply(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Division(System.Int32,Fusion.Int4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Division(Fusion.Int4,System.Int32)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Division(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Modulus(System.Int32,Fusion.Int4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Modulus(Fusion.Int4,System.Int32)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Modulus(Fusion.Int4,Fusion.Int4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Implicit(Fusion.RGBA)~Fusion.Int4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Implicit(Fusion.Short4)~Fusion.Int4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Implicit(Fusion.UShort4)~Fusion.Int4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Explicit(Fusion.Half4)~Fusion.Int4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Explicit(Fusion.Float4)~Fusion.Int4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.op_Explicit(Fusion.Double4)~Fusion.Int4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Int4.Abs(Fusion.Int4)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Int4.Max(Fusion.Int4,Fusion.Int4)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Int4.Min(Fusion.Int4,Fusion.Int4)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Int4.Sign(Fusion.Int4)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Int4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Int4.Equals(Fusion.Int4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Int4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Int4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Int4.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.IUserAuthentication">
            <summary>
            User authentication provider.
            </summary>
        </member>
        <member name="E:Fusion.IUserAuthentication.TokenChanged">
            <summary>
            Occurs when the authentication token is changed.
            </summary>
        </member>
        <member name="P:Fusion.IUserAuthentication.Token">
            <summary>
            Gets or sets the authentication token for the current user.
            </summary>
            <value>The authentication token or null if the current user is not authenticated.</value>
        </member>
        <member name="M:Fusion.IUserAuthentication.RequestToken(System.Net.ICredentials)">
            <summary>
            Requests a new authentication token.
            </summary>
            <param name="credentials">The user credentials, if available.</param>
            <returns>The authentication response with the new token.</returns>
        </member>
        <member name="M:Fusion.IUserAuthentication.RequestRenew(Fusion.AuthenticationToken,System.Net.ICredentials)">
            <summary>
            Requests a renew for the specified authentication token.
            </summary>
            <param name="authenticationToken">The authentication token to renew.</param>
            <param name="credentials">The user credentials, if available.</param>
            <returns>The authentication response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.IUserAuthentication.GetRedirectLink(Fusion.AuthenticationToken,System.String)">
            <summary>
            Gets a pre-authenticated redirect link to the target URL.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="targetUrl">The target URL.</param>
            <returns>The pre-authenticated redirect link.</returns>
        </member>
        <member name="T:Fusion.IUserAuthorization">
            <summary>
            User authorization provider.
            </summary>
        </member>
        <member name="M:Fusion.IUserAuthorization.RequestToken(Fusion.AuthenticationToken,System.TimeSpan,System.String)">
            <summary>
            Requests a new authorization token.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="duration">The requested token duration.</param>
            <param name="action">The action to authorize.</param>
            <returns>The authorization response with the new token.</returns>
        </member>
        <member name="M:Fusion.IUserAuthorization.RequestTokens(Fusion.AuthenticationToken,System.TimeSpan,System.String[])">
            <summary>
            Requests new authorization tokens.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="duration">The requested token duration.</param>
            <param name="actions">The actions to authorize.</param>
            <returns>The authorization responses with the new tokens.</returns>
        </member>
        <member name="M:Fusion.IUserAuthorization.RequestRenew(Fusion.AuthorizationToken,System.TimeSpan,Fusion.AuthenticationToken)">
            <summary>
            Requests a renew for the specified authorization token.
            </summary>
            <param name="authorizationToken">The authorization token to renew.</param>
            <param name="duration">The requested token duration.</param>
            <param name="authenticationToken">The authentication token.</param>
            <returns>The authorization response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.IUserAuthorization.RequestRenewTokens(System.Collections.Generic.IReadOnlyList{Fusion.AuthorizationToken},System.TimeSpan,Fusion.AuthenticationToken)">
            <summary>
            Requests a renew for the specified authorization tokens.
            </summary>
            <param name="authorizationTokens">The authorization tokens to renew.</param>
            <param name="duration">The requested token duration.</param>
            <param name="authenticationToken">The authentication token.</param>
            <returns>The authorization response with the renewed token.</returns>
        </member>
        <member name="M:Fusion.IUserAuthorization.IsAuthorizationAvailable(Fusion.AuthenticationToken,System.String[])">
            <summary>
            Determines whether it's possible to request authorization for the actions.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="actions">The actions to authorize.</param>
            <returns>The collection of the actions and whether it's possible to request authorization for them.</returns>
        </member>
        <member name="T:Fusion.IUserProfile">
            <summary>
            User profile provider.
            </summary>
        </member>
        <member name="M:Fusion.IUserProfile.GetProfile(Fusion.AuthenticationToken,System.String,System.String[])">
            <summary>
            Gets the profile for the specified principal.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
            <param name="properties">The list of properties to retrieve. If empty, retrieves all properties.</param>
            <returns>The dictionary of profile property names and values.</returns>
        </member>
        <member name="M:Fusion.IUserProfile.GetProfiles(Fusion.AuthenticationToken,System.String[])">
            <summary>
            Gets the profiles of all available principals.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="properties">The list of properties to retrieve. If empty, retrieves all properties.</param>
            <returns>The dictionary of principal identifiers and profiles (as a dictionary of profile property names and values).</returns>
        </member>
        <member name="M:Fusion.IUserProfile.GetProfileLink(Fusion.AuthenticationToken,System.String)">
            <summary>
            Gets the link to the profile for the specified principal.
            </summary>
            <param name="authenticationToken">The authentication token.</param>
            <param name="principal">The principal identifier.</param>
            <returns>The link to the profile.</returns>
        </member>
        <member name="T:Fusion.IWebViewController">
            <summary>
            Web view controller interface.
            </summary>
        </member>
        <member name="P:Fusion.IWebViewController.CanGoBack">
            <summary>
            Gets whether the web view can navigate to the previous page.
            </summary>
            <value>True if the web view can navigate backwards, otherwise false.</value>
        </member>
        <member name="P:Fusion.IWebViewController.CanGoForward">
            <summary>
            Gets whether the web view can navigate to the next page.
            </summary>
            <value>True if the web view can navigate forwards, otherwise false.</value>
        </member>
        <member name="P:Fusion.IWebViewController.Source">
            <summary>
            Gets the source URI.
            </summary>
            <value>The source URI.</value>
        </member>
        <member name="M:Fusion.IWebViewController.Evaluate(System.String)">
            <summary>
            Evaluates the script.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="M:Fusion.IWebViewController.GoBack">
            <summary>
            Navigates to the previous page.
            </summary>
        </member>
        <member name="M:Fusion.IWebViewController.GoForward">
            <summary>
            Navigates to the next page.
            </summary>
        </member>
        <member name="M:Fusion.IWebViewController.Navigate(System.String)">
            <summary>
            Navigates to a page.
            </summary>
            <param name="uri">The page URI.</param>
        </member>
        <member name="M:Fusion.IWebViewController.LoadHtml(System.String)">
            <summary>
            Loads a page from a HTML string.
            </summary>
            <param name="html">The HTML string.</param>
        </member>
        <member name="M:Fusion.IWebViewController.LoadFile(System.String)">
            <summary>
            Loads a page from a file.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="T:Fusion.IWindowController">
            <summary>
            Window controller.
            </summary>
        </member>
        <member name="P:Fusion.IWindowController.IsOpen">
            <summary>
            Gets a value indicating whether the window is open.
            </summary>
            <value>True if the window is open, otherwise false.</value>
        </member>
        <member name="P:Fusion.IWindowController.Left">
            <summary>
            Gets or sets the window left edge coordinate.
            </summary>
            <value>The window left edge coordinate.</value>
        </member>
        <member name="P:Fusion.IWindowController.Top">
            <summary>
            Gets or sets the window top edge coordinate.
            </summary>
            <value>The window top edge coordinate.</value>
        </member>
        <member name="P:Fusion.IWindowController.Width">
            <summary>
            Gets or sets the window width.
            </summary>
            <value>The window width.</value>
        </member>
        <member name="P:Fusion.IWindowController.Height">
            <summary>
            Gets or sets the window height.
            </summary>
            <value>The window height.</value>
        </member>
        <member name="M:Fusion.IWindowController.Activate">
            <summary>
            Activates the window.
            </summary>
        </member>
        <member name="M:Fusion.IWindowController.BringToTop">
            <summary>
            Brings the window to top.
            </summary>
        </member>
        <member name="M:Fusion.IWindowController.Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:Fusion.IWindowController.Close(System.Object)">
            <summary>
            Closes the window.
            </summary>
            <param name="dialogResult">The dialog result.</param>
        </member>
        <member name="M:Fusion.IWindowController.UpdateLayout">
            <summary>
            Updates the layout for the window.
            </summary>
        </member>
        <member name="T:Fusion.Length">
            <summary>
            Length quantity.
            </summary>
        </member>
        <member name="F:Fusion.Length.Zero">
            <summary>
            The zero length.
            </summary>
        </member>
        <member name="F:Fusion.Length.Millimeter">
            <summary>
            One millimeter length.
            </summary>
        </member>
        <member name="F:Fusion.Length.Centimeter">
            <summary>
            One centimeter length.
            </summary>
        </member>
        <member name="F:Fusion.Length.Meter">
            <summary>
            One meter length.
            </summary>
        </member>
        <member name="F:Fusion.Length.Inch">
            <summary>
            One inch length, based on the international foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.USSurveyInch">
            <summary>
            One inch, based on the US Survey foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.Foot">
            <summary>
            One international foot length (0.3048 meters).
            </summary>
        </member>
        <member name="F:Fusion.Length.USSurveyFoot">
            <summary>
            One US survey foot length (1200.0/3937.0 meters).
            </summary>
        </member>
        <member name="F:Fusion.Length.Yard">
            <summary>
            One yard length, based on the international foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.USSurveyYard">
            <summary>
            One yard, based on the US Survey foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.Kilometer">
            <summary>
            One Kilometer length.
            </summary>
        </member>
        <member name="F:Fusion.Length.Mile">
            <summary>
            One Mile length, based on the international foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.USSurveyMile">
            <summary>
            One mile, based on the US Survey foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.MillimetersInCentimeter">
            <summary>
            The millimeters in one centimeter.
            </summary>
        </member>
        <member name="F:Fusion.Length.MillimetersInMeter">
            <summary>
            The millimeters in one meter.
            </summary>
        </member>
        <member name="F:Fusion.Length.MillimetersInKilometer">
            <summary>
            The millimeters in one kilometer.
            </summary>
        </member>
        <member name="F:Fusion.Length.MillimetersInInternationalFoot">
            <summary>
            The millimeters in one international foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.MillimetersInUSSurveyFoot">
            <summary>
            The millimeters in one US survey foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.InchesPerFoot">
            <summary>
            The quantity of inches in a foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.YardsPerFoot">
            <summary>
            The quantity of yards in a foot.
            </summary>
        </member>
        <member name="F:Fusion.Length.MilesPerFoot">
            <summary>
            The quantity of miles in a foot.
            </summary>
        </member>
        <member name="M:Fusion.Length.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Length" /> struct.
            </summary>
            <param name="millimeters">The length in millimeters.</param>
        </member>
        <member name="P:Fusion.Length.Millimeters">
            <summary>
            Gets the length in millimeters.
            </summary>
            <value>The length in millimeters.</value>
        </member>
        <member name="M:Fusion.Length.op_Equality(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Inequality(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_LessThan(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_LessThanOrEqual(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_GreaterThan(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_GreaterThanOrEqual(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Addition(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_UnaryNegation(Fusion.Length)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Subtraction(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Multiply(Fusion.Length,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Multiply(System.Double,Fusion.Length)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Division(Fusion.Length,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Division(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.op_Modulus(Fusion.Length,Fusion.Length)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Length.Near(Fusion.Length,System.Int32)">
            <summary>
            Determines whether the two lengths are near to each other.
            </summary>
            <param name="other">The other length.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the lengths are near to each other, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.IsInfinity(Fusion.Length)">
            <summary>
            Determines whether the length represents an infinity.
            </summary>
            <param name="length">The length.</param>
            <returns>True if the length represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.IsPositiveInfinity(Fusion.Length)">
            <summary>
            Determines whether the length represents a positive infinity.
            </summary>
            <param name="length">The length.</param>
            <returns>True if the length represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.IsNegativeInfinity(Fusion.Length)">
            <summary>
            Determines whether the length represents a negative infinity.
            </summary>
            <param name="length">The length.</param>
            <returns>True if the length represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.IsNaN(Fusion.Length)">
            <summary>
            Determines whether the length represents a value that is not a number.
            </summary>
            <param name="length">The length.</param>
            <returns>True if the length represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.CompareTo(System.Object)">
            <summary>
            Compares the length to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Length" />.</exception>
        </member>
        <member name="M:Fusion.Length.CompareTo(Fusion.Length)">
            <summary>
            Compares the two lengths.
            </summary>
            <param name="other">The other length.</param>
            <returns>Integer value that indicates the relative order of the two lengths.</returns>
        </member>
        <member name="M:Fusion.Length.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.Equals(Fusion.Length)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Length.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Length.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Length.Abs(Fusion.Length)">
            <summary>
            Returns the absolute value of the length.
            </summary>
            <param name="length">The length.</param>
            <returns>The absolute value of the length.</returns>
        </member>
        <member name="M:Fusion.Length.Max(Fusion.Length,Fusion.Length)">
            <summary>
            Returns the maximum value of two lengths.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value of two lengths.</returns>
        </member>
        <member name="M:Fusion.Length.Min(Fusion.Length,Fusion.Length)">
            <summary>
            Returns the minimum value of two lengths.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value of two lengths.</returns>
        </member>
        <member name="M:Fusion.Length.Round(Fusion.Length,Fusion.Length,Fusion.RoundingMode)">
            <summary>
            Returns the length rounded to the specified precision unit.
            </summary>
            <param name="length">The length.</param>
            <param name="precision">The precision unit.</param>
            <param name="roundingMode">The rounding mode.</param>
            <returns>The rounded length.</returns>
        </member>
        <member name="M:Fusion.Length.Sign(Fusion.Length)">
            <summary>
            Returns the sign of the length value.
            </summary>
            <param name="length">The length.</param>
            <returns>The sign of the length value.</returns>
        </member>
        <member name="M:Fusion.Length.From(System.Double,Fusion.LengthUnit)">
            <summary>
            Creates an instance of the <see cref="T:Fusion.Length" /> struct from the specified length and unit.
            </summary>
            <param name="length">The length in the specified units.</param>
            <param name="lengthUnit">The length unit.</param>
            <returns>The <see cref="T:Fusion.Length" /> struct with the specified length.</returns>
        </member>
        <member name="M:Fusion.Length.To(Fusion.LengthUnit)">
            <summary>
            Converts the <see cref="T:Fusion.Length" /> struct to the specified length units.
            </summary>
            <param name="lengthUnit">The length unit.</param>
            <returns>The length in the specified units.</returns>
        </member>
        <member name="M:Fusion.Length.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Length4Units">
            <summary>
            Units for moment of inertia of an area and torsion constant.
            </summary>
        </member>
        <member name="F:Fusion.Length4Units.Millimeter">
            <summary>
            Millimeter length unit.
            </summary>
        </member>
        <member name="F:Fusion.Length4Units.Centimeter">
            <summary>
            Centimeter length unit.
            </summary>
        </member>
        <member name="F:Fusion.Length4Units.Inch">
            <summary>
            Inch length unit.
            </summary>
        </member>
        <member name="T:Fusion.LengthUnit">
            <summary>
            Length units.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Millimeter">
            <summary>
            Millimeter length unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Centimeter">
            <summary>
            Centimeter length unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Meter">
            <summary>
            Meter length unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Inch">
            <summary>
            Inch length unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Foot">
            <summary>
            Foot length unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Yard">
            <summary>
            Yard length unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Kilometer">
            <summary>
            Kilometer unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.Mile">
            <summary>
            Mile unit.
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.USSurveyFoot">
            <summary>
            1200.0/3937.0 meters 
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.USSurveyInch">
            <summary>
            One twelfth of a US survey foot
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.USSurveyYard">
            <summary>
            Three US survey feet
            </summary>
        </member>
        <member name="F:Fusion.LengthUnit.USSurveyMile">
            <summary>
            5280 US survey feet
            </summary>
        </member>
        <member name="T:Fusion.LocalizationMode">
            <summary>
            Application localization modes.
            </summary>
        </member>
        <member name="F:Fusion.LocalizationMode.Normal">
            <summary>
            Normal localization mode.
            </summary>
        </member>
        <member name="F:Fusion.LocalizationMode.Keys">
            <summary>
            Test mode where all localized strings are replaced with their keys.
            </summary>
        </member>
        <member name="F:Fusion.LocalizationMode.Brackets">
            <summary>
            Test mode where all localized strings are enclosed in square brackets.
            </summary>
        </member>
        <member name="F:Fusion.LocalizationMode.ShortString">
            <summary>
            Test mode where all localized strings are replaced with a short string.
            </summary>
        </member>
        <member name="F:Fusion.LocalizationMode.LongStrings">
            <summary>
            Test mode where all localized strings are replaced with long strings.
            </summary>
        </member>
        <member name="F:Fusion.LocalizationMode.UnicodeTest">
            <summary>
            Test mode where all localized strings are replaced a Unicode test string.
            </summary>
        </member>
        <member name="T:Fusion.LocalizedResourcesAttribute">
            <summary>
            Declares the localized resources for the annotated application or application feature class. Localized resources are loaded after the shared resources but before theme specific resources.
            </summary>
        </member>
        <member name="M:Fusion.LocalizedResourcesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.LocalizedResourcesAttribute" /> class.
            </summary>
            <param name="resourcePath">The resource path.</param>
        </member>
        <member name="T:Fusion.Mass">
            <summary>
            Mass quantity.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Zero">
            <summary>
            The zero mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Kilogram">
            <summary>
            One kilogram mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Tonne">
            <summary>
            One tonne mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Pound">
            <summary>
            One pound mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.ShortTon">
            <summary>
            One short ton mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Ounce">
            <summary>
            One ounce mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Milligram">
            <summary>
            One milligram mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.Gram">
            <summary>
            One gram mass.
            </summary>
        </member>
        <member name="F:Fusion.Mass.KilogramsInTonne">
            <summary>
            The kilograms in one tonne.
            </summary>
        </member>
        <member name="F:Fusion.Mass.KilogramsInPound">
            <summary>
            The kilograms in one pound.
            </summary>
        </member>
        <member name="F:Fusion.Mass.KilogramsInShortTon">
            <summary>
            The kilograms in one short ton.
            </summary>
        </member>
        <member name="F:Fusion.Mass.KilogramsInOunce">
            <summary>
            The kilograms in one ounce.
            </summary>
        </member>
        <member name="F:Fusion.Mass.KilogramsInMilligram">
            <summary>
            The kilograms in one Milligram.
            </summary>
        </member>
        <member name="F:Fusion.Mass.KilogramsInGram">
            <summary>
            The kilograms in one Gram.
            </summary>
        </member>
        <member name="M:Fusion.Mass.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Mass" /> struct.
            </summary>
            <param name="kilograms">The mass in kilograms.</param>
        </member>
        <member name="P:Fusion.Mass.Kilograms">
            <summary>
            Gets the mass in kilograms.
            </summary>
            <value>The mass in kilograms.</value>
        </member>
        <member name="M:Fusion.Mass.op_Equality(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Inequality(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_LessThan(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_LessThanOrEqual(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_GreaterThan(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_GreaterThanOrEqual(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Addition(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_UnaryNegation(Fusion.Mass)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Subtraction(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Multiply(Fusion.Mass,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Multiply(System.Double,Fusion.Mass)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Division(Fusion.Mass,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Division(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.op_Modulus(Fusion.Mass,Fusion.Mass)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Mass.IsInfinity(Fusion.Mass)">
            <summary>
            Determines whether the mass represents an infinity.
            </summary>
            <param name="mass">The mass.</param>
            <returns>True if the mass represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.IsPositiveInfinity(Fusion.Mass)">
            <summary>
            Determines whether the mass represents a positive infinity.
            </summary>
            <param name="mass">The mass.</param>
            <returns>True if the mass represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.IsNegativeInfinity(Fusion.Mass)">
            <summary>
            Determines whether the mass represents a negative infinity.
            </summary>
            <param name="mass">The mass.</param>
            <returns>True if the mass represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.IsNaN(Fusion.Mass)">
            <summary>
            Determines whether the mass represents a value that is not a number.
            </summary>
            <param name="mass">The mass.</param>
            <returns>True if the mass represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.Abs(Fusion.Mass)">
            <summary>
            Returns the absolute value of the mass.
            </summary>
            <param name="mass">The mass.</param>
            <returns>The absolute value of the mass.</returns>
        </member>
        <member name="M:Fusion.Mass.Max(Fusion.Mass,Fusion.Mass)">
            <summary>
            Returns the maximum value of two masses.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value of two masses.</returns>
        </member>
        <member name="M:Fusion.Mass.Min(Fusion.Mass,Fusion.Mass)">
            <summary>
            Returns the minimum value of two masses.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value of two masses.</returns>
        </member>
        <member name="M:Fusion.Mass.Round(Fusion.Mass,Fusion.Mass,Fusion.RoundingMode)">
            <summary>
            Returns the mass rounded to the specified precision unit.
            </summary>
            <param name="mass">The mass.</param>
            <param name="precision">The precision unit.</param>
            <param name="roundingMode">The rounding mode.</param>
            <returns>The rounded mass.</returns>
        </member>
        <member name="M:Fusion.Mass.Sign(Fusion.Mass)">
            <summary>
            Returns the sign of the mass value.
            </summary>
            <param name="mass">The mass.</param>
            <returns>The sign of the mass value.</returns>
        </member>
        <member name="M:Fusion.Mass.From(System.Double,Fusion.MassUnit)">
            <summary>
            Creates an instance of the <see cref="T:Fusion.Mass" /> struct from the specified mass and unit.
            </summary>
            <param name="mass">The mass in the specified units.</param>
            <param name="massUnit">The mass unit.</param>
            <returns>The <see cref="T:Fusion.Mass" /> struct with the specified mass.</returns>
        </member>
        <member name="M:Fusion.Mass.CompareTo(System.Object)">
            <summary>
            Compares the mass to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Mass" />.</exception>
        </member>
        <member name="M:Fusion.Mass.CompareTo(Fusion.Mass)">
            <summary>
            Compares the two masses.
            </summary>
            <param name="other">The other mass.</param>
            <returns>Integer value that indicates the relative order of the two masses.</returns>
        </member>
        <member name="M:Fusion.Mass.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.Equals(Fusion.Mass)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Mass.Near(Fusion.Mass,System.Int32)">
            <summary>
            Determines whether the two masses are near to each other.
            </summary>
            <param name="other">The other mass.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the masses are near to each other, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Mass.To(Fusion.MassUnit)">
            <summary>
            Converts the <see cref="T:Fusion.Mass" /> struct to the specified mass units.
            </summary>
            <param name="massUnit">The mass unit.</param>
            <returns>The mass in the specified units.</returns>
        </member>
        <member name="M:Fusion.Mass.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Mass.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.MassUnit">
            <summary>
            Mass units.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.Kilogram">
            <summary>
            Kilogram mass unit.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.Tonne">
            <summary>
            Tonne mass unit.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.Pound">
            <summary>
            Pound mass unit.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.ShortTon">
            <summary>
            Short ton mass unit.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.Ounce">
            <summary>
            Ounce mass unit.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.Milligram">
            <summary>
            Milligram mass unit.
            </summary>
        </member>
        <member name="F:Fusion.MassUnit.Gram">
            <summary>
            Gram mass unit.
            </summary>
        </member>
        <member name="T:Fusion.Matrix">
            <summary>
            Provides methods for working with matrices.
            </summary>
        </member>
        <member name="M:Fusion.Matrix.Camera(Fusion.Float3,Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns a camera transformation matrix created from the camera position, up vector and forward vector.
            </summary>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">The camera forward vector.</param>
            <returns>The camera transformation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Invert(Fusion.Float4x4)">
            <summary>
            Returns the inverse of the matrix.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>The inverse of the matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.InvertAffine(Fusion.Float4x4)">
            <summary>
            Returns the inverse of the affine matrix.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>The inverse of the affine matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.LookAt(Fusion.Float3,Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns a camera transformation matrix created from the target position, camera position and up vector.
            </summary>
            <param name="targetPosition">The target position.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <returns>The camera transformation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Object(Fusion.Float3,Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns an object transformation matrix created from the object position, up vector and forward vector.
            </summary>
            <param name="objectPosition">The object position.</param>
            <param name="objectUpVector">The object up vector.</param>
            <param name="objectForwardVector">The object forward vector.</param>
            <returns>The object transformation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Projection(System.Single,System.Single,Fusion.Angle,System.Single,System.Single,System.Single)">
            <summary>
            Returns a projection matrix created from the view size, vertical view angle, scale and distance range.
            </summary>
            <param name="width">The view width. Zero produces the default (identity) projection.</param>
            <param name="height">The view height. Zero produces the default (identity) projection.</param>
            <param name="verticalViewAngle">The vertical view angle. Value greater than zero produces perspective projection, value less than or equal to zero produces orthographic projection.</param>
            <param name="scale">The view scale factor. The recommended value is 1 for perspective projection and 100 for orthographic projection.</param>
            <param name="minimumDistance">The minimum view distance. Objects nearer than this will be clipped.</param>
            <param name="maximumDistance">The maximum view distance. Objects farther than this will be clipped.</param>
            <returns>The projection matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Rotate(Fusion.Angle,Fusion.Float3)">
            <summary>
            Returns a rotation matrix created from the rotation around an arbitrary axis.
            </summary>
            <param name="angle">The rotation angle.</param>
            <param name="axis">The rotation axis vector.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Rotate(Fusion.Angle,Fusion.Angle,Fusion.Angle)">
            <summary>
            Returns a rotation matrix created from the Euler angles.
            </summary>
            <param name="yaw">The yaw rotation angle.</param>
            <param name="pitch">The pitch rotation angle.</param>
            <param name="roll">The roll rotation angle.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.RotateX(Fusion.Angle)">
            <summary>
            Returns a rotation matrix created from the rotation around the X axis.
            </summary>
            <param name="angle">The angle.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.RotateY(Fusion.Angle)">
            <summary>
            Returns a rotation matrix created from the rotation around the Y axis.
            </summary>
            <param name="angle">The angle.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.RotateZ(Fusion.Angle)">
            <summary>
            Returns a rotation matrix created from the rotation around the Z axis.
            </summary>
            <param name="angle">The angle.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Transform(Fusion.Float4x4,Fusion.Float4)">
            <summary>
            Returns a vector transformed with the matrix.
            </summary>
            <param name="matrix">The matrix.</param>
            <param name="vector">The vector.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Fusion.Matrix.Translate(Fusion.Float3)">
            <summary>
            Returns a translation matrix created from the translation vector.
            </summary>
            <param name="translation">The translation vector.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Translate(System.Single,System.Single,System.Single)">
            <summary>
            Returns a translation matrix created from the translation amounts.
            </summary>
            <param name="x">A translation amount along the X axis.</param>
            <param name="y">A translation amount along the Y axis.</param>
            <param name="z">A translation amount along the Z axis.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Fusion.Matrix.Transpose(Fusion.Float4x4)">
            <summary>
            Returns the transpose of the matrix.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>The transpose of the matrix.</returns>
        </member>
        <member name="T:Fusion.Maybe`1">
            <summary>
            Optional value.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="F:Fusion.Maybe`1.Empty">
            <summary>
            The empty instance.
            </summary>
        </member>
        <member name="M:Fusion.Maybe`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Maybe`1"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Fusion.Maybe`1.HasValue">
            <summary>
            Gets whether the value is set.
            </summary>
            <value>True if the value is set, otherwise false.</value>
        </member>
        <member name="P:Fusion.Maybe`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Fusion.Maybe`1.op_Equality(Fusion.Maybe{`0},Fusion.Maybe{`0})">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.op_Inequality(Fusion.Maybe{`0},Fusion.Maybe{`0})">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.op_Equality(Fusion.Maybe{`0},`0)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.op_Inequality(Fusion.Maybe{`0},`0)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.op_Equality(`0,Fusion.Maybe{`0})">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.op_Inequality(`0,Fusion.Maybe{`0})">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.Equals(System.Object)">
            <summary>
            Determines whether the values are equal.
            </summary>
            <param name="other">The other instance.</param>
            <returns>True if the values are equal, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.Equals(Fusion.Maybe{`0})">
            <summary>
            Determines whether the values are equal.
            </summary>
            <param name="other">The other instance.</param>
            <returns>True if the values are equal, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Fusion.Maybe`1.ToString">
            <summary>
            Returns the string representation of the value.
            </summary>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="T:Fusion.Models.Entity">
            <summary>
            Building entity.
            </summary>
        </member>
        <member name="F:Fusion.Models.Entity.Empty">
            <summary>
            The empty geometry array.
            </summary>
        </member>
        <member name="F:Fusion.Models.Entity.geometries">
            <summary>
            The building entity geometries.
            </summary>
        </member>
        <member name="M:Fusion.Models.Entity.#ctor(System.Guid,Fusion.Models.EntityType,Fusion.Models.EntityGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Models.Entity"/> class.
            </summary>
            <param name="identifier">The building entity identifier.</param>
            <param name="entityType">The building entity type.</param>
            <param name="entityGroup">The building entity group.</param>
        </member>
        <member name="P:Fusion.Models.Entity.Identifier">
            <summary>
            Gets the building entity identifier.
            </summary>
            <value>The building entity identifier.</value>
        </member>
        <member name="P:Fusion.Models.Entity.EntityType">
            <summary>
            Gets the building entity type.
            </summary>
            <value>The building entity type.</value>
        </member>
        <member name="P:Fusion.Models.Entity.EntityGroup">
            <summary>
            Gets the building entity group.
            </summary>
            <value>The building entity group.</value>
        </member>
        <member name="P:Fusion.Models.Entity.Geometries">
            <summary>
            Gets the building entity geometries.
            </summary>
            <value>The building entity geometries.</value>
        </member>
        <member name="M:Fusion.Models.Entity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Models.Entity.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Entity.Equals(Fusion.Models.Entity)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Entity.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Models.Entity.Index(Fusion.Models.Model)">
            <summary>
            Builds the index for the specified model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="T:Fusion.Models.EntityGroup">
            <summary>
            Building entity group.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityGroup.Empty">
            <summary>
            The empty entity array.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityGroup.entities">
            <summary>
            The building entities.
            </summary>
        </member>
        <member name="M:Fusion.Models.EntityGroup.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Models.EntityGroup"/> class.
            </summary>
            <param name="identifier">The building entity group identifier.</param>
        </member>
        <member name="P:Fusion.Models.EntityGroup.Identifier">
            <summary>
            Gets the building entity group identifier.
            </summary>
            <value>The building entity group identifier.</value>
        </member>
        <member name="P:Fusion.Models.EntityGroup.Entities">
            <summary>
            Gets the building entities in the group.
            </summary>
            <value>The building entities in the group.</value>
        </member>
        <member name="M:Fusion.Models.EntityGroup.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Models.EntityGroup.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.EntityGroup.Equals(Fusion.Models.EntityGroup)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.EntityGroup.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Models.EntityGroup.Index(Fusion.Models.Model)">
            <summary>
            Builds the index for the specified model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="T:Fusion.Models.EntityState">
            <summary>
            Building entity states.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityState.Normal">
            <summary>
            Normal state.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityState.Selected">
            <summary>
            Building entity is selected.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityState.Grayed">
            <summary>
            Building entity is grayed.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityState.Ghosted">
            <summary>
            Building entity is ghosted.
            </summary>
        </member>
        <member name="T:Fusion.Models.EntityStates">
            <summary>
            Building entity states.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityStates.states">
            <summary>
            The assigned entity states.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityStates.defaultState">
            <summary>
            The default entity state.
            </summary>
        </member>
        <member name="E:Fusion.Models.EntityStates.EntityStatesChanged">
            <summary>
            Occurs when the entity states are changed.
            </summary>
        </member>
        <member name="P:Fusion.Models.EntityStates.DefaultState">
            <summary>
            Gets or sets the default entity state.
            </summary>
            <value>The default entity state.</value>
        </member>
        <member name="P:Fusion.Models.EntityStates.Item(Fusion.Models.Entity)">
            <summary>
            Gets or sets the building entity state.
            </summary>
            <param name="entity">The building entity.</param>
            <returns>The building entity state.</returns>
        </member>
        <member name="M:Fusion.Models.EntityStates.Clear">
            <summary>
            Clears the entity states.
            </summary>
        </member>
        <member name="T:Fusion.Models.EntityType">
            <summary>
            Building entity types.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Unknown">
            <summary>
            Unknown entity type.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Product">
            <summary>
            Product object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Annotation">
            <summary>
            Annotation object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Element">
            <summary>
            Generic element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.BuildingElement">
            <summary>
            Generic building element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Beam">
            <summary>
            Beam element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.BuildingElementComponent">
            <summary>
            Generic building element component.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.BuildingElementPart">
            <summary>
            Generic building element part.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ReinforcingElement">
            <summary>
            Reinforcing element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ReinforcingBar">
            <summary>
            Reinforcing bar.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ReinforcingMesh">
            <summary>
            Reinforcing mesh.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Tendon">
            <summary>
            Tendon object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.TendonAnchor">
            <summary>
            Tendon anchor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.BuildingElementProxy">
            <summary>
            Building element proxy object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Column">
            <summary>
            Column element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Covering">
            <summary>
            Covering element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.CurtainWall">
            <summary>
            Curtain wall.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Door">
            <summary>
            Door element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Footing">
            <summary>
            Footing element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Member">
            <summary>
            Generic structural member.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Pile">
            <summary>
            Pile element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Plate">
            <summary>
            Plate element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Railing">
            <summary>
            Railing element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Ramp">
            <summary>
            Ramp element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.RampFlight">
            <summary>
            Ramp flight element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Roof">
            <summary>
            Roof element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Slab">
            <summary>
            Slab element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Stair">
            <summary>
            Stair element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StairFlight">
            <summary>
            Stair flight element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Wall">
            <summary>
            Wall element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.WallStandardCase">
            <summary>
            Standard wall element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Window">
            <summary>
            Window element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.DistributionElement">
            <summary>
            HVAC/P distribution element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.DistributionControlElement">
            <summary>
            HVAC/P distribution control element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.DistributionFlowElement">
            <summary>
            HVAC/P distribution flow element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.DistributionChamberElement">
            <summary>
            HVAC/P distribution chamber element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.EnergyConversionDevice">
            <summary>
            HVAC/P energy conversion device.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowController">
            <summary>
            HVAC/P flow controller.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ElectricDistributionPoint">
            <summary>
            Electric distribution point.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowFitting">
            <summary>
            HVAC/P flow fitting.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowMovingDevice">
            <summary>
            HVAC/P flow moving device.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowSegment">
            <summary>
            HVAC/P flow segment.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowStorageDevice">
            <summary>
            HVAC/P flow storage device.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowTerminal">
            <summary>
            HVAC/P flow terminal.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FlowTreatmentDevice">
            <summary>
            HVAC/P flow treatment device.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ElectricalElement">
            <summary>
            Electrical element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ElementAssembly">
            <summary>
            Generic element assembly.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ElementComponent">
            <summary>
            Generic element component.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.DiscreteAccessory">
            <summary>
            Element accessory object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Fastener">
            <summary>
            Generic fastener.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.MechanicalFastener">
            <summary>
            Mechanical fastener.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.EquipmentElement">
            <summary>
            Generic equipment element or fixture.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FeatureElement">
            <summary>
            Generic element shape modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FeatureElementAddition">
            <summary>
            Additive element shape modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ProjectionElement">
            <summary>
            Projective (extrusion) element shape modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FeatureElementSubtraction">
            <summary>
            Subtractive element shape modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.EdgeFeature">
            <summary>
            Element edge shape modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ChamferEdgeFeature">
            <summary>
            Element edge chamfer modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.RoundedEdgeFeature">
            <summary>
            Element edge rounding modifier.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.OpeningElement">
            <summary>
            Opening (recess, chase, void) descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.FurnishingElement">
            <summary>
            Generic furniture element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.TransportElement">
            <summary>
            Generic transport (elevator, conveyor belt, stair lift) element.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.VirtualElement">
            <summary>
            Virtual space boundary.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Grid">
            <summary>
            Grid object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Port">
            <summary>
            Generic port (physical connection between elements).
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.DistributionPort">
            <summary>
            HVAC/P distribution port.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Proxy">
            <summary>
            Generic proxy object.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.SpatialStructureElement">
            <summary>
            Generic spatial structure descriptor (building, building storey, space, site).
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Building">
            <summary>
            Building descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.BuildingStorey">
            <summary>
            Building storey descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Site">
            <summary>
            Building site descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Space">
            <summary>
            Space allocation descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralActivity">
            <summary>
            Structural force or displacement descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralAction">
            <summary>
            Structural force or displacement.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralLinearAction">
            <summary>
            Structural linear force or displacement.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralLinearActionVarying">
            <summary>
            Varying linear structural force or displacement.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralPlanarAction">
            <summary>
            Planar structural force or displacement.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralPlanarActionVarying">
            <summary>
            Varying planar structural force or displacement.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralPointAction">
            <summary>
            Structural force or displacement at a point.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralReaction">
            <summary>
            Structural support or deformation.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralPointReaction">
            <summary>
            Structural support or deformation at a point.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralItem">
            <summary>
            Generic structural member or connection.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralConnection">
            <summary>
            Structural connection.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralCurveConnection">
            <summary>
            Curve connection.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralPointConnection">
            <summary>
            Point connection.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralSurfaceConnection">
            <summary>
            Surface connection.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralMember">
            <summary>
            Structural analysis member descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralCurveMember">
            <summary>
            Curved structural analysis member descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralCurveMemberVarying">
            <summary>
            Varying curved structural analysis member descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralSurfaceMember">
            <summary>
            Surface structural analysis member descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.StructuralSurfaceMemberVarying">
            <summary>
            Varying surface structural analysis member descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Project">
            <summary>
            Project descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Group">
            <summary>
            Group descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.System">
            <summary>
            System descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.Zone">
            <summary>
            Zone descriptor.
            </summary>
        </member>
        <member name="F:Fusion.Models.EntityType.ElectricalCircuit">
            <summary>
            Electrical circuit.
            </summary>
        </member>
        <member name="T:Fusion.Models.Geometry">
            <summary>
            Building entity geometry.
            </summary>
        </member>
        <member name="M:Fusion.Models.Geometry.#ctor(Fusion.Models.Entity,Fusion.Models.Material,System.Collections.Generic.IReadOnlyList{Fusion.Float3},System.Collections.Generic.IReadOnlyList{Fusion.UShort3})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Models.Geometry"/> class.
            </summary>
            <param name="entity">The building entity.</param>
            <param name="material">The building entity material.</param>
            <param name="points">The vertex points.</param>
            <param name="faces">The face vertex indices.</param>
        </member>
        <member name="P:Fusion.Models.Geometry.Entity">
            <summary>
            Gets the building entity.
            </summary>
            <value>The building entity.</value>
        </member>
        <member name="P:Fusion.Models.Geometry.Material">
            <summary>
            Gets the building entity material.
            </summary>
            <value>The building entity material.</value>
        </member>
        <member name="P:Fusion.Models.Geometry.Normals">
            <summary>
            Gets the vertex normals.
            </summary>
            <value>The vertex normals.</value>
        </member>
        <member name="P:Fusion.Models.Geometry.BoundingBox">
            <summary>
            Gets the bounding box for the geometry.
            </summary>
            <value>The bounding box for the geometry.</value>
        </member>
        <member name="M:Fusion.Models.Geometry.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Models.Geometry.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Geometry.Equals(Fusion.Models.Geometry)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Geometry.Index(Fusion.Models.Model)">
            <summary>
            Builds the index for the specified model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="T:Fusion.Models.EntityPickingCallbackDelegate">
            <summary>
            Building entity pick filter callback delegate type.
            </summary>
            <param name="modelView">The model view.</param>
            <param name="entity">The building entity.</param>
            <returns>True if the entity can be picked, otherwise false.</returns>
        </member>
        <member name="T:Fusion.Models.EntityPickedCallbackDelegate">
            <summary>
            Building entity pick result callback delegate type.
            </summary>
            <param name="modelView">The model view.</param>
            <param name="entity">The building entity.</param>
        </member>
        <member name="T:Fusion.Models.IModelView">
            <summary>
            Model view interface.
            </summary>
        </member>
        <member name="P:Fusion.Models.IModelView.Model">
            <summary>
            Gets or sets the current model.
            </summary>
            <value>The current model.</value>
        </member>
        <member name="P:Fusion.Models.IModelView.EntityStates">
            <summary>
            Gets or sets the building entity states.
            </summary>
            <value>The building entity states.</value>
        </member>
        <member name="P:Fusion.Models.IModelView.IsPickingEnabled">
            <summary>
            Gets or sets a value indicating whether the picking is enabled.
            </summary>
            <value>True if the picking is enabled, otherwise false.</value>
        </member>
        <member name="P:Fusion.Models.IModelView.EntityPickingCallback">
            <summary>
            Gets or sets the delegate to the entity picking callback.
            </summary>
            <value>The delegate to the entity picking callback.</value>
        </member>
        <member name="P:Fusion.Models.IModelView.EntityPickedCallback">
            <summary>
            Gets or sets the delegate to the entity picked callback.
            </summary>
            <value>The delegate to the entity picked callback.</value>
        </member>
        <member name="T:Fusion.Models.Material">
            <summary>
            Building entity material.
            </summary>
        </member>
        <member name="M:Fusion.Models.Material.#ctor(Fusion.RGBA,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Models.Material"/> class.
            </summary>
            <param name="color">The material color.</param>
            <param name="doubleSided">Indicates whether the material is double sided.</param>
            <param name="enableLighting">Indicates whether the material is lit.</param>
        </member>
        <member name="P:Fusion.Models.Material.Color">
            <summary>
            Gets the material color.
            </summary>
            <value>The material color.</value>
        </member>
        <member name="P:Fusion.Models.Material.DoubleSided">
            <summary>
            Gets a value indicating whether the material is double sided.
            </summary>
            <value>True if the material is double sided, otherwise false.</value>
        </member>
        <member name="P:Fusion.Models.Material.EnableLighting">
            <summary>
            Gets a value indicating whether the material is lit.
            </summary>
            <value>True if the material is lit, otherwise false.</value>
        </member>
        <member name="M:Fusion.Models.Material.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Models.Material.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Material.Equals(Fusion.Models.Material)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Material.Index(Fusion.Models.Model)">
            <summary>
            Builds the index for the specified model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="T:Fusion.Models.Model">
            <summary>
            Building information model.
            </summary>
        </member>
        <member name="F:Fusion.Models.Model.GR01">
            <summary>
            The code that marks the beginning of a building entity group.
            </summary>
        </member>
        <member name="F:Fusion.Models.Model.EN01">
            <summary>
            The code that marks the beginning of a building entity.
            </summary>
        </member>
        <member name="F:Fusion.Models.Model.MA01">
            <summary>
            The code that marks the beginning of a building entity material.
            </summary>
        </member>
        <member name="F:Fusion.Models.Model.GE01">
            <summary>
            The code that marks the beginning of a building entity geometry.
            </summary>
        </member>
        <member name="F:Fusion.Models.Model.DONE">
            <summary>
            The code that marks the end of the stream.
            </summary>
        </member>
        <member name="M:Fusion.Models.Model.#ctor(System.Guid,System.Collections.Generic.IReadOnlyList{Fusion.Models.EntityGroup},System.Collections.Generic.IReadOnlyList{Fusion.Models.Entity},System.Collections.Generic.IReadOnlyList{Fusion.Models.Material},System.Collections.Generic.IReadOnlyList{Fusion.Models.Geometry})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Models.Model"/> class.
            </summary>
            <param name="identifier">The model identifier.</param>
            <param name="entityGroups">The building entity groups.</param>
            <param name="entities">The building entities.</param>
            <param name="materials">The building entity materials.</param>
            <param name="geometries">The building entity geometries.</param>
        </member>
        <member name="P:Fusion.Models.Model.Identifier">
            <summary>
            Gets the model identifier.
            </summary>
            <value>The model identifier.</value>
        </member>
        <member name="P:Fusion.Models.Model.EntityGroups">
            <summary>
            Gets the building entity groups.
            </summary>
            <value>The building entity groups.</value>
        </member>
        <member name="P:Fusion.Models.Model.Entities">
            <summary>
            Gets the building entities.
            </summary>
            <value>The building entities.</value>
        </member>
        <member name="P:Fusion.Models.Model.Materials">
            <summary>
            Gets the building entity materials.
            </summary>
            <value>The building entity materials.</value>
        </member>
        <member name="P:Fusion.Models.Model.Geometries">
            <summary>
            Gets the building entity geometries.
            </summary>
            <value>The building entity geometries.</value>
        </member>
        <member name="P:Fusion.Models.Model.BoundingBox">
            <summary>
            Gets the bounding box for the whole model.
            </summary>
            <value>The bounding box for the whole model.</value>
        </member>
        <member name="M:Fusion.Models.Model.FromRawbim(System.Guid,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Loads a model from a raw bim stream.
            </summary>
            <param name="identifier">The model identifier.</param>
            <param name="source">The source stream.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:Fusion.Models.Model.FromStream(System.Guid,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads a model from a stream.
            </summary>
            <param name="identifier">The model identifier.</param>
            <param name="stream">The input stream.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:Fusion.Models.Model.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Models.Model.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Model.Equals(Fusion.Models.Model)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Models.Model.ToStream(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes the model to a stream.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Fusion.Models.Model.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.PerformanceMetric">
            <summary>
            Performance metric.
            </summary>
        </member>
        <member name="P:Fusion.PerformanceMetric.Operation">
            <summary>
            Gets or sets the operation.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="P:Fusion.PerformanceMetric.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Fusion.PerformanceMetric.Samples">
            <summary>
            Gets or sets the number of samples.
            </summary>
            <value>The number of samples.</value>
        </member>
        <member name="P:Fusion.PerformanceMetric.Total">
            <summary>
            Gets or sets the total time.
            </summary>
            <value>The total time.</value>
        </member>
        <member name="P:Fusion.PerformanceMetric.Average">
            <summary>
            Gets the average time.
            </summary>
            <value>The average time.</value>
        </member>
        <member name="P:Fusion.PerformanceMetric.Minimum">
            <summary>
            Gets or sets the minimum time.
            </summary>
            <value>The minimum time.</value>
        </member>
        <member name="P:Fusion.PerformanceMetric.Maximum">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="M:Fusion.PerformanceMetric.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:Fusion.PopupViewModel">
            <summary>
            An abstract base class for popup view models. View model acts as a connection between the model (data) and the view (user interface elements).
            </summary>
        </member>
        <member name="F:Fusion.PopupViewModel.popup">
            <summary>
            The popup controller.
            </summary>
        </member>
        <member name="P:Fusion.PopupViewModel.Popup">
            <summary>
            Gets or sets the popup controller.
            </summary>
            <value>The popup controller.</value>
        </member>
        <member name="M:Fusion.PopupViewModel.PopupOpened">
            <summary>
            Called when the popup has been opened.
            </summary>
        </member>
        <member name="M:Fusion.PopupViewModel.PopupClosed">
            <summary>
            Called when the popup has been closed.
            </summary>
        </member>
        <member name="T:Fusion.Progress`1">
            <summary>
            Progress object.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Fusion.Progress`1.completion">
            <summary>
            The completion source.
            </summary>
        </member>
        <member name="M:Fusion.Progress`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Progress`1"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Progress`1.#ctor(System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Progress`1" /> class with parent CancellationTokenSource. 
            </summary>
            <param name="parentCancellationTokenSource">The parent cancellation token source.</param>
            <remarks> 
            If parent is canceled, all children are canceled, too.
            If child is canceled, parent and siblings are not affected.
            This is useful when we have a list of progress items where each of them is individually cancelable,
            but we also need to have a way to cancel them all. Linking cancellation token sources is the only way
            in cases like Task.Delay(time, cts) where we can only give one CTS as parameter to method.
            </remarks>
        </member>
        <member name="P:Fusion.Progress`1.Completed">
            <summary>
            Gets the task that represents the completed operation.
            </summary>
            <value>The task that represents the completed operation.</value>
        </member>
        <member name="M:Fusion.Progress`1.Complete(`0)">
            <summary>
            Reports that the operation is complete.
            </summary>
            <param name="result">The operation result.</param>
        </member>
        <member name="M:Fusion.Progress`1.Failed(System.Exception)">
            <summary>
            Reports that the operation has failed.
            </summary>
            <param name="exception">The failure exception.</param>
        </member>
        <member name="T:Fusion.ProgressBase">
            <summary>
            An abstract base class for progress objects.
            </summary>
        </member>
        <member name="F:Fusion.ProgressBase.context">
            <summary>
            The synchronization context.
            </summary>
        </member>
        <member name="F:Fusion.ProgressBase.text">
            <summary>
            The progress description.
            </summary>
        </member>
        <member name="F:Fusion.ProgressBase.progressPercentage">
            <summary>
            The progress percentage.
            </summary>
        </member>
        <member name="F:Fusion.ProgressBase.cancelable">
            <summary>
            Indicates whether the operation is cancelable.
            </summary>
        </member>
        <member name="M:Fusion.ProgressBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ProgressBase"/> class.
            </summary>
        </member>
        <member name="M:Fusion.ProgressBase.#ctor(System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ProgressBase" /> class with parent CancellationTokenSource. 
            </summary>
            <param name="parentCancellationTokenSource">The parent cancellation token source.</param>
            <remarks> 
            If parent is canceled, all children are canceled, too.
            If child is canceled, parent and siblings are not affected.
            This is useful when we have a list of progress items where each of them is individually cancelable,
            but we also need to have a way to cancel them all. Linking cancellation token sources is the only way
            in cases like Task.Delay(time, cts) where we can only give one CTS as parameter to method.
            </remarks>
        </member>
        <member name="E:Fusion.ProgressBase.ProgressChanged">
            <summary>
            Occurs when the progress changes.
            </summary>
        </member>
        <member name="E:Fusion.ProgressBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Fusion.ProgressBase.CancellationToken">
            <summary>
            Gets the cancellation token.
            </summary>
            <value>The cancellation token.</value>
        </member>
        <member name="P:Fusion.ProgressBase.CancellationTokenSource">
            <summary>
            Gets the cancellation token source.
            </summary>
            <value>The cancellation token source.</value>
        </member>
        <member name="P:Fusion.ProgressBase.Text">
            <summary>
            Gets the progress description.
            </summary>
            <value>The progress description.</value>
        </member>
        <member name="P:Fusion.ProgressBase.ProgressPercentage">
            <summary>
            Gets the progress percentage.
            </summary>
            <value>The progress percentage, between zero and one hundred.</value>
        </member>
        <member name="P:Fusion.ProgressBase.Cancelable">
            <summary>
            Gets a value indicating whether the operation is cancelable.
            </summary>
            <value>True if the operation is cancelable, otherwise false.</value>
        </member>
        <member name="P:Fusion.ProgressBase.IsCancellationRequested">
            <summary>
            Gets a value indicating whether the cancellation has been requested.
            </summary>
            <value>True if the cancellation has been requested, otherwise false.</value>
        </member>
        <member name="M:Fusion.ProgressBase.Combine(Fusion.ProgressBase.Update,System.Int32,System.Int32)">
            <summary>
            Creates a progress update from a partial result in a longer operation.
            </summary>
            <param name="update">The partial progress update object.</param>
            <param name="operationIndex">The index of the current operation.</param>
            <param name="operationCount">The total number of operations.</param>
            <returns>The combined progress update object.</returns>
        </member>
        <member name="M:Fusion.ProgressBase.Combine(System.String,Fusion.ProgressBase.Update[])">
            <summary>
            Creates a progress update from partial results in a longer operation.
            </summary>
            <param name="text">The progress description.</param>
            <param name="updates">The progress update objects.</param>
            <returns>The combined progress update object.</returns>
        </member>
        <member name="M:Fusion.ProgressBase.GetLifetimeService">
            <summary>
            Retrieves the current lifetime service object that controls the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/> used to control the lifetime policy for this instance.
            </returns>
        </member>
        <member name="M:Fusion.ProgressBase.CreateObjRef(System.Type)">
            <summary>
            Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.
            </summary>
            <param name="requestedType">The <see cref="T:System.Type"/> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef"/> will reference.</param>
            <returns>
            Information required to generate a proxy.
            </returns>
        </member>
        <member name="M:Fusion.ProgressBase.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/> used to control
            the lifetime policy for this instance. This is the current lifetime service object for this
            instance if one exists; otherwise, a new lifetime service object initialized to the value
            of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime"/>
            property.
            </returns>
        </member>
        <member name="M:Fusion.ProgressBase.Report(Fusion.ProgressBase.Update)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="update">The progress update.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Report(System.String)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="text">The progress description.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Report(System.String,System.Boolean)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="text">The progress description.</param>
            <param name="cancelable">True if the operation is cancelable, otherwise false.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Report(System.String,System.Double)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="text">The progress description.</param>
            <param name="progressPercentage">The progress percentage, between zero and one hundred.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Report(System.String,System.Double,System.Boolean)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="text">The progress description.</param>
            <param name="progressPercentage">The progress percentage, between zero and one hundred.</param>
            <param name="cancelable">True if the operation is cancelable, otherwise false.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Cancel">
            <summary>
            Cancels the operation.
            </summary>
        </member>
        <member name="M:Fusion.ProgressBase.Dispose">
            <summary>
            Releases the managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Fusion.ProgressBase.OnUpdate(Fusion.ProgressBase.Update)">
            <summary>
            Called on a new progress update.
            </summary>
            <param name="update">The progress update.</param>
        </member>
        <member name="M:Fusion.ProgressBase.SetValue``1(``0@,``0,System.String)">
            <summary>
            Sets the property value. Raises the <see cref="E:Fusion.ProgressBase.PropertyChanged" /> event, if needed.
            </summary>
            <typeparam name="T">The type of the property value.</typeparam>
            <param name="field">The property backing field.</param>
            <param name="value">The new property value.</param>
            <param name="propertyName">The property name. If not specified, defaults to the caller member name.</param>
            <returns>True if the property value was modified, otherwise false.</returns>
        </member>
        <member name="T:Fusion.ProgressBase.Update">
            <summary>
            Progress update.
            </summary>
        </member>
        <member name="F:Fusion.ProgressBase.Update.Empty">
            <summary>
            The empty progress update.
            </summary>
        </member>
        <member name="M:Fusion.ProgressBase.Update.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ProgressBase.Update" /> class.
            </summary>
            <param name="text">The progress description.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Update.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ProgressBase.Update"/> class.
            </summary>
            <param name="text">The progress description.</param>
            <param name="cancelable">True if the operation is cancelable, otherwise false.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Update.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ProgressBase.Update"/> class.
            </summary>
            <param name="text">The progress description.</param>
            <param name="progressPercentage">The progress percentage, between zero and one hundred.</param>
        </member>
        <member name="M:Fusion.ProgressBase.Update.#ctor(System.String,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ProgressBase.Update"/> class.
            </summary>
            <param name="text">The progress description.</param>
            <param name="progressPercentage">The progress percentage, between zero and one hundred.</param>
            <param name="cancelable">True if the operation is cancelable, otherwise false.</param>
        </member>
        <member name="P:Fusion.ProgressBase.Update.Text">
            <summary>
            Gets the progress description.
            </summary>
            <value>The progress description.</value>
        </member>
        <member name="P:Fusion.ProgressBase.Update.ProgressPercentage">
            <summary>
            Gets the progress percentage.
            </summary>
            <value>The progress percentage, between zero and one hundred.</value>
        </member>
        <member name="P:Fusion.ProgressBase.Update.Cancelable">
            <summary>
            Gets a value indicating whether the operation is cancelable.
            </summary>
            <value>True if the operation is cancelable, otherwise false.</value>
        </member>
        <member name="T:Fusion.Progress">
            <summary>
            Progress object.
            </summary>
        </member>
        <member name="F:Fusion.Progress.completion">
            <summary>
            The completion source.
            </summary>
        </member>
        <member name="M:Fusion.Progress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Progress"/> class.
            </summary>
        </member>
        <member name="M:Fusion.Progress.#ctor(System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Progress" /> class with parent CancellationTokenSource. 
            </summary>
            <param name="parentCancellationTokenSource">The parent cancellation token source.</param>
            <remarks> 
            If parent is canceled, all children are canceled, too.
            If child is canceled, parent and siblings are not affected.
            This is useful when we have a list of progress items where each of them is individually cancelable,
            but we also need to have a way to cancel them all. Linking cancellation token sources is the only way
            in cases like Task.Delay(time, cts) where we can only give one CTS as parameter to method.
            </remarks>
        </member>
        <member name="P:Fusion.Progress.Completed">
            <summary>
            Gets the task that represents the completed operation.
            </summary>
            <value>The task that represents the completed operation.</value>
        </member>
        <member name="M:Fusion.Progress.Complete">
            <summary>
            Reports that the operation is complete.
            </summary>
        </member>
        <member name="M:Fusion.Progress.Failed(System.Exception)">
            <summary>
            Reports that the operation has failed.
            </summary>
            <param name="exception">The failure exception.</param>
        </member>
        <member name="T:Fusion.PublishedMethodAttribute">
            <summary>
            Indicates that the annotated method is published to external callers.
            </summary>
            <example>
            In an application feature
            <code>
                [PublishedMethod]
                public void Example(string text)
                {
                    Console.WriteLine("Text: {0}", text);
                }
            </code>
            <para/>
            In the calling code
            <code>
                delegate void Example(string text);
                
                async void CallExample()
                {
                    await Host.Invoke((Example m) => m("Hello, world!"));
                }
            </code>
            </example>
        </member>
        <member name="M:Fusion.PublishedMethodAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.PublishedMethodAttribute"/> class.
            </summary>
        </member>
        <member name="M:Fusion.PublishedMethodAttribute.#ctor(Fusion.InvokeIn)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.PublishedMethodAttribute"/> class.
            </summary>
            <param name="invokeIn">The method invocation context.</param>
        </member>
        <member name="P:Fusion.PublishedMethodAttribute.InvokeIn">
            <summary>
            Gets the method invocation context.
            </summary>
            <value>The method invocation context.</value>
        </member>
        <member name="P:Fusion.PublishedMethodAttribute.Documentation">
            <summary>
            Gets or sets the documentation for the published method.
            </summary>
            <value>The documentation for the published method.</value>
        </member>
        <member name="T:Fusion.PublishedViewAttribute">
            <summary>
            Indicates that the annotated method provides the published view. The method signature must match: <c>public ViewModel FactoryMethod(object parameter)</c>.
            </summary>
        </member>
        <member name="M:Fusion.PublishedViewAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.PublishedViewAttribute" /> class.
            </summary>
            <param name="viewName">The view name.</param>
        </member>
        <member name="P:Fusion.PublishedViewAttribute.ViewName">
            <summary>
            Gets the view name.
            </summary>
            <value>The view name.</value>
        </member>
        <member name="P:Fusion.PublishedViewAttribute.ViewType">
            <summary>
            Gets or sets the view type. This property is optional. If the view type is not set, the default naming convention will be used.
            </summary>
            <value>The view type.</value>
        </member>
        <member name="P:Fusion.PublishedViewAttribute.Documentation">
            <summary>
            Gets or sets the documentation for the published view.
            </summary>
            <value>The documentation for the published view.</value>
        </member>
        <member name="T:Fusion.PublishedViewInfo">
            <summary>
            Published view information.
            </summary>
        </member>
        <member name="F:Fusion.PublishedViewInfo.factoryMethod">
            <summary>
            The view model factory method.
            </summary>
        </member>
        <member name="M:Fusion.PublishedViewInfo.#ctor(System.Func{System.Object,Fusion.ViewModel},Fusion.PublishedViewAttribute,Fusion.PublishedViewMetadataAttribute[])">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.PublishedViewInfo" /> class.
            </summary>
            <param name="factoryMethod">The view model factory method.</param>
            <param name="attribute">The published view attribute.</param>
            <param name="metadataAttributes">The published view metadata attributes.</param>
        </member>
        <member name="P:Fusion.PublishedViewInfo.ViewName">
            <summary>
            Gets the view name.
            </summary>
            <value>The view name.</value>
        </member>
        <member name="P:Fusion.PublishedViewInfo.ViewType">
            <summary>
            Gets the view type.
            </summary>
            <value>The view type.</value>
        </member>
        <member name="P:Fusion.PublishedViewInfo.Documentation">
            <summary>
            Gets the documentation.
            </summary>
            <value>The documentation.</value>
        </member>
        <member name="P:Fusion.PublishedViewInfo.Metadata">
            <summary>
            Gets the view metadata.
            </summary>
            <value>The view metadata.</value>
        </member>
        <member name="M:Fusion.PublishedViewInfo.HasMetadata(System.Object)">
            <summary>
            Determines whether the view has the specified metadata.
            </summary>
            <param name="key">The key.</param>
            <returns>True if the view has the specified metadata, otherwise false.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.HasMetadata(System.Object,System.Object)">
            <summary>
            Determines whether the view has the specified metadata.
            </summary>
            <param name="key">The key.</param>
            <param name="expectedValue">The expected value.</param>
            <returns>True if the view has the specified metadata, otherwise false.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.GetMetadata``1(System.Object,``0)">
            <summary>
            Gets the metadata.
            </summary>
            <typeparam name="TValue">The type of the metadata value.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The metadata value or the default value if the view does not have the specified metadata.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.CreateView(System.Object)">
            <summary>
            Creates an instance of the view.
            </summary>
            <param name="parameter">The view parameter.</param>
            <returns>An instance of the view or null if the view could not be created.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.CreateViewInPopup(System.Object)">
            <summary>
            Creates an instance of the view in a popup.
            </summary>
            <param name="parameter">The view parameter.</param>
            <returns>A popup with an instance of the view or null if the view could not be created.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.CreateViewInWindow(System.Object)">
            <summary>
            Creates an instance of the view in a window.
            </summary>
            <param name="parameter">The view parameter.</param>
            <returns>A window with an instance of the view or null if the view could not be created.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.CreatePopup(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Creates a popup for a view.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
            <returns>The popup with the view.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.CreateWindow(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Creates a window for a view.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
            <returns>The window with the view.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.OnCreated(System.Windows.FrameworkElement,Fusion.ViewModel)">
            <summary>
            Called when the view and the view model have been created.
            </summary>
            <param name="view">The view.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Fusion.PublishedViewInfo.OnViewTypeMissing(System.Object)">
            <summary>
            Called when a missing view type is detected.
            </summary>
            <param name="parameter">The view parameter.</param>
        </member>
        <member name="M:Fusion.PublishedViewInfo.OnInvalidViewType(System.Object,System.Type)">
            <summary>
            Called when an invalid view type is detected.
            </summary>
            <param name="parameter">The view parameter.</param>
            <param name="viewType">The view type.</param>
        </member>
        <member name="M:Fusion.PublishedViewInfo.OnException(System.Object,System.Exception)">
            <summary>
            Called when the view construction caused an unhandled exception.
            </summary>
            <param name="parameter">The view parameter.</param>
            <param name="exception">The unhandled exception.</param>
            <returns>True if the exception was handled, otherwise false.</returns>
        </member>
        <member name="M:Fusion.PublishedViewInfo.CreateView``1(System.Object,System.Func{System.Windows.FrameworkElement,Fusion.ViewModel,``0})">
            <summary>
            Creates the view.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="parameter">The view parameter.</param>
            <param name="result">The delegate that converts the result to the desired type.</param>
            <returns>The view or null if the view could not be created.</returns>
        </member>
        <member name="T:Fusion.PublishedViewMetadataAttribute">
            <summary>
            Provides additional metadata for the published view.
            </summary>
        </member>
        <member name="M:Fusion.PublishedViewMetadataAttribute.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.PublishedViewMetadataAttribute" /> class.
            </summary>
            <param name="key">The key object.</param>
            <param name="value">The value object.</param>
        </member>
        <member name="P:Fusion.PublishedViewMetadataAttribute.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Fusion.PublishedViewMetadataAttribute.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Fusion.Random`1">
            <summary>
            Random element generator.
            </summary>
            <typeparam name="TElement">The element type.</typeparam>
        </member>
        <member name="F:Fusion.Random`1.random">
            <summary>
            The random number generator.
            </summary>
        </member>
        <member name="F:Fusion.Random`1.elements">
            <summary>
            The elements.
            </summary>
        </member>
        <member name="M:Fusion.Random`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Random`1"/> class.
            </summary>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Fusion.Random`1.#ctor(System.Collections.Generic.IList{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Random`1"/> class.
            </summary>
            <param name="elements">The elements.</param>
            <param name="seed">The seed number.</param>
        </member>
        <member name="M:Fusion.Random`1.#ctor(System.Collections.Generic.IList{`0},System.Random)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Random`1"/> class.
            </summary>
            <param name="elements">The elements.</param>
            <param name="random">The random number generator.</param>
        </member>
        <member name="M:Fusion.Random`1.Next">
            <summary>
            Returns the next random element.
            </summary>
            <returns>The next random element.</returns>
        </member>
        <member name="M:Fusion.Random`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.Random`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Fusion.RatioUnit">
            <summary>
            Ratio units.
            </summary>
        </member>
        <member name="F:Fusion.RatioUnit.None">
            <summary>
            None ratio unit.
            </summary>
        </member>
        <member name="F:Fusion.RatioUnit.Percent">
            <summary>
            Percent ratio unit.
            </summary>
        </member>
        <member name="F:Fusion.RatioUnit.Permille">
            <summary>
            Permille ratio unit.
            </summary>
        </member>
        <member name="T:Fusion.Ray">
            <summary>
            A ray with a starting point and a direction vector.
            </summary>
        </member>
        <member name="F:Fusion.Ray.Origin">
            <summary>
            The origin point.
            </summary>
        </member>
        <member name="F:Fusion.Ray.Direction">
            <summary>
            The direction vector.
            </summary>
        </member>
        <member name="M:Fusion.Ray.#ctor(Fusion.Float3,Fusion.Float3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Ray"/> struct.
            </summary>
            <param name="origin">The origin point.</param>
            <param name="direction">The direction vector.</param>
        </member>
        <member name="M:Fusion.Ray.op_Equality(Fusion.Ray,Fusion.Ray)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Ray.op_Inequality(Fusion.Ray,Fusion.Ray)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Ray.op_Multiply(System.Single,Fusion.Ray)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Ray.op_Multiply(Fusion.Ray,System.Single)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Ray.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Ray.Equals(Fusion.Ray)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Ray.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Ray.Intersects(Fusion.BoundingBox)">
            <summary>
            Determines whether the ray intersects with a bounding box.
            </summary>
            <param name="boundingBox">The bounding box.</param>
            <returns>The intersection distance or null if there is no intersection.</returns>
        </member>
        <member name="M:Fusion.Ray.Intersects(Fusion.Triangle)">
            <summary>
            Determines whether the ray intersects with a triangle.
            </summary>
            <param name="triangle">The triangle.</param>
            <returns>The intersection distance or null if there is no intersection.</returns>
        </member>
        <member name="M:Fusion.Ray.Intersects(Fusion.TriangleMesh)">
            <summary>
            Determines whether the ray intersects with a triangle mesh.
            </summary>
            <param name="triangleMesh">The triangle mesh.</param>
            <returns>The intersection distance or null if there is no intersection.</returns>
        </member>
        <member name="M:Fusion.Ray.Intersects(Fusion.TriangleMesh,Fusion.Plane[])">
            <summary>
            Determines whether the ray intersects with a triangle mesh.
            </summary>
            <param name="triangleMesh">The triangle mesh.</param>
            <param name="clipPlanes">The clip planes.</param>
            <returns>The intersection distance or null if there is no intersection.</returns>
        </member>
        <member name="M:Fusion.Ray.Near(Fusion.Ray,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the values are near to each other, otherwise false.</returns>
        </member>
        <member name="T:Fusion.ReadOnlySet`1">
            <summary>
            Read only set.
            </summary>
            <typeparam name="T">The type of the set element.</typeparam>
        </member>
        <member name="F:Fusion.ReadOnlySet`1.set">
            <summary>
            The wrapped set.
            </summary>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.#ctor(System.Collections.Generic.ISet{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ReadOnlySet`1"/> class.
            </summary>
            <param name="set">The wrapped set.</param>
        </member>
        <member name="P:Fusion.ReadOnlySet`1.Count">
            <summary>
            Gets the number of elements in the set.
            </summary>
            <value>The number of elements in the set.</value>
        </member>
        <member name="P:Fusion.ReadOnlySet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>
            Gets a value indicating whether the set is read only.
            </summary>
            <value>True if this instance is read only, otherwise false.</value>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.Contains(`0)">
            <summary>
            Determines whether the set contains the specified element.
            </summary>
            <param name="item">The element.</param>
            <returns>True if the set contains the specified element, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the set is a proper subset of the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <returns>True if the set is a proper subset of the specified collection, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the set is a proper superset of the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <returns>True if the set is a proper superset of the specified collection, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the set is a subset of the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <returns>True if the set is subset of the specified collection, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the set is a superset of the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <returns>True if the set is a superset of the specified collection, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the set overlaps with the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <returns>True if the set overlaps with the specified collection, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the set contains the same elements as the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <returns>True if the set contains the same elements as the specified collection, otherwise false.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements from the set to the specified array.
            </summary>
            <param name="array">The target array.</param>
            <param name="arrayIndex">The index of the element in the array where to start the copying.</param>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ICollection{T}#Clear">
            <summary>
            Removes all items from the set.
            </summary>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Adds an item to the set.
            </summary>
            <param name="item">The item.</param>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the set.
            </summary>
            <param name="item">The object to remove from the set.</param>
            <returns>True if the item was removed, otherwise false.</returns>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ISet{T}#Add(`0)">
            <summary>
            Adds an item to the current set and returns a value to indicate if the element was successfully added.
            </summary>
            <param name="item">The item.</param>
            <returns>True if the item was added, otherwise false.</returns>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ISet{T}#ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes all elements in the specified collection from the current set.
            </summary>
            <param name="other">The collection.</param>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ISet{T}#IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Modifies the current set so that it contains only elements that are also in a specified collection.
            </summary>
            <param name="other">The collection.</param>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ISet{T}#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.
            </summary>
            <param name="other">The collection.</param>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="M:Fusion.ReadOnlySet`1.System#Collections#Generic#ISet{T}#UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Modifies the current set so that it contains all elements that are present in both the current set and in the specified collection.
            </summary>
            <param name="other">The collection.</param>
            <exception cref="T:System.NotSupportedException">The set is read-only.</exception>
        </member>
        <member name="T:Fusion.RemoteObject">
            <summary>
            An abstract base class for remote objects. Remote objects can be used across process and application domain boundaries.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.GetLifetimeService">
            <summary>
            Retrieves the current lifetime service object that controls the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/> used to control the lifetime policy for this instance.
            </returns>
        </member>
        <member name="M:Fusion.RemoteObject.CreateObjRef(System.Type)">
            <summary>
            Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.
            </summary>
            <param name="requestedType">The <see cref="T:System.Type"/> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef"/> will reference.</param>
            <returns>
            Information required to generate a proxy.
            </returns>
        </member>
        <member name="M:Fusion.RemoteObject.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/> used to control
            the lifetime policy for this instance. This is the current lifetime service object for this
            instance if one exists; otherwise, a new lifetime service object initialized to the value
            of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime"/>
            property.
            </returns>
        </member>
        <member name="M:Fusion.RemoteObject.CreateProxy(System.IDisposable)">
            <summary>
            Creates a proxy for the specified disposable object. The proxy is required if the object is exposed to the clients.
            </summary>
            <param name="disposable">The disposable object.</param>
            <returns>
            The proxy for the disposable object.
            </returns>
        </member>
        <member name="M:Fusion.RemoteObject.CreateProxy``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a proxy for the specified enumerable collection. The proxy is required if the collection is exposed to the clients.
            </summary>
            <typeparam name="T">The type of the collection element.</typeparam>
            <param name="enumerable">The enumerable collection to proxy.</param>
            <returns>
            The proxy for the enumerable collection.
            </returns>
        </member>
        <member name="M:Fusion.RemoteObject.CreateProxy``1(System.Collections.Generic.IEnumerator{``0})">
            <summary>
            Creates a proxy for the specified collection enumerator. The proxy is required if the enumerator is exposed to the clients.
            </summary>
            <typeparam name="T">The type of the collection element.</typeparam>
            <param name="enumerator">The collection enumerator to proxy.</param>
            <returns>
            The proxy for the collection enumerator.
            </returns>
        </member>
        <member name="T:Fusion.RemoteObject.Client">
            <summary>
            Remote object client.
            </summary>
        </member>
        <member name="F:Fusion.RemoteObject.Client.channel">
            <summary>
            The IPC channel.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.Client.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RemoteObject.Client" /> class.
            </summary>
            <param name="connectionName">The connection name. This must match the server connection name.</param>
        </member>
        <member name="P:Fusion.RemoteObject.Client.ConnectionName">
            <summary>
            Gets the connection name.
            </summary>
            <value>The connection name.</value>
        </member>
        <member name="M:Fusion.RemoteObject.Client.Dispose">
            <summary>
            Terminates the remote object connections.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.Client.Connect``1">
            <summary>
            Connects to the specified object.
            </summary>
            <typeparam name="TRemoteObject">The remote object type.</typeparam>
            <returns>
            The connected object or null if the object cannot be connected.
            </returns>
        </member>
        <member name="T:Fusion.RemoteObject.Server">
            <summary>
            Remote object server.
            </summary>
        </member>
        <member name="F:Fusion.RemoteObject.Server.channel">
            <summary>
            The IPC channel.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.Server.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RemoteObject.Server" /> class.
            </summary>
            <param name="connectionName">The connection name. This must match the client connection name.</param>
            <param name="priority">The remote object channel priority. The default value is 10.</param>
        </member>
        <member name="P:Fusion.RemoteObject.Server.ConnectionName">
            <summary>
            Gets the connection name.
            </summary>
            <value>The connection name.</value>
        </member>
        <member name="M:Fusion.RemoteObject.Server.Dispose">
            <summary>
            Terminates the remote object connections.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.Server.Publish(Fusion.RemoteObject)">
            <summary>
            Publishes the remote object.
            </summary>
            <param name="remoteObject">The remote object.</param>
        </member>
        <member name="T:Fusion.RemoteObject.RemoteDisposable">
            <summary>
            Remote disposable proxy.
            </summary>
        </member>
        <member name="F:Fusion.RemoteObject.RemoteDisposable.disposable">
            <summary>
            The disposable object.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteDisposable.#ctor(System.IDisposable)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RemoteObject.RemoteDisposable" /> class.
            </summary>
            <param name="disposable">The disposable object.</param>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteDisposable.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Fusion.RemoteObject.RemoteEnumerable`1">
            <summary>
            Remote enumerable proxy.
            </summary>
            <typeparam name="T">The type of the collection element.</typeparam>
        </member>
        <member name="F:Fusion.RemoteObject.RemoteEnumerable`1.enumerable">
            <summary>
            The enumerable.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RemoteObject.RemoteEnumerable`1" /> class.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Fusion.RemoteObject.RemoteEnumerator`1">
            <summary>
            Remote enumerator proxy.
            </summary>
            <typeparam name="T">The type of the collection element.</typeparam>
        </member>
        <member name="F:Fusion.RemoteObject.RemoteEnumerator`1.enumerator">
            <summary>
            The enumerator.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerator`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RemoteObject.RemoteEnumerator`1" /> class.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="P:Fusion.RemoteObject.RemoteEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:Fusion.RemoteObject.RemoteEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>True if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Fusion.RemoteObject.RemoteEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="T:Fusion.ResourcesAttribute">
            <summary>
            An abstract base class for resource declaration attributes.
            </summary>
        </member>
        <member name="M:Fusion.ResourcesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ResourcesAttribute" /> class.
            </summary>
            <param name="resourcePath">The resource path.</param>
        </member>
        <member name="P:Fusion.ResourcesAttribute.ResourcePath">
            <summary>
            Gets the resource path.
            </summary>
            <value>The resource path.</value>
        </member>
        <member name="P:Fusion.ResourcesAttribute.Culture">
            <summary>
            Gets or sets the culture. The resources are loaded only if the application culture matches this value. The default value (null) matches any culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Fusion.ResourcesAttribute.Theme">
            <summary>
            Gets or sets the theme. The resources are loaded only if the application theme matches this value. The default value (null) matches any theme.
            </summary>
            <value>The theme.</value>
        </member>
        <member name="T:Fusion.RGBA">
            <summary>
            A vector of 4 byte values, representing a 32 bit color value.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Transparent">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.AliceBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.AntiqueWhite">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Aqua">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Aquamarine">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Azure">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Beige">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Bisque">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Black">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.BlanchedAlmond">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Blue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.BlueViolet">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Brown">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.BurlyWood">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.CadetBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Chartreuse">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Chocolate">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Coral">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Cornflower">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.CornSilk">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Crimson">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Cyan">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkCyan">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkGoldenrod">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkGray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkKhaki">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkMagenta">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkOliveGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkOrange">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkOrchid">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkRed">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkSalmon">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkSeaGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkSlateBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkSlateGray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkTurquoise">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DarkViolet">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DeepPink">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DeepSkyBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DimGray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.DodgerBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Firebrick">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.FloralWhite">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.ForestGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Fuchsia">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Gainsboro">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.GhostWhite">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Gold">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Goldenrod">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Gray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Green">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.GreenYellow">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Honeydew">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.HotPink">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.IndianRed">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Indigo">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Ivory">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Khaki">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Lavender">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LavenderBlush">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LawnGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LaserLemon">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LemonChiffon">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightCoral">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightCyan">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightGoldenrod">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightGray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightPink">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightSalmon">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightSeaGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightSkyBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightSlateGray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightSteelBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LightYellow">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Lime">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.LimeGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Linen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Magenta">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Maroon">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumAquamarine">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumOrchid">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumPurple">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumSeaGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumSlateBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumSpringGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumTurquoise">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MediumVioletRed">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MidnightBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MintCream">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.MistyRose">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Moccasin">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.NavajoWhite">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Navy">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.OldLace">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Olive">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.OliveDrab">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Orange">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.OrangeRed">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Orchid">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PaleGoldenrod">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PaleGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PaleTurquoise">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PaleVioletRed">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PapayaWhip">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PeachPuff">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Peru">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Pink">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Plum">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.PowderBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Purple">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Red">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.RosyBrown">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.RoyalBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SaddleBrown">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Salmon">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SandyBrown">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SeaGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Seashell">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Sienna">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Silver">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SkyBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SlateBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SlateGray">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Snow">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SpringGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.SteelBlue">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Tan">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Teal">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Thistle">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Tomato">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Turquoise">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Violet">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Wheat">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.White">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.WhiteSmoke">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.Yellow">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.YellowGreen">
            <summary>
            The standard named color.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.R">
            <summary>
            The red component.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.G">
            <summary>
            The green component.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.B">
            <summary>
            The blue component.
            </summary>
        </member>
        <member name="F:Fusion.RGBA.A">
            <summary>
            The alpha component.
            </summary>
        </member>
        <member name="M:Fusion.RGBA.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RGBA" /> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.RGBA.#ctor(System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RGBA" /> struct.
            </summary>
            <param name="rgb">The value for the red, green and blue components.</param>
            <param name="a">The alpha component.</param>
        </member>
        <member name="M:Fusion.RGBA.#ctor(Fusion.RGBA,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RGBA" /> struct.
            </summary>
            <param name="rgb">The values for the red, green and blue components.</param>
            <param name="a">The alpha component.</param>
        </member>
        <member name="M:Fusion.RGBA.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RGBA" /> struct.
            </summary>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
        </member>
        <member name="M:Fusion.RGBA.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.RGBA" /> struct.
            </summary>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
        </member>
        <member name="P:Fusion.RGBA.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Equality(Fusion.RGBA,Fusion.RGBA)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Inequality(Fusion.RGBA,Fusion.RGBA)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Explicit(Fusion.Short4)~Fusion.RGBA">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Explicit(Fusion.UShort4)~Fusion.RGBA">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Explicit(Fusion.Int4)~Fusion.RGBA">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Explicit(Fusion.Float4)~Fusion.RGBA">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.op_Explicit(Fusion.Double4)~Fusion.RGBA">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.RGBA.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.RGBA.Equals(Fusion.RGBA)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.RGBA.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.RGBA.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.RoundingMode">
            <summary>
            Rounding modes.
            </summary>
        </member>
        <member name="F:Fusion.RoundingMode.Nearest">
            <summary>
            Round to the nearest whole precision unit.
            </summary>
        </member>
        <member name="F:Fusion.RoundingMode.Up">
            <summary>
            Round up to the whole precision unit.
            </summary>
        </member>
        <member name="F:Fusion.RoundingMode.Down">
            <summary>
            Round down to the whole precision unit.
            </summary>
        </member>
        <member name="T:Fusion.SessionCredential">
            <summary>
            Session credential.
            </summary>
        </member>
        <member name="M:Fusion.SessionCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.SessionCredential"/> class.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
        </member>
        <member name="M:Fusion.SessionCredential.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.SessionCredential"/> class.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
            <param name="save">Indicates whether the credential should be saved.</param>
        </member>
        <member name="M:Fusion.SessionCredential.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.SessionCredential" /> class.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
            <param name="domain">The domain associated with these credentials.</param>
        </member>
        <member name="M:Fusion.SessionCredential.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.SessionCredential" /> class.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
            <param name="domain">The domain associated with these credentials.</param>
            <param name="save">Indicates whether the credential should be saved.</param>
        </member>
        <member name="P:Fusion.SessionCredential.Save">
            <summary>
            Gets or sets a value indicating whether the credential should be saved.
            </summary>
            <value>True if the credential should be saved, otherwise false.</value>
        </member>
        <member name="T:Fusion.SharedResourcesAttribute">
            <summary>
            Declares the shared resources for the annotated application or application feature class. Shared resources are loaded before localized and theme specific resources.
            </summary>
        </member>
        <member name="M:Fusion.SharedResourcesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.SharedResourcesAttribute" /> class.
            </summary>
            <param name="resourcePath">The resource path.</param>
        </member>
        <member name="T:Fusion.Short2">
            <summary>
            A vector of 2 integer values.
            </summary>
        </member>
        <member name="F:Fusion.Short2.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Short2.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="M:Fusion.Short2.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short2"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Short2.#ctor(System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short2"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="P:Fusion.Short2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Equality(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Inequality(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_UnaryPlus(Fusion.Short2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Addition(System.Int16,Fusion.Short2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Addition(Fusion.Short2,System.Int16)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Addition(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_UnaryNegation(Fusion.Short2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Subtraction(System.Int16,Fusion.Short2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Subtraction(Fusion.Short2,System.Int16)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Subtraction(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Multiply(System.Int16,Fusion.Short2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Multiply(Fusion.Short2,System.Int16)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Multiply(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Division(System.Int16,Fusion.Short2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Division(Fusion.Short2,System.Int16)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Division(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Modulus(System.Int16,Fusion.Short2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Modulus(Fusion.Short2,System.Int16)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Modulus(Fusion.Short2,Fusion.Short2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Explicit(Fusion.UShort2)~Fusion.Short2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Explicit(Fusion.Int2)~Fusion.Short2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Explicit(Fusion.Half2)~Fusion.Short2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Explicit(Fusion.Float2)~Fusion.Short2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.op_Explicit(Fusion.Double2)~Fusion.Short2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short2.Abs(Fusion.Short2)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Short2.Max(Fusion.Short2,Fusion.Short2)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Short2.Min(Fusion.Short2,Fusion.Short2)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Short2.Sign(Fusion.Short2)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Short2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Short2.Equals(Fusion.Short2)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Short2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Short2.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Short2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Short3">
            <summary>
            A vector of 3 integer values.
            </summary>
        </member>
        <member name="F:Fusion.Short3.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Short3.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Short3.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="M:Fusion.Short3.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short3"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Short3.#ctor(System.Int16,Fusion.Short2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
        </member>
        <member name="M:Fusion.Short3.#ctor(Fusion.Short2,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short3"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.Short3.#ctor(System.Int16,System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="P:Fusion.Short3.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Short3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Equality(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Inequality(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_UnaryPlus(Fusion.Short3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Addition(System.Int16,Fusion.Short3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Addition(Fusion.Short3,System.Int16)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Addition(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_UnaryNegation(Fusion.Short3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Subtraction(System.Int16,Fusion.Short3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Subtraction(Fusion.Short3,System.Int16)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Subtraction(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Multiply(System.Int16,Fusion.Short3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Multiply(Fusion.Short3,System.Int16)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Multiply(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Division(System.Int16,Fusion.Short3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Division(Fusion.Short3,System.Int16)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Division(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Modulus(System.Int16,Fusion.Short3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Modulus(Fusion.Short3,System.Int16)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Modulus(Fusion.Short3,Fusion.Short3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Explicit(Fusion.UShort3)~Fusion.Short3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Explicit(Fusion.Int3)~Fusion.Short3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Explicit(Fusion.Half3)~Fusion.Short3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Explicit(Fusion.Float3)~Fusion.Short3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.op_Explicit(Fusion.Double3)~Fusion.Short3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short3.Abs(Fusion.Short3)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Short3.Max(Fusion.Short3,Fusion.Short3)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Short3.Min(Fusion.Short3,Fusion.Short3)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Short3.Sign(Fusion.Short3)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Short3.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Short3.Equals(Fusion.Short3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Short3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Short3.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Short3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Short4">
            <summary>
            A vector of 4 integer values.
            </summary>
        </member>
        <member name="F:Fusion.Short4.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.Short4.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.Short4.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="F:Fusion.Short4.W">
            <summary>
            The W component.
            </summary>
        </member>
        <member name="M:Fusion.Short4.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(System.Int16,Fusion.Short3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yzw">The Y, Z and W components.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(Fusion.Short2,Fusion.Short2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(Fusion.Short3,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="xyz">The X, Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(System.Int16,System.Int16,Fusion.Short2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(System.Int16,Fusion.Short2,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(Fusion.Short2,System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.Short4.#ctor(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Short4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="P:Fusion.Short4.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.Short4.XYZ">
            <summary>
            Gets the X, Y and Z vector components.
            </summary>
            <value>The X, Y and Z vector components.</value>
        </member>
        <member name="P:Fusion.Short4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Equality(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Inequality(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_UnaryPlus(Fusion.Short4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Addition(System.Int16,Fusion.Short4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Addition(Fusion.Short4,System.Int16)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Addition(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_UnaryNegation(Fusion.Short4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Subtraction(System.Int16,Fusion.Short4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Subtraction(Fusion.Short4,System.Int16)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Subtraction(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Multiply(System.Int16,Fusion.Short4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Multiply(Fusion.Short4,System.Int16)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Multiply(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Division(System.Int16,Fusion.Short4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Division(Fusion.Short4,System.Int16)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Division(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Modulus(System.Int16,Fusion.Short4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Modulus(Fusion.Short4,System.Int16)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Modulus(Fusion.Short4,Fusion.Short4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Implicit(Fusion.RGBA)~Fusion.Short4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Explicit(Fusion.UShort4)~Fusion.Short4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Explicit(Fusion.Int4)~Fusion.Short4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Explicit(Fusion.Half4)~Fusion.Short4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Explicit(Fusion.Float4)~Fusion.Short4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.op_Explicit(Fusion.Double4)~Fusion.Short4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Short4.Abs(Fusion.Short4)">
            <summary>
            Returns the absolute values of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The absolute values of the vector components.</returns>
        </member>
        <member name="M:Fusion.Short4.Max(Fusion.Short4,Fusion.Short4)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Short4.Min(Fusion.Short4,Fusion.Short4)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Short4.Sign(Fusion.Short4)">
            <summary>
            Returns the signs of the vector components.
            </summary>
            <param name="value">The vectorized value.</param>
            <returns>The signs of the vector components.</returns>
        </member>
        <member name="M:Fusion.Short4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Short4.Equals(Fusion.Short4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Short4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Short4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Short4.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Plane">
            <summary>
            A plane.
            </summary>
        </member>
        <member name="F:Fusion.Plane.Normal">
            <summary>
            The plane normal.
            </summary>
        </member>
        <member name="F:Fusion.Plane.Distance">
            <summary>
            The plane distance from the origin.
            </summary>
        </member>
        <member name="M:Fusion.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Plane" /> struct.
            </summary>
            <param name="x">The plane normal X component.</param>
            <param name="y">The plane normal Y component.</param>
            <param name="z">The plane normal Z component.</param>
            <param name="distance">The plane distance from the origin.</param>
        </member>
        <member name="M:Fusion.Plane.#ctor(Fusion.Float3,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Plane"/> struct.
            </summary>
            <param name="normal">The plane normal.</param>
            <param name="distance">The plane distance from the origin.</param>
        </member>
        <member name="M:Fusion.Plane.op_Equality(Fusion.Plane,Fusion.Plane)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Plane.op_Inequality(Fusion.Plane,Fusion.Plane)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Plane.DistanceTo(Fusion.Float3)">
            <summary>
            Calculates the distance between the plane and a point.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance between the plane and the point. The distance is negative if the point is on the backside of the plane.</returns>
        </member>
        <member name="M:Fusion.Plane.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Fusion.Plane.Equals(Fusion.Plane)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Fusion.Plane.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Plane.Near(Fusion.Plane,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the values are near to each other, otherwise false.</returns>
        </member>
        <member name="T:Fusion.ThemeResourcesAttribute">
            <summary>
            Declares the theme specific resources for the annotated application or application feature class. Theme specific resources are loaded after shared and localized resources.
            </summary>
        </member>
        <member name="M:Fusion.ThemeResourcesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ThemeResourcesAttribute" /> class.
            </summary>
            <param name="resourcePath">The resource path.</param>
        </member>
        <member name="T:Fusion.ThreadingAttribute">
            <summary>
            Provides the threading information for a method or a property.
            </summary>
        </member>
        <member name="M:Fusion.ThreadingAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.ThreadingAttribute"/> class.
            </summary>
            <param name="threadingInformation">The threading information.</param>
        </member>
        <member name="P:Fusion.ThreadingAttribute.ThreadingInformation">
            <summary>
            Gets the threading information.
            </summary>
            <value>The threading information.</value>
        </member>
        <member name="T:Fusion.Triangle">
            <summary>
            A triangle with three vertex points.
            </summary>
        </member>
        <member name="F:Fusion.Triangle.V1">
            <summary>
            The first vertex point.
            </summary>
        </member>
        <member name="F:Fusion.Triangle.V2">
            <summary>
            The second vertex point.
            </summary>
        </member>
        <member name="F:Fusion.Triangle.V3">
            <summary>
            The third vertex point.
            </summary>
        </member>
        <member name="M:Fusion.Triangle.#ctor(Fusion.Float3,Fusion.Float3,Fusion.Float3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Triangle"/> struct.
            </summary>
            <param name="v1">The first vertex point.</param>
            <param name="v2">The second vertex point.</param>
            <param name="v3">The third vertex point.</param>
        </member>
        <member name="P:Fusion.Triangle.Center">
            <summary>
            Gets the center point.
            </summary>
            <value>The center point.</value>
        </member>
        <member name="P:Fusion.Triangle.Normal">
            <summary>
            Gets the normal vector.
            </summary>
            <value>The normal vector.</value>
        </member>
        <member name="M:Fusion.Triangle.op_Equality(Fusion.Triangle,Fusion.Triangle)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Triangle.op_Inequality(Fusion.Triangle,Fusion.Triangle)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Triangle.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Fusion.Triangle.Equals(Fusion.Triangle)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Fusion.Triangle.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Triangle.Near(Fusion.Triangle,System.Int32)">
            <summary>
            Determines whether the floating point values are near to each other.
            </summary>
            <param name="other">The other floating point value.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the values are near to each other, otherwise false.</returns>
        </member>
        <member name="T:Fusion.TriangleMesh">
            <summary>
            A collection of triangles constructed from connected points.
            </summary>
        </member>
        <member name="M:Fusion.TriangleMesh.#ctor(System.Collections.Generic.IReadOnlyList{Fusion.Float3},System.Collections.Generic.IReadOnlyList{Fusion.UShort3})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.TriangleMesh"/> class.
            </summary>
            <param name="points">The vertex points.</param>
            <param name="faces">The face vertex indices.</param>
        </member>
        <member name="P:Fusion.TriangleMesh.Points">
            <summary>
            Gets the vertex points.
            </summary>
            <value>The vertex points.</value>
        </member>
        <member name="P:Fusion.TriangleMesh.Faces">
            <summary>
            Gets the face vertex indices.
            </summary>
            <value>The face vertex indices.</value>
        </member>
        <member name="M:Fusion.TriangleMesh.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Fusion.TriangleMesh.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.TriangleMesh.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.TriangleMesh.Equals(Fusion.TriangleMesh)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.TriangleMesh.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Fusion.UShort2">
            <summary>
            A vector of 2 unsigned integer values.
            </summary>
        </member>
        <member name="F:Fusion.UShort2.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.UShort2.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="M:Fusion.UShort2.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort2"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.UShort2.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort2"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="P:Fusion.UShort2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Equality(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Inequality(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_UnaryPlus(Fusion.UShort2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Addition(System.UInt16,Fusion.UShort2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Addition(Fusion.UShort2,System.UInt16)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Addition(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_UnaryNegation(Fusion.UShort2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Subtraction(System.UInt16,Fusion.UShort2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Subtraction(Fusion.UShort2,System.UInt16)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Subtraction(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Multiply(System.UInt16,Fusion.UShort2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Multiply(Fusion.UShort2,System.UInt16)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Multiply(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Division(System.UInt16,Fusion.UShort2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Division(Fusion.UShort2,System.UInt16)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Division(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Modulus(System.UInt16,Fusion.UShort2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Modulus(Fusion.UShort2,System.UInt16)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Modulus(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Explicit(Fusion.Short2)~Fusion.UShort2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Explicit(Fusion.Int2)~Fusion.UShort2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Explicit(Fusion.Half2)~Fusion.UShort2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Explicit(Fusion.Float2)~Fusion.UShort2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.op_Explicit(Fusion.Double2)~Fusion.UShort2">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort2.Max(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.UShort2.Min(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.UShort2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UShort2.Equals(Fusion.UShort2)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UShort2.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.UShort2.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.UShort2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.UShort3">
            <summary>
            A vector of 3 unsigned integer values.
            </summary>
        </member>
        <member name="F:Fusion.UShort3.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.UShort3.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.UShort3.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="M:Fusion.UShort3.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort3"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.UShort3.#ctor(System.UInt16,Fusion.UShort2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
        </member>
        <member name="M:Fusion.UShort3.#ctor(Fusion.UShort2,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort3"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="M:Fusion.UShort3.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort3"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
        </member>
        <member name="P:Fusion.UShort3.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.UShort3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Equality(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Inequality(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_UnaryPlus(Fusion.UShort3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Addition(System.UInt16,Fusion.UShort3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Addition(Fusion.UShort3,System.UInt16)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Addition(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_UnaryNegation(Fusion.UShort3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Subtraction(System.UInt16,Fusion.UShort3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Subtraction(Fusion.UShort3,System.UInt16)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Subtraction(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Multiply(System.UInt16,Fusion.UShort3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Multiply(Fusion.UShort3,System.UInt16)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Multiply(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Division(System.UInt16,Fusion.UShort3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Division(Fusion.UShort3,System.UInt16)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Division(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Modulus(System.UInt16,Fusion.UShort3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Modulus(Fusion.UShort3,System.UInt16)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Modulus(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Explicit(Fusion.Short3)~Fusion.UShort3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Explicit(Fusion.Int3)~Fusion.UShort3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Explicit(Fusion.Half3)~Fusion.UShort3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Explicit(Fusion.Float3)~Fusion.UShort3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.op_Explicit(Fusion.Double3)~Fusion.UShort3">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort3.Max(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.UShort3.Min(Fusion.UShort3,Fusion.UShort3)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.UShort3.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UShort3.Equals(Fusion.UShort3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UShort3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.UShort3.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.UShort3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.UShort4">
            <summary>
            A vector of 4 unsigned integer values.
            </summary>
        </member>
        <member name="F:Fusion.UShort4.X">
            <summary>
            The X component.
            </summary>
        </member>
        <member name="F:Fusion.UShort4.Y">
            <summary>
            The Y component.
            </summary>
        </member>
        <member name="F:Fusion.UShort4.Z">
            <summary>
            The Z component.
            </summary>
        </member>
        <member name="F:Fusion.UShort4.W">
            <summary>
            The W component.
            </summary>
        </member>
        <member name="M:Fusion.UShort4.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="all">The value for all components.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(System.UInt16,Fusion.UShort3)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yzw">The Y, Z and W components.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(Fusion.UShort2,Fusion.UShort2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(Fusion.UShort3,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="xyz">The X, Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(System.UInt16,System.UInt16,Fusion.UShort2)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="zw">The Z and W components.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(System.UInt16,Fusion.UShort2,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="yz">The Y and Z components.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(Fusion.UShort2,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="xy">The X and Y components.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="M:Fusion.UShort4.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.UShort4"/> struct.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
            <param name="z">The Z component.</param>
            <param name="w">The W component.</param>
        </member>
        <member name="P:Fusion.UShort4.XY">
            <summary>
            Gets the X and Y vector components.
            </summary>
            <value>The X and Y vector components.</value>
        </member>
        <member name="P:Fusion.UShort4.XYZ">
            <summary>
            Gets the X, Y and Z vector components.
            </summary>
            <value>The X, Y and Z vector components.</value>
        </member>
        <member name="P:Fusion.UShort4.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The component value.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Equality(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Inequality(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_UnaryPlus(Fusion.UShort4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Addition(System.UInt16,Fusion.UShort4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Addition(Fusion.UShort4,System.UInt16)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Addition(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_UnaryNegation(Fusion.UShort4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Subtraction(System.UInt16,Fusion.UShort4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Subtraction(Fusion.UShort4,System.UInt16)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Subtraction(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Multiply(System.UInt16,Fusion.UShort4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Multiply(Fusion.UShort4,System.UInt16)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Multiply(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Division(System.UInt16,Fusion.UShort4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Division(Fusion.UShort4,System.UInt16)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Division(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Modulus(System.UInt16,Fusion.UShort4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Modulus(Fusion.UShort4,System.UInt16)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Modulus(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Implicit(Fusion.RGBA)~Fusion.UShort4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Explicit(Fusion.Short4)~Fusion.UShort4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Explicit(Fusion.Int4)~Fusion.UShort4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Explicit(Fusion.Half4)~Fusion.UShort4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Explicit(Fusion.Float4)~Fusion.UShort4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.op_Explicit(Fusion.Double4)~Fusion.UShort4">
            <summary>
            Implements a cast operator.
            </summary>
            <param name="v">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.UShort4.Max(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Returns the maximum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.UShort4.Min(Fusion.UShort4,Fusion.UShort4)">
            <summary>
            Returns the minimum values of the components of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum values of the components of the two vectors.</returns>
        </member>
        <member name="M:Fusion.UShort4.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UShort4.Equals(Fusion.UShort4)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.UShort4.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.UShort4.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.UShort4.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.Utils.Display">
            <summary>
            The display class.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.MONITORINFOF_PRIMARY">
            <summary>
            The primary monitor flag.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.#ctor(System.Windows.Rect,System.Windows.Rect,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Utils.Display" /> class.
            </summary>
            <param name="size">The size.</param>
            <param name="workArea">The work area.</param>
            <param name="isPrimary">if set to <c>true</c> [is primary].</param>
        </member>
        <member name="P:Fusion.Utils.Display.PrimaryDisplay">
            <summary>
            Gets the primary display.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.DisplaySize">
            <summary>
            The display size
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.WorkArea">
            <summary>
            The work area
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.IsPrimary">
            <summary>
            <c>True</c> if display is the primary display; otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.MultipleDisplaysInUse">
            <summary>
            Gets a value indicating whether multiple displays are in use.
            </summary>
            <value>
            <c>True</c> if multiple displays are in use; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusion.Utils.Display.AllDisplays">
            <summary>
            Gets all displays.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.GetSizeFromNativeRect(Fusion.Utils.Display.RECT)">
            <summary>
            Creates the rectangle.
            </summary>
            <param name="native">The native rectangle struct.</param>
            <returns>
            A rectangle
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.ToDisplay(Fusion.Utils.Display.MONITORINFO)">
            <summary>
            Creates a display from the monitor information.
            </summary>
            <param name="monitorInfo">The monitor information.</param>
            <returns>The display</returns>
        </member>
        <member name="M:Fusion.Utils.Display.GetPrimaryOrDefault">
            <summary>
            Gets the primary or null.
            </summary>
            <returns>The primary display or null</returns>
        </member>
        <member name="M:Fusion.Utils.Display.IsVisibleInDisplays(System.Windows.Point)">
            <summary>
            Determines whether the specified location is visible in displays.
            </summary>
            <param name="location">The location.</param>
            <returns>
            <c>true</c> if the specified location is visible in displays.; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.GetFromPoint(System.Windows.Point)">
            <summary>
            Gets the nearest monitor.
            </summary>
            <param name="point">The point.</param>
            <returns>Display from point, primary display by default</returns>
        </member>
        <member name="T:Fusion.Utils.Display.MonitorEnumerationProxy">
            <summary>
            Proxy class that implements monitor enumeration callback.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.MonitorEnumerationProxy.displays">
            <summary>
            The displays from the enumerated monitors.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.MonitorEnumerationProxy.AddDisplay(System.IntPtr,System.IntPtr,Fusion.Utils.Display.RECT@,System.Int32)">
            <summary>
            Adds the enumerated monitor as display.
            </summary>
            <param name="hMonitor">
            The handle to monitor.
            </param>
            <param name="hdcMonitor">
            The handle to device context. The device context has color attributes that are appropriate for the display monitor identified by hMonitor.
            </param>
            <param name="lprcMonitor">
            If hdcMonitor is non-NULL, this rectangle is the intersection of the clipping area of the device context identified by hdcMonitor and the display monitor
            rectangle.
            The rectangle coordinates are device-context coordinates.
            If hdcMonitor is NULL, this rectangle is the display monitor rectangle.The rectangle coordinates are virtual - screen coordinates.
            </param>
            <param name="dwData">
            Application-defined data that EnumDisplayMonitors passes directly to the callback function.
            </param>
            <returns>True, to continue enumeration</returns>
        </member>
        <member name="M:Fusion.Utils.Display.MonitorEnumerationProxy.GetDisplays">
            <summary>
            Gets the displays.
            </summary>
            <returns>The displays.</returns>
        </member>
        <member name="T:Fusion.Utils.Display.MonitorEnumerationProxy.MonitorEnumDelegate">
            <summary>
            Delegate that will be used as the callback when enumerating monitors.
            </summary>
            <param name="hMonitor">The handle to monitor.</param>
            <param name="hdcMonitor">
            The handle to device context. The device context has color attributes that are appropriate for the display monitor identified by
            hMonitor.
            </param>
            <param name="lprcMonitor">
            If hdcMonitor is non-NULL, this rectangle is the intersection of the clipping area of the device context identified by hdcMonitor and the display monitor
            rectangle.
            The rectangle coordinates are device-context coordinates.
            If hdcMonitor is NULL, this rectangle is the display monitor rectangle.The rectangle coordinates are virtual - screen coordinates.
            </param>
            <param name="dwData">Application-defined data that EnumDisplayMonitors passes directly to the callback function.</param>
            <returns><c>true</c> to continue enumeration, <c>false</c> to stop enumeration</returns>
        </member>
        <member name="T:Fusion.Utils.Display.MONITORINFO">
            <summary>
            The <see cref="T:Fusion.Utils.Display.MONITORINFO" /> interop struct provides monitor information.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.MONITORINFO.Size">
            <summary>
            The size.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.MONITORINFO.Monitor">
            <summary>
            The monitor bound.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.MONITORINFO.WorkArea">
            <summary>
            The work area.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.MONITORINFO.Flags">
            <summary>
            The flags.
            </summary>
        </member>
        <member name="T:Fusion.Utils.Display.RECT">
            <summary>
            The <see cref="T:Fusion.Utils.Display.RECT" /> struct provides rectangle data for interop.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.RECT.Left">
            <summary>
            The left.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.RECT.Top">
            <summary>
            The top.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.RECT.Right">
            <summary>
            The right.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.RECT.Bottom">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Utils.Display.RECT" /> struct.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Utils.Display.RECT" /> struct.
            </summary>
            <param name="other">The other rectangle.</param>
        </member>
        <member name="P:Fusion.Utils.Display.RECT.X">
            <summary>
            Gets or sets the X.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.RECT.Y">
            <summary>
            Gets or sets the Y.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.RECT.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.RECT.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.RECT.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Fusion.Utils.Display.RECT.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.op_Implicit(Fusion.Utils.Display.RECT)~System.Drawing.Rectangle">
            <summary>
            Performs an implicit conversion from <see cref="T:Fusion.Utils.Display.RECT" /> to <see cref="T:System.Drawing.Rectangle" />.
            </summary>
            <param name="other">The other.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.op_Implicit(System.Drawing.Rectangle)~Fusion.Utils.Display.RECT">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Drawing.Rectangle" /> to <see cref="T:Fusion.Utils.Display.RECT" />.
            </summary>
            <param name="other">The other.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.op_Equality(Fusion.Utils.Display.RECT,Fusion.Utils.Display.RECT)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.op_Inequality(Fusion.Utils.Display.RECT,Fusion.Utils.Display.RECT)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.Equals(Fusion.Utils.Display.RECT)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.RECT.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Fusion.Utils.Display.WindowProxy">
            <summary>
            A proxy class that implements some windows.h functions.
            </summary>
        </member>
        <member name="T:Fusion.Utils.Display.WindowProxy.MonitorOptions">
            <summary>
            The <see cref="T:Fusion.Utils.Display.WindowProxy.MonitorOptions" /> enum represents the interop monitor options.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.MonitorOptions.MONITOR_DEFAULTTONULL">
            <summary>
            The null option.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.MonitorOptions.MONITOR_DEFAULTTOPRIMARY">
            <summary>
            The primary option.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.MonitorOptions.MONITOR_DEFAULTTONEAREST">
            <summary>
            The nearest option.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.WindowProxy.TryGetMonitorInfoFromHandle(System.IntPtr,Fusion.Utils.Display.MONITORINFO)">
            <summary>
            Tries the get monitor information from handle.
            </summary>
            <param name="monitorHandle">The monitor handle.</param>
            <param name="monitorInfo">The monitor information.</param>
            <returns>
            <c>True</c> if monitor info is fetched; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.WindowProxy.TryGetMonitorForPoint(System.Windows.Point,Fusion.Utils.Display.MONITORINFO,Fusion.Utils.Display.WindowProxy.MonitorOptions)">
            <summary>
            Tries the get monitor information for the given point.
            </summary>
            <param name="point">The point.</param>
            <param name="monitorInfo">The monitor information.</param>
            <param name="flags">The flags.</param>
            <returns>
            <c>True</c> if monitor info is fetched; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.WindowProxy.TryGetMonitorForRect(System.Windows.Rect,Fusion.Utils.Display.MONITORINFO,Fusion.Utils.Display.WindowProxy.MonitorOptions)">
            <summary>
            Tries the get monitor information for the given rectangle.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="monitorInfo">The monitor information.</param>
            <param name="flags">The flags.</param>
            <returns>
            <c>True</c> if monitor info is fetched; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.WindowProxy.TryEnumerateAllMonitors(Fusion.Utils.Display.MonitorEnumerationProxy.MonitorEnumDelegate)">
            <summary>
            Tries the get all monitors.
            </summary>
            <param name="monitorEnumDelegate">The monitor enum proc.</param>
            <returns>
            <c>True</c> if enumeration succeeded; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusion.Utils.Display.WindowProxy.AmountOfMonitors">
            <summary>
            Gets the amount of the monitors.
            </summary>
            <returns>
            The int32.
            </returns>
        </member>
        <member name="T:Fusion.Utils.Display.WindowProxy.POINT">
            <summary>
            The <see cref="T:Fusion.Utils.Display.WindowProxy.POINT" /> struct.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.POINT.X">
            <summary>
            The X.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.POINT.Y">
            <summary>
            The Y.
            </summary>
        </member>
        <member name="M:Fusion.Utils.Display.WindowProxy.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Utils.Display.WindowProxy.POINT" /> struct.
            </summary>
            <param name="x">The X.</param>
            <param name="y">The Y.</param>
        </member>
        <member name="T:Fusion.Utils.Display.WindowProxy.SystemMetric">
            <summary>
            Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
            This Enum and declaration signature was written by Gabriel T. Sharp
            ai_productions@verizon.net or osirisgothra@hotmail.com
            Obtained on pinvoke.net, please contribute your code to support the wiki!
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_ARRANGE">
            <summary>
            The flags that specify how the system arranged minimized windows. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CLEANBOOT">
            <summary>
            The value that specifies how the system is started:
            0 Normal boot
            1 Fail-safe boot
            2 Fail-safe with network boot
            A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CMONITORS">
            <summary>
            The number of display monitors on a desktop. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CMOUSEBUTTONS">
            <summary>
            The number of buttons on a mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXBORDER">
            <summary>
            The width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXCURSOR">
            <summary>
            The width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXDLGFRAME">
            <summary>
            This value is the same as SM_CXFIXEDFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXDOUBLECLK">
            <summary>
            The width of the rectangle around the location of a first click in a double-click sequence, in pixels. ,
            The second click must occur within the rectangle that is defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system
            to consider the two clicks a double-click. The two clicks must also occur within a specified time.
            To set the width of the double-click rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKWIDTH.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXDRAG">
            <summary>
            The number of pixels on either side of a mouse-down point that the mouse pointer can move before a drag operation begins.
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            If this value is negative, it is subtracted from the left of the mouse-down point and added to the right of it.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXEDGE">
            <summary>
            The width of a 3-D border, in pixels. This metric is the 3-D counterpart of SM_CXBORDER.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border.
            This value is the same as SM_CXDLGFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXFOCUSBORDER">
            <summary>
            The width of the left and right edges of the focus rectangle that the DrawFocusRectdraws.
            This value is in pixels.
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXFRAME">
            <summary>
            This value is the same as SM_CXSIZEFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXFULLSCREEN">
            <summary>
            The width of the client area for a full-screen window on the primary display monitor, in pixels.
            To get the coordinates of the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars,
            call the SystemParametersInfofunction with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXHSCROLL">
            <summary>
            The width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXHTHUMB">
            <summary>
            The width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXICON">
            <summary>
            The default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions
            that SM_CXICON and SM_CYICON specifies.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXICONSPACING">
            <summary>
            The width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMAXIMIZED">
            <summary>
            The default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMAXTRACK">
            <summary>
            The default maximum width of a window that has a caption and sizing borders, in pixels.
            This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions.
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMENUCHECK">
            <summary>
            The width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMENUSIZE">
            <summary>
            The width of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMIN">
            <summary>
            The minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMINIMIZED">
            <summary>
            The width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMINSPACING">
            <summary>
            The width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged.
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXMINTRACK">
            <summary>
            The minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions.
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXPADDEDBORDER">
            <summary>
            The amount of border padding for captioned windows, in pixels. Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXSCREEN">
            <summary>
            The width of the screen of the primary display monitor, in pixels. This is the same value obtained by calling
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXSIZE">
            <summary>
            The width of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels.
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border.
            This value is the same as SM_CXFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXSMICON">
            <summary>
            The recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXSMSIZE">
            <summary>
            The width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXVIRTUALSCREEN">
            <summary>
            The width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors.
            The SM_XVIRTUALSCREEN metric is the coordinates for the left side of the virtual screen.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CXVSCROLL">
            <summary>
            The width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYBORDER">
            <summary>
            The height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYCAPTION">
            <summary>
            The height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYCURSOR">
            <summary>
            The height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYDLGFRAME">
            <summary>
            This value is the same as SM_CYFIXEDFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYDOUBLECLK">
            <summary>
            The height of the rectangle around the location of a first click in a double-click sequence, in pixels.
            The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider
            the two clicks a double-click. The two clicks must also occur within a specified time. To set the height of the double-click
            rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKHEIGHT.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYDRAG">
            <summary>
            The number of pixels above and below a mouse-down point that the mouse pointer can move before a drag operation begins.
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            If this value is negative, it is subtracted from above the mouse-down point and added below it.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYEDGE">
            <summary>
            The height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border.
            This value is the same as SM_CYDLGFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYFOCUSBORDER">
            <summary>
            The height of the top and bottom edges of the focus rectangle drawn byDrawFocusRect.
            This value is in pixels.
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYFRAME">
            <summary>
            This value is the same as SM_CYSIZEFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYFULLSCREEN">
            <summary>
            The height of the client area for a full-screen window on the primary display monitor, in pixels.
            To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars,
            call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYHSCROLL">
            <summary>
            The height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYICON">
            <summary>
            The default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYICONSPACING">
            <summary>
            The height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMAXIMIZED">
            <summary>
            The default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMAXTRACK">
            <summary>
            The default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop.
            The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing
            the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMENU">
            <summary>
            The height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMENUCHECK">
            <summary>
            The height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMENUSIZE">
            <summary>
            The height of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMIN">
            <summary>
            The minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMINIMIZED">
            <summary>
            The height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMINSPACING">
            <summary>
            The height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged.
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYMINTRACK">
            <summary>
            The minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions.
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYSCREEN">
            <summary>
            The height of the screen of the primary display monitor, in pixels. This is the same value obtained by calling
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYSIZE">
            <summary>
            The height of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels.
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border.
            This value is the same as SM_CYFRAME.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYSMCAPTION">
            <summary>
            The height of a small caption, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYSMICON">
            <summary>
            The recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYSMSIZE">
            <summary>
            The height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYVIRTUALSCREEN">
            <summary>
            The height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors.
            The SM_YVIRTUALSCREEN metric is the coordinates for the top of the virtual screen.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYVSCROLL">
            <summary>
            The height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_CYVTHUMB">
            <summary>
            The height of the thumb box in a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_DIGITIZER">
            <summary>
            Nonzero if the current operating system is Windows 7 or Windows Server 2008 R2 and the Tablet PC Input
            service is started; otherwise, 0. The return value is a bitmask that specifies the type of digitizer input supported by the device.
            For more information, see Remarks.
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_IMMENABLED">
            <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; otherwise, 0.
            SM_IMMENABLED indicates whether the system is ready to use a Unicode-based IME on a Unicode application.
            To ensure that a language-dependent IME works, check SM_DBCSENABLED and the system ANSI code page.
            Otherwise the ANSI-to-Unicode conversion may not be performed correctly, or some components like fonts
            or registry settings may not be present.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MAXIMUMTOUCHES">
            <summary>
            Nonzero if there are digitizers in the system; otherwise, 0. SM_MAXIMUMTOUCHES returns the aggregate maximum of the
            maximum number of contacts supported by every digitizer in the system. If the system has only single-touch digitizers,
            the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts
            the hardware can provide. Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, 0 if not.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; 0 if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, 0 if not.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; otherwise, 0. This value is rarely zero, because of support for virtual mice and because
            some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MOUSEHORIZONTALWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a horizontal scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a vertical scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_NETWORK">
            <summary>
            The least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_REMOTECONTROL">
            <summary>
            This system metric is used in a Terminal Services environment to determine if the current Terminal Server session is
            being remotely controlled. Its value is nonzero if the current session is remotely controlled; otherwise, 0.
            You can use terminal services management tools such as Terminal Services Manager (tsadmin.msc) and shadow.exe to
            control a remote session. When a session is being remotely controlled, another user can view the contents of that session
            and potentially interact with it.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_REMOTESESSION">
            <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services
            client session, the return value is nonzero. If the calling process is associated with the Terminal Services console session,
            the return value is 0.
            Windows Server 2003 and Windows XP:  The console session is not necessarily the physical console.
            For more information, seeWTSGetActiveConsoleSessionId.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SAMEDISPLAYFORMAT">
            <summary>
            Nonzero if all the display monitors have the same color format, otherwise, 0. Two displays can have the same bit depth,
            but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits,
            or those bits can be located in different places in a pixel color value.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SECURE">
            <summary>
            This system metric should be ignored; it always returns 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SERVERR2">
            <summary>
            The build number if the system is Windows Server 2003 R2; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present
            the information only in audible form; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SHUTTINGDOWN">
            <summary>
            Nonzero if the current session is shutting down; otherwise, 0. Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_STARTER">
            <summary>
            Nonzero if the current operating system is Windows 7 Starter Edition, Windows Vista Starter, or Windows XP Starter Edition; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_SWAPBUTTON">
            <summary>
            Nonzero if the meanings of the left and right mouse buttons are swapped; otherwise, 0.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition or if the current operating system is Windows Vista
            or Windows 7 and the Tablet PC Input service is started; otherwise, 0. The SM_DIGITIZER setting indicates the type of digitizer
            input supported by a device running Windows 7 or Windows Server 2008 R2. For more information, see Remarks.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_XVIRTUALSCREEN">
            <summary>
            The coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors.
            The SM_CXVIRTUALSCREEN metric is the width of the virtual screen.
            </summary>
        </member>
        <member name="F:Fusion.Utils.Display.WindowProxy.SystemMetric.SM_YVIRTUALSCREEN">
            <summary>
            The coordinates for the top of the virtual screen. The virtual screen is the bounding rectangle of all display monitors.
            The SM_CYVIRTUALSCREEN metric is the height of the virtual screen.
            </summary>
        </member>
        <member name="T:Fusion.Utils.VersionHelper">
            <summary>
            Provides common helper methods for <see cref="T:System.Version"/>.
            </summary>
        </member>
        <member name="M:Fusion.Utils.VersionHelper.GetOperatingSystemVersion">
            <summary>
            Gets the operating system version.
            </summary>
            <returns>The <see cref="T:System.Version"/>.</returns>
        </member>
        <member name="T:Fusion.Utils.WindowHelper">
            <summary>
            Provides common helper methods for <see cref="T:System.Windows.Window"/>.
            </summary>
        </member>
        <member name="F:Fusion.Utils.WindowHelper.UpdateDelay">
            <summary>
            Specifies the <see cref="T:System.TimeSpan"/> that will be waited for after a window's boundaries have changed until the off-screen check is done.
            </summary>
        </member>
        <member name="F:Fusion.Utils.WindowHelper.Timers">
            <summary>
            Internal collection of update timers for each window being protected.
            </summary>
        </member>
        <member name="F:Fusion.Utils.WindowHelper.cachedVersionInfo">
            <summary>
            Stores the operating system version info.
            </summary>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.CheckOffScreen(System.Windows.Window)">
            <summary>
            Detects if the given <see cref="T:System.Windows.Window"/> is off-screen, and restores its position to th nearest visible display.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.EnableOffScreenProtection(System.Windows.Window)">
            <summary>
            Enables off-screen protection for the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.SubscribeEvents(System.Windows.Window)">
            <summary>
            Subscribes the events.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.UnsubscribeEvents(System.Windows.Window)">
            <summary>
            Unsubscribes the events.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.OnWindowSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the <see cref="!:Window.SizeChanged"/> event occurs.
            </summary>
            <param name="sender">The sender.</param>
            <param name="sizeChangedEventArgs">The <see cref="T:System.Windows.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.OnWindowLocationChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Window.LocationChanged"/> event occurs.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.OnWindowClosed(System.Object,System.EventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Window.Closed"/> event occurs.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.OnWindowIsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="!:Window.IsVisibleChanged"/> event occurs.
            </summary>
            <param name="sender">The sender.</param>
            <param name="dependencyPropertyChangedEventArgs">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.ScheduleOffScreenCheck(System.Windows.Window)">
            <summary>
            Schedules an off-screen check that will occur after the time specified by <see cref="F:Fusion.Utils.WindowHelper.UpdateDelay"/> has elapsed.
            New scheduling for the same <see cref="T:System.Windows.Window"/> will reset its timer.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Gets the distance between two <see cref="T:System.Windows.Point"/>.
            </summary>
            <param name="point1">The first point.</param>
            <param name="point2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Fusion.Utils.WindowHelper.RectToRectDistance(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Gets the minimum distance between two <see cref="T:System.Windows.Rect"/>.
            </summary>
            <param name="rect1">The first rectangle.</param>
            <param name="rect2">The second rectangle.</param>
            <returns>The distance.</returns>
        </member>
        <member name="T:Fusion.Vector">
            <summary>
            Provides methods for working with vectors.
            </summary>
        </member>
        <member name="M:Fusion.Vector.Dot(Fusion.Float2,Fusion.Float2)">
            <summary>
            Returns the dot product of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Vector.Dot(Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns the dot product of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Vector.Dot(Fusion.Float4,Fusion.Float4)">
            <summary>
            Returns the dot product of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Vector.Cross(Fusion.Float3,Fusion.Float3)">
            <summary>
            Returns the cross product of the two vectors.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The cross product of the two vectors.</returns>
        </member>
        <member name="M:Fusion.Vector.Magnitude(Fusion.Float2)">
            <summary>
            Returns the magnitude of the vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The magnitude of the vector.</returns>
        </member>
        <member name="M:Fusion.Vector.Magnitude(Fusion.Float3)">
            <summary>
            Returns the magnitude of the vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The magnitude of the vector.</returns>
        </member>
        <member name="M:Fusion.Vector.Magnitude(Fusion.Float4)">
            <summary>
            Returns the magnitude of the vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The magnitude of the vector.</returns>
        </member>
        <member name="M:Fusion.Vector.MagnitudeSquared(Fusion.Float2)">
            <summary>
            Returns the squared magnitude of the vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The squared magnitude of the vector.</returns>
        </member>
        <member name="M:Fusion.Vector.MagnitudeSquared(Fusion.Float3)">
            <summary>
            Returns the squared magnitude of the vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The squared magnitude of the vector.</returns>
        </member>
        <member name="M:Fusion.Vector.MagnitudeSquared(Fusion.Float4)">
            <summary>
            Returns the squared magnitude of the vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The squared magnitude of the vector.</returns>
        </member>
        <member name="M:Fusion.Vector.Normalize(Fusion.Float2)">
            <summary>
            Returns the vector with the magnitude normalized to one.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The vector with the magnitude normalized to one.</returns>
        </member>
        <member name="M:Fusion.Vector.Normalize(Fusion.Float3)">
            <summary>
            Returns the vector with the magnitude normalized to one.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The vector with the magnitude normalized to one.</returns>
        </member>
        <member name="M:Fusion.Vector.Normalize(Fusion.Float4)">
            <summary>
            Returns the vector with the magnitude normalized to one.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The vector with the magnitude normalized to one.</returns>
        </member>
        <member name="T:Fusion.ViewModel">
            <summary>
            An abstract base class for view models. View model acts as a connection between the model (data) and the view (user interface elements).
            </summary>
        </member>
        <member name="F:Fusion.ViewModel.IsInDesignMode">
            <summary>
            Indicates whether the view models are being used in a design tool.
            </summary>
        </member>
        <member name="F:Fusion.ViewModel.host">
            <summary>
            The host service provider.
            </summary>
        </member>
        <member name="P:Fusion.ViewModel.Host">
            <summary>
            Gets or sets the host service provider.
            </summary>
            <value>The host service provider.</value>
        </member>
        <member name="M:Fusion.ViewModel.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyDown event from the view.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.ViewModel.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyUp event from the view.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Fusion.ViewModel.Initialize">
            <summary>
            Initializes the view model. This method is called after the <see cref="P:Fusion.ViewModel.Host" /> property is set.
            </summary>
        </member>
        <member name="T:Fusion.Volume">
            <summary>
            Volume quantity.
            </summary>
        </member>
        <member name="F:Fusion.Volume.Zero">
            <summary>
            The zero volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimeter">
            <summary>
            One cubic millimeter volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicCentimeter">
            <summary>
            One cubic centimeter volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMeter">
            <summary>
            One cubic meter volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicInch">
            <summary>
            One cubic inch volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicFoot">
            <summary>
            One cubic foot volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicYard">
            <summary>
            One cubic yard volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.Liter">
            <summary>
            One liter volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.Gallon">
            <summary>
            One gallon volume.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInCubicCentimeter">
            <summary>
            The cubic millimeters in one cubic centimeter.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInCubicMeter">
            <summary>
            The cubic millimeters in one cubic meter.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInCubicInch">
            <summary>
            The cubic millimeters in one cubic inch.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInCubicFoot">
            <summary>
            The cubic millimeters in one cubic foot.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInCubicYard">
            <summary>
            The cubic millimeters in one cubic yard.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInLiter">
            <summary>
            The cubic millimeters in one liter.
            </summary>
        </member>
        <member name="F:Fusion.Volume.CubicMillimetersInGallon">
            <summary>
            The cubic millimeters in one US gallon.
            </summary>
        </member>
        <member name="M:Fusion.Volume.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.Volume" /> struct.
            </summary>
            <param name="cubicMillimeters">The volume in cubic millimeters.</param>
        </member>
        <member name="P:Fusion.Volume.CubicMillimeters">
            <summary>
            Gets the volume in cubic millimeters.
            </summary>
            <value>The volume in cubic millimeters.</value>
        </member>
        <member name="M:Fusion.Volume.op_Equality(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Inequality(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_LessThan(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the &lt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_LessThanOrEqual(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the &lt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_GreaterThan(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the &gt; operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_GreaterThanOrEqual(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the &gt;= operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Addition(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the + operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_UnaryNegation(Fusion.Volume)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Subtraction(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the - operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Multiply(Fusion.Volume,System.Double)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Multiply(System.Double,Fusion.Volume)">
            <summary>
            Implements the * operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Division(Fusion.Volume,System.Double)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Division(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the / operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.op_Modulus(Fusion.Volume,Fusion.Volume)">
            <summary>
            Implements the % operator.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Fusion.Volume.IsInfinity(Fusion.Volume)">
            <summary>
            Determines whether the volume represents an infinity.
            </summary>
            <param name="volume">The volume.</param>
            <returns>True if the volume represents an infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.IsPositiveInfinity(Fusion.Volume)">
            <summary>
            Determines whether the volume represents a positive infinity.
            </summary>
            <param name="volume">The volume.</param>
            <returns>True if the volume represents a positive infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.IsNegativeInfinity(Fusion.Volume)">
            <summary>
            Determines whether the volume represents a negative infinity.
            </summary>
            <param name="volume">The volume.</param>
            <returns>True if the volume represents a negative infinity, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.IsNaN(Fusion.Volume)">
            <summary>
            Determines whether the volume represents a value that is not a number.
            </summary>
            <param name="volume">The volume.</param>
            <returns>True if the volume represents a value that is not a number, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.Abs(Fusion.Volume)">
            <summary>
            Returns the absolute value of the volume.
            </summary>
            <param name="volume">The volume.</param>
            <returns>The absolute value of the volume.</returns>
        </member>
        <member name="M:Fusion.Volume.Max(Fusion.Volume,Fusion.Volume)">
            <summary>
            Returns the maximum value of two volumes.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The maximum value of two volumes.</returns>
        </member>
        <member name="M:Fusion.Volume.Min(Fusion.Volume,Fusion.Volume)">
            <summary>
            Returns the minimum value of two volumes.
            </summary>
            <param name="a">The left operand.</param>
            <param name="b">The right operand.</param>
            <returns>The minimum value of two volumes.</returns>
        </member>
        <member name="M:Fusion.Volume.Round(Fusion.Volume,Fusion.Volume,Fusion.RoundingMode)">
            <summary>
            Returns the volume rounded to the specified precision unit.
            </summary>
            <param name="volume">The volume.</param>
            <param name="precision">The precision unit.</param>
            <param name="roundingMode">The rounding mode.</param>
            <returns>The rounded volume.</returns>
        </member>
        <member name="M:Fusion.Volume.Sign(Fusion.Volume)">
            <summary>
            Returns the sign of the volume value.
            </summary>
            <param name="volume">The volume.</param>
            <returns>The sign of the volume value.</returns>
        </member>
        <member name="M:Fusion.Volume.From(System.Double,Fusion.VolumeUnit)">
            <summary>
            Creates an instance of the <see cref="T:Fusion.Volume" /> struct from the specified volume and unit.
            </summary>
            <param name="volume">The volume in the specified units.</param>
            <param name="volumeUnit">The volume unit.</param>
            <returns>The <see cref="T:Fusion.Volume" /> struct with the specified volume.</returns>
        </member>
        <member name="M:Fusion.Volume.CompareTo(System.Object)">
            <summary>
            Compares the volume to the specified object.
            </summary>
            <param name="other">The other object.</param>
            <returns>Integer value that indicates the relative order of the objects.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the other object is not of type <see cref="T:Fusion.Volume" />.</exception>
        </member>
        <member name="M:Fusion.Volume.CompareTo(Fusion.Volume)">
            <summary>
            Compares the two volumes.
            </summary>
            <param name="other">The other volume.</param>
            <returns>Integer value that indicates the relative order of the two volumes.</returns>
        </member>
        <member name="M:Fusion.Volume.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.Equals(Fusion.Volume)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the <paramref name="other" /> parameter, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Fusion.Volume.Near(Fusion.Volume,System.Int32)">
            <summary>
            Determines whether the two volumes are near to each other.
            </summary>
            <param name="other">The other volume.</param>
            <param name="allowedErrorInUnitsInLastPlace">The allowed error in units in the last place (ULP). The default value is 10.</param>
            <returns>True if the volumes are near to each other, otherwise false.</returns>
        </member>
        <member name="M:Fusion.Volume.To(Fusion.VolumeUnit)">
            <summary>
            Converts the <see cref="T:Fusion.Volume" /> struct to the specified volume units.
            </summary>
            <param name="volumeUnit">The volume unit.</param>
            <returns>The volume in the specified units.</returns>
        </member>
        <member name="M:Fusion.Volume.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Fusion.Volume.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Fusion.VolumeUnit">
            <summary>
            Volume units.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.CubicMillimeter">
            <summary>
            Cubic millimeter volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.CubicCentimeter">
            <summary>
            Cubic centimeter volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.CubicMeter">
            <summary>
            Cubic meter volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.CubicInch">
            <summary>
            Cubic inch volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.CubicFoot">
            <summary>
            Cubic foot volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.CubicYard">
            <summary>
            Cubic yard volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.Liter">
            <summary>
            Liter volume unit.
            </summary>
        </member>
        <member name="F:Fusion.VolumeUnit.Gallon">
            <summary>
            US gallon volume unit.
            </summary>
        </member>
        <member name="T:Fusion.WebViewModel">
            <summary>
            An abstract base class for web view models.
            </summary>
            <remarks>
            The public methods annotated with <see cref="T:Fusion.WebViewModel.ScriptMethodAttribute"/> can be invoked from a script.
            </remarks>
            <example>
            <code>
            // Javascript - The first argument is the method name (case insensitive), the rest are the method arguments.
            //              The last argument is the callback if the method returns a value.
            Fusion.invoke('SomeMethod', 'value1', 'value2');
            
            // All script functions are callable from C#
            function otherMethod(data)
            {
            }
            </code>
            
            <code>
            // C# - The method must be annotated with ScriptMethodAttribute. The method parameter and return types can be boolean,
            //      integer, double, string, enum and complex object types. Methods can be async and return a Task.
            [ScriptMethod]
            public void SomeMethod(bool arg1, int arg2, double arg3, string arg4, SomeObject arg5)
            {
                // Call a script function.
                this.WebView.Evaluate("otherMethod('some data')");
            }
            </code>
            </example>
        </member>
        <member name="F:Fusion.WebViewModel.scriptMethods">
            <summary>
            The script methods.
            </summary>
        </member>
        <member name="M:Fusion.WebViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusion.WebViewModel" /> class.
            </summary>
        </member>
        <member name="P:Fusion.WebViewModel.WebView">
            <summary>
            Gets or sets the web view controller.
            </summary>
            <value>The web view controller.</value>
        </member>
        <member name="M:Fusion.WebViewModel.Navigating(System.String)">
            <summary>
            Called when the web view is navigating to a page.
            </summary>
            <param name="url">The page URL.</param>
            <returns>True if the navigation is allowed, otherwise false.</returns>
        </member>
        <member name="M:Fusion.WebViewModel.Navigated(System.String)">
            <summary>
            Called when the web view has navigated to a page.
            </summary>
            <param name="url">The page URL.</param>
        </member>
        <member name="M:Fusion.WebViewModel.GenerateScriptInterface">
            <summary>
            Generates the script interface.
            </summary>
            <returns>The script interface definition.</returns>
        </member>
        <member name="M:Fusion.WebViewModel.Dispatch(System.String[])">
            <summary>
            Dispatches a message.
            </summary>
            <param name="args">The message arguments.</param>
        </member>
        <member name="M:Fusion.WebViewModel.Respond(System.String,System.Object)">
            <summary>
            Responds to a dispatched message.
            </summary>
            <param name="token">The dispatch token.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Fusion.WebViewModel.Escape(System.String)">
            <summary>
            Escapes the text.
            </summary>
            <param name="text">The text to escape.</param>
            <returns>The escaped text.</returns>
        </member>
        <member name="M:Fusion.WebViewModel.EncodeAsJson(System.Type)">
            <summary>
            Determines whether the type requires JSON encoding.
            </summary>
            <param name="type">The type.</param>
            <returns>True if the type requires JSON encoding, otherwise false.</returns>
        </member>
        <member name="M:Fusion.WebViewModel.ConvertParameter(System.String,System.Type)">
            <summary>
            Converts a parameter from a string.
            </summary>
            <param name="text">The string.</param>
            <param name="type">The parameter type.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Fusion.WebViewModel.ConvertResult(System.Object)">
            <summary>
            Converts the result into a string.
            </summary>
            <param name="result">The result.</param>
            <returns>The string.</returns>
        </member>
        <member name="T:Fusion.WebViewModel.ScriptMethodAttribute">
            <summary>
            Marks the annotated methods as callable from a script.
            </summary>
        </member>
        <member name="P:Fusion.WebViewModel.ScriptMethodAttribute.Name">
            <summary>
            Gets or sets the method name. The default value is the name of the annotated method.
            </summary>
            <value>The method name.</value>
        </member>
        <member name="P:Fusion.WebViewModel.ScriptMethodAttribute.Namespace">
            <summary>
            Gets or sets the method namespace. The default value is "Host".
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="T:Fusion.WindowViewModel">
            <summary>
            An abstract base class for window view models. View model acts as a connection between the model (data) and the view (user interface elements).
            </summary>
        </member>
        <member name="F:Fusion.WindowViewModel.window">
            <summary>
            The window controller.
            </summary>
        </member>
        <member name="P:Fusion.WindowViewModel.Window">
            <summary>
            Gets or sets the window controller.
            </summary>
            <value>The window controller.</value>
        </member>
        <member name="M:Fusion.WindowViewModel.WindowOpened">
            <summary>
            Called when the window has been opened.
            </summary>
        </member>
        <member name="M:Fusion.WindowViewModel.WindowClosed">
            <summary>
            Called when the window has been closed.
            </summary>
        </member>
        <member name="T:Fusion.WarpingUnit">
            <summary>
            Warping units.
            </summary>
        </member>
        <member name="F:Fusion.WarpingUnit.Millimeter">
            <summary>
            Millimeter length unit.
            </summary>
        </member>
        <member name="F:Fusion.WarpingUnit.Centimeter">
            <summary>
            Centimeter length unit.
            </summary>
        </member>
        <member name="F:Fusion.WarpingUnit.Inch">
            <summary>
            Inch length unit.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
